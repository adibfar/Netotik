@model Netotik.ViewModels.Identity.UserClient.UserEditModel
@{
    ViewBag.Title = Netotik.Resources.Captions.EditUser;
    var ClientPermissions = ViewBag.ClientPermissions as List<SelectListItem>;

    Layout = "~/Views/Shared/_Layout.cshtml";
}
<section class="flexbox-container">
    <div class="row">
        <div class="col-md-12">
            @using (Html.BeginForm(MVC.Client.Home.ActionNames.UserEdit_Save, MVC.Client.Home.Name, FormMethod.Post,
                                                                    htmlAttributes: new { @class = "form cmxform form-horizontal tasi-form", enctype = "multipart/form-data", id = "form" }))
            {
                @Html.AntiForgeryToken()
                <div class="card">
                    <div class="card-header">
                        <button name="actionType" value="@Netotik.Common.Controller.ActionType.Save" class="btn btn-social width-150 btn-instagram" onclick="AjaxForm.Post(this, 'form')" data-loading-text="در حال ارسال اطلاعات">
                            <span class="icon-checkmark2 font-medium-4"></span>
                            @Netotik.Resources.Captions.Save
                        </button>
                        <a value="@Netotik.Resources.Captions.Back" class="btn btn-social btn-instagram" href="@Url.Action(MVC.Client.Home.Index())">
                            <span class="icon-reply font-medium-4"></span>
                            @Netotik.Resources.Captions.Back
                        </a>
                        <div class="col-md-12">
                            @Html.ValidationSummary(false, "", htmlAttributes: new { @class = "text-danger" })
                            <span class="text-danger">@Netotik.Resources.Captions.JustEnglish</span>
                        </div>
                    </div>
                    @Html.HiddenFor(model=>model.id)
                    <div class="card-body">
                        <div class="card-block">
                            <div class="row">
                                <div class="col-md-3">
                                    <div class="form-group has-feedback has-icon-left">
                                        @Html.LabelFor(m => m.first_name)
                                        <div class="position-relative has-icon-left">
                                            @Html.TextBoxFor(m => m.first_name, new { @class = "form-control" })
                                            <div class="form-control-position">
                                                <i class="icon-head"></i>
                                            </div>
                                            @Html.ValidationMessageFor(model => model.first_name, "", htmlAttributes: new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="form-group has-feedback has-icon-left">
                                        @Html.LabelFor(m => m.last_name)
                                        <div class="position-relative has-icon-left">
                                            @Html.TextBoxFor(m => m.last_name, new { @class = "form-control" })
                                            <div class="form-control-position">
                                                <i class="icon-user"></i>
                                            </div>
                                            @Html.ValidationMessageFor(model => model.last_name, "", htmlAttributes: new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="form-group has-feedback has-icon-left">
                                        @Html.LabelFor(m => m.phone)
                                        <div class="position-relative has-icon-left">
                                            @Html.TextBoxFor(m => m.phone, new { @class = "form-control" })
                                            <div class="form-control-position">
                                                <i class="icon-phone"></i>
                                            </div>
                                            @Html.ValidationMessageFor(model => model.phone, "", htmlAttributes: new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="form-group has-feedback has-icon-left">
                                        @Html.LabelFor(m => m.email)
                                        <div class="position-relative has-icon-left">
                                            @Html.TextBoxFor(m => m.email, new { @class = "form-control" })
                                            <div class="form-control-position">
                                                <i class="icon-email"></i>
                                            </div>
                                            @Html.ValidationMessageFor(model => model.email, "", htmlAttributes: new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group has-feedback has-icon-left">
                                        @Html.LabelFor(m => m.username)
                                        <div class="position-relative has-icon-left">
                                            @Html.TextBoxFor(m => m.username, new { @class = "form-control" })
                                            <div class="form-control-position">
                                                <i class="icon-user-tie"></i>
                                            </div>
                                            @Html.ValidationMessageFor(model => model.username, "", htmlAttributes: new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group has-feedback has-icon-left">
                                        @Html.LabelFor(m => m.location)
                                        <div class="position-relative has-icon-left">
                                            @Html.TextBoxFor(m => m.location, new { @class = "form-control" })
                                            <div class="form-control-position">
                                                <i class="icon-location"></i>
                                            </div>
                                            @Html.ValidationMessageFor(model => model.location, "", htmlAttributes: new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group has-feedback has-icon-left">
                                        @Html.LabelFor(m => m.comment)
                                        <div class="position-relative has-icon-left">
                                            @Html.TextBoxFor(m => m.comment, new { @class = "form-control" })
                                            <div class="form-control-position">
                                                <i class="icon-comments"></i>
                                            </div>
                                            @Html.ValidationMessageFor(model => model.comment, "", htmlAttributes: new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</section>