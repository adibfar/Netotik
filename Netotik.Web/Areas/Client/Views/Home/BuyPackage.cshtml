@model Netotik.ViewModels.Identity.UserClient.UserEditModel
@using Netotik.Resources;
@{
    ViewBag.Title = Netotik.Resources.Captions.BuyPlan;
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="card">
    <div class="card-body">
        <div class="card-block">
            <div class="row">
                <section class="section">
                    <div class="row-fluid">
                        <div class="pricing-table row-fluid text-center">
                            @foreach (var item in ViewBag.profiles)
                            {
                                <div class="span4">
                                    <div class="plan prefered">
                                        <div class="plan-name">
                                            <h2>@item.name</h2>
                                        </div>
                                        <div class="plan-price">
                                            <b>@(item.price == "0" ? Captions.Free : item.price)</b> @Captions.Toman
                                        </div>
                                        <div class="plan-details">
                                            <div>
                                                <b>
                                                    @foreach (var limit in ViewBag.limitions)
                                                    {
                                                        if (limit.name == item.name)
                                                        {
                                                            ulong temp
                                                                = ulong.Parse(limit.transfer_limit)
                                                                + ulong.Parse(limit.upload_limit)
                                                                + ulong.Parse(limit.download_limit);
                                                            @(temp.ToString() == "0" ? Captions.Unlimited : (temp / 1048576).ToString() + "MB")
                                                        }
                                                    }
                                                </b> حجم
                                            </div>
                                            <div>
                                                <b>
                                                    @foreach (var limit in ViewBag.limitions)
                                                    {
                                                        if (limit.name == item.name)
                                                        {
                                                            @(limit.rate_limit_rx.ToString() == "" ? Captions.Unlimited : (ulong.Parse(limit.rate_limit_rx.ToString())/ 1048576) + "Mb")
                                                            <b>/</b>
                                                                        @(limit.rate_limit_tx.ToString() == "" ? Captions.Unlimited : (ulong.Parse(limit.rate_limit_tx.ToString())/1048576) + "Mb")
                                                        }
                                                    }
                                                </b> @Captions.DownloadSpeedLimit/@Captions.UploadSpeedLimit
                                            </div>
                                            <div>
                                                <b>@(item.validity.ToString() == "0s" ? Captions.Unlimited : item.validity.ToString().Replace("d", Captions.Day).Replace("w", Captions.Week).Replace("h", Captions.Hour).Replace("m", Captions.Minute).Replace("s", Captions.Secend))</b> اعتبار
                                            </div>
                                            <div>
                                                <b>
                                                    @foreach (var limit in ViewBag.limitions)
                                                    {
                                                        if (limit.name == item.name)
                                                        {
                                                            @(limit.uptime_limit.ToString() == "0s" ? Captions.Unlimited : limit.uptime_limit.ToString().Replace("d", Captions.Day).Replace("w", Captions.Week).Replace("h", Captions.Hour).Replace("m", Captions.Minute).Replace("s", Captions.Secend))
                                                        }
                                                    }
                                                </b> @Captions.OnlineTime
                                            </div>
                                        </div>
                                        <div class="plan-action">
                                            <a onclick="Buy('@item.name');" class="btn btn-success btn-block btn-large">@Captions.BuyPlan</a>
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                </section>
            </div>
        </div>
    </div>
</div>

@section DownScript{
    <script type="text/javascript">

        function Buy(pname) {
            PostData("@Url.Action(MVC.Client.Home.BuyPackage())", { pname: pname });
        }

    </script>
}