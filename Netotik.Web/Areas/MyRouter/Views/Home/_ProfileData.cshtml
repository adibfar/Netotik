@model Netotik.ViewModels.Identity.UserRouter.ProfileModel
@{
    var clientPermissions = ViewBag.ClientPermissions as List<SelectListItem>;
    Layout = null;
}

@using (Html.BeginForm(MVC.MyRouter.Home.ActionNames.UpdateProfile, MVC.MyRouter.Home.Name, FormMethod.Post,
                                             htmlAttributes: new { @class = "form-horizontal", enctype = "multipart/form-data", id = "form" }))
{
    @Html.AntiForgeryToken()
    <div class="card">
        <div class="card-header">
            <button name="actionType" value="@Netotik.Common.Controller.ActionType.Save" class="btn btn-social width-150 btn-instagram" onclick="AjaxForm.Post(this, 'form')" data-loading-text="در حال ارسال اطلاعات">
                <span class="icon-checkmark2 font-medium-4"></span>
                @Netotik.Resources.Captions.Save
            </button>
        </div>
        @Html.HiddenFor(m=>m.Id)
        @Html.HiddenFor(m => m.UserResellerId)
        <div class="card-body">
            <div class="card-block">
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group has-icon-left">
                            @Html.LabelFor(m => m.FirstName)
                            <div class="position-relative has-icon-left">
                                @Html.TextBoxFor(m => m.FirstName, new { @class = "form-control" })
                                <div class="form-control-position">
                                    <i class="icon-head"></i>
                                </div>
                                @Html.ValidationMessageFor(model => model.FirstName, "", htmlAttributes: new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group has-feedback has-icon-left">
                            @Html.LabelFor(m => m.RouterCode)
                            <div class="position-relative has-icon-left input-group ltr">
                                @Html.TextBoxFor(m => m.RouterCode, new { @class = "form-control ltr" })
                                <span class="input-group-addon">/https://netotik.com</span>
                                
                            </div>
                            @Html.ValidationMessageFor(model => model.RouterCode, "", htmlAttributes: new { @class = "text-danger" })
                        </div>
                    </div>
                   
                </div>
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group has-icon-left">
                            @Html.LabelFor(m => m.PhoneNumber)
                            <div class="position-relative has-icon-left">
                                @Html.TextBoxFor(m => m.PhoneNumber, new { @class = "form-control" })
                                <div class="form-control-position">
                                    <i class="icon-phone"></i>
                                </div>
                                @Html.ValidationMessageFor(model => model.PhoneNumber, "", htmlAttributes: new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group has-feedback has-icon-left">
                            @Html.LabelFor(m => m.Email)
                            <div class="position-relative has-icon-left">
                                @Html.TextBoxFor(m => m.Email, new { @class = "form-control ltr" })
                                <div class="form-control-position">
                                    <i class="icon-mail"></i>
                                </div>
                                @Html.ValidationMessageFor(model => model.Email, "", htmlAttributes: new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group has-feedback has-icon-left">
                            @Html.LabelFor(m => m.NationalCode)
                            <div class="position-relative has-icon-left">
                                @Html.TextBoxFor(m => m.NationalCode, new { @class = "form-control" })
                                <div class="form-control-position">
                                    <i class="icon-user-tie"></i>
                                </div>
                                @Html.ValidationMessageFor(model => model.NationalCode, "", htmlAttributes: new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group has-feedback has-icon-left">
                            @Html.LabelFor(m => m.ZarinPalMerchantId)
                            <div class="position-relative has-icon-left">
                                @Html.TextBoxFor(m => m.ZarinPalMerchantId, new { @class = "form-control ltr" })
                                <div class="form-control-position">
                                    <i class="icon-office"></i>
                                </div>
                                @Html.ValidationMessageFor(model => model.ZarinPalMerchantId, "", htmlAttributes: new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}