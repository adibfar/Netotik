@model Netotik.ViewModels.Identity.UserCompany.ChangePasswordModel
@{
    ViewBag.Title = Netotik.Resources.Captions.ChangePassword;
}
<section class="flexbox-container">
    <div class="row">
        <div class="col-md-12">
            @using (Html.BeginForm(MVC.Reseller.Company.ActionNames.ChangePassword, MVC.Reseller.Company.Name, null, FormMethod.Post, htmlAttributes: new { @class = "cmxform form-horizontal tasi-form", id = "form" }))
            {
                @Html.AntiForgeryToken()
                <div class="card">
                    <div class="card-header">
                        <button name="actionType" value="@Netotik.Common.Controller.ActionType.Save" class="btn btn-social width-100 btn-instagram" onclick="AjaxForm.Post(this, 'form')" data-loading-text="در حال ارسال اطلاعات">
                            <span class="icon-checkmark2 font-medium-4"></span>
                            @Captions.Save
                        </button>
                    </div>
                    <div class="card-body">
                        <div class="card-block">
                            <div class="row">
                                <div class="col-md-4">
                                    <div class="form-group has-icon-left">
                                        @Html.LabelFor(m => m.OldPassword)
                                        <div class="position-relative has-icon-left">
                                            @Html.TextBoxFor(m => m.OldPassword, new { @class = "form-control" })
                                            <div class="form-control-position">
                                                <i class="icon-key2"></i>
                                            </div>
                                            @Html.ValidationMessageFor(model => model.OldPassword, "", htmlAttributes: new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group has-feedback has-icon-left">
                                        @Html.LabelFor(m => m.Password)
                                        <div class="position-relative has-icon-left">
                                            @Html.TextBoxFor(m => m.Password, new { @class = "form-control" })
                                            <div class="form-control-position">
                                                <i class="icon-key2"></i>
                                            </div>
                                            @Html.ValidationMessageFor(model => model.Password, "", htmlAttributes: new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group has-feedback has-icon-left">
                                        @Html.LabelFor(m => m.ConfirmPassword)
                                        <div class="position-relative has-icon-left">
                                            @Html.TextBoxFor(m => m.ConfirmPassword, new { @class = "form-control" })
                                            <div class="form-control-position">
                                                <i class="icon-key2"></i>
                                            </div>
                                            @Html.ValidationMessageFor(model => model.ConfirmPassword, "", htmlAttributes: new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }

        </div>
    </div>
</section>

