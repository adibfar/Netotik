@using System.Globalization
@model DateTime?
@{
    Func<DateTime, string> toPersianDate = date =>
    {
        var dateTime = new DateTime(date.Year, date.Month, date.Day, new GregorianCalendar());
        var persianCalendar = new PersianCalendar();
        return string.Format("{0}/{1}/{2}",
            persianCalendar.GetYear(dateTime),
            persianCalendar.GetMonth(dateTime).ToString("00"),
            persianCalendar.GetDayOfMonth(dateTime).ToString("00"));
    };
    var today = toPersianDate(DateTime.Now);
    var name = this.ViewContext.ViewData.TemplateInfo.HtmlFieldPrefix;
    var value = Model.HasValue ? toPersianDate(Model.Value) : string.Empty;
    var validationAttributes = Html.GetUnobtrusiveValidationAttributes("");
    var todayOnClick = string.Format("PersianDatePicker.Show(this, '{0}');", today);
}
@Html.LabelFor(model => model, new { @class = "control-label" })
<div class="input-group">
    <span class="input-group-addon">
        <i class="fa fa-calendar-o"></i>
    </span>

    @Html.TextBox(
    "", value,
    new RouteValueDictionary(validationAttributes)
    {
        { "class", "form-control" },
        { "dir", "ltr"},
        { "onclick", todayOnClick}
    }
)
</div>
