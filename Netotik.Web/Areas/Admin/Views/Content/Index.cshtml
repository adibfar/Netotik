@using Netotik.ViewModels.Identity.Security
@{
    var Roles = Html.CurrentUserPermissions();
    var CanCreate = Roles.Any(x => x == AssignableToRolePermissions.CanCreateContent);
    var CanEdit = Roles.Any(x => x == AssignableToRolePermissions.CanEditContent);
    var CanDelete = Roles.Any(x => x == AssignableToRolePermissions.CanDeleteContent);
    var canAccept = Roles.Any(x => x == AssignableToRolePermissions.CanAcceptContent);
    var canDontAccept = Roles.Any(x => x == AssignableToRolePermissions.CanDontAcceptContent);
}

<section id="configuration">
    <div class="row">
        <div class="col-xs-12">
            <div class="card">
                @if (CanCreate)
                {
                    <div class="card-header">
                        <a href="@Url.Action(MVC.Admin.Content.Create())" class="btn btn-social width-150 btn-instagram"><span class="icon-plus font-medium-4"></span> مطلب جدید</a>
                    </div>
                }

                <div class="card-body collapse in">
                    <div class="card-block card-dashboard">
                        @Html.Partial(MVC.Admin.Content.Views._Table)
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>





@section DownScript{

    <script type="text/javascript">
        $(function () {
            var table = $('#grid').dataTable({
                "order": [[1, 'asc']],
                "iDisplayLength": 10,
                "bProcessing": true,
                "bStateSave": true,
                "bServerSide": true,
                "bFilter": true,
                "aLengthMenu": [[10, 25, 50, 100], [10, 25, 50, 100]],
                "bAutoWidth": false,
                "sAjaxSource": "@Url.Action(MVC.Admin.Content.GetList())",
                "fnServerData": function (sSource, aoData, fnCallback) {
                    $.ajax({
                        "dataType": 'json',
                        "type": "POST",
                        "url": sSource,
                        "data": aoData,
                        "success": fnCallback
                    });
                },

                "aoColumnDefs": [
                    { "bSortable": false, "aTargets": [0] },
                    { "bSortable": false, "aTargets": [-1] },
                    {
                        "targets": 1,
                        "render": function (data, type, full, meta) {
                            var result = full.Title + ' ';
                            if (full.status==0) {
                                result += '<span class="tag tag-default">منتشر شده</span>';
                            }
                            else if (full.status == 1) {
                                result += '<span class="tag tag-default">در انتظار تایید</span>';
                            }
                            else if (full.status == 2) {
                                result += '<span class="tag tag-default">تایید نشده</span>';
                            }
                            return result;
                        }
                    },
                    {
                        "targets": -1,
                        "render": function (data, type, full, meta) {
                            var canEdit = '@CanEdit';
                            var canDelete = '@CanDelete';
                            var canAccept = '@canAccept';
                            var canDontAccept = '@canDontAccept';

                            var result = '';
                            if (canEdit == 'True' || canDelete == 'True') {
                                result = '<span class="dropdown">'
                                    + '<button id="btnSearchDrop2" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="true" class="btn btn-outline-secondary dropdown-toggle dropdown-menu-right">'
                                    + '<i class="icon-cog3"></i> پردازش</button><span aria-labelledby="btnSearchDrop2" class="dropdown-menu mt-1 dropdown-menu-right">';
                                if (canEdit == 'True') {
                                    result += '<a href="/Admin/Content/Edit/' + full.Id + '" class="edit dropdown-item">'
                                                                    + '<i class="icon-pen3"></i> ویرایش </a>'
                                    if ((full.status == 0 || full.status == 1)&& canDontAccept == 'True') {
                                        result += '<a onclick="notAccept(' + full.Id + ');" class="dropdown-item">'
                                           + '<i class="icon-blocked"></i> عدم تایید</a>';
                                    } else if ((full.status == 1 || full.status == 2) && canAccept == 'True') {
                                        result += '<a onclick="accept(' + full.Id + ');" class="dropdown-item">'
                                            + '<i class="icon-checkmark2"></i> تایید و انتشار</a>';
                                    }
                                }

                                if (canDelete == 'True') {
                                    result += '<a onclick="remove(' + full.Id + ');" class="dropdown-item">'
                                      + '<i class="icon-trash4"></i> حذف </a>';
                                }
                                result += "</span></span>";
                            }
                            return result;

                        }
                    }
                ]
                ,
                "aoColumns": [
                    { "mDataProp": "RowNumber" },
                    { "mDataProp": "Title" },
                    { "mDataProp": "UserCreator" },
                    { "mDataProp": "LastEdited" },
                    { "no": "no" }
                ],

                "oLanguage": {
                    "sUrl": "/Content/js/plugins/tables/datatable/dataTables.persian.txt"
                }
            });
        });


            function remove(id) {
                PostData("@Url.Action(MVC.Admin.Content.Remove())", { id: id });
            }

            function accept(id) {
                PostData("@Url.Action(MVC.Admin.Content.Accept())", { id: id });
            }

            function notAccept(id) {
                PostData("@Url.Action(MVC.Admin.Content.NotAccept())", { id: id });
            }
    </script>
}

