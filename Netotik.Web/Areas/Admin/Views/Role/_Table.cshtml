@using Netotik.ViewModels.Identity.Security
@using MvcPaging
@model IPagedList<Netotik.ViewModels.Identity.Role.RoleViewModel>

@{
    var roles = Html.CurrentUserPermissions();

    var canDelete = roles.Any(x => x == AssignableToRolePermissions.CanDeleteRole);
    var canEdit = roles.Any(x => x == AssignableToRolePermissions.CanEditRole);



    Layout = null;
    string querySearch = "";


    if (Request["Search"] != null)
    {
        querySearch = Request["Search"].ToString();
    }
}

<div id="gridlist">
    <table class="table table-striped border-top dataTable">
        <thead class="alert-info">
            <tr role="row">
                <th role="columnheader" rowspan="1" colspan="1">@Netotik.Resources.Captions.Name</th>
                <th role="columnheader" rowspan="1" colspan="1">@Netotik.Resources.Captions.SystemName</th>
                <th role="columnheader" rowspan="1" colspan="1">@Netotik.Resources.Captions.Description</th>
                <th role="columnheader" rowspan="1" colspan="1"></th>
            </tr>
        </thead>

        <tbody role="alert">
            @foreach (var item in Model)
            {
                <tr class="gradeX odd">
                    <td class="">@item.Name</td>
                    <td class="hidden-phone">
                        @if (item.IsDefaultForRegister)
                        {
                            <span class="badge label label-info">پیش فرض ثبت نام</span>
                        }
                        @if (item.IsSystemRole)
                        {
                            <span class="badge label">گروه سیستمی</span>
                        }
                    </td>

                    <td>
                        
                        <a href="@Url.Action(MVC.Admin.Role.ActionNames.Detail, new { id = item.Id })" class="btn btn-white btn-xs "><i class="icon-search"></i></a>

                        @if (canEdit)
                        {
                            <a href="@Url.Action(MVC.Admin.Role.ActionNames.Edit, new { id = item.Id })" class="btn btn-primary btn-xs "><i class="icon-pencil"></i></a>
                        }
                        @if (canDelete && !item.IsSystemRole)
                        {
                            <form action="@Url.Action(MVC.Admin.Role.ActionNames.Remove)" style="float:right" method="post">
                                @Html.AntiForgeryToken()
                                <input type="hidden" name="id" value="@item.Id" />
                                <button class="btn btn-danger btn-xs"><i class="icon-ban-circle"></i></button>
                            </form>
                        }

                    </td>

                </tr>
            }

        </tbody>
        <tfoot>
            <tr>
                <td colspan="6" style="padding:0;" class="pager">
                    @Html.Raw(Ajax.Pager(new Options { PageSize = Model.PageSize, TotalItemCount = Model.TotalItemCount, CurrentPage = Model.PageNumber, ItemTexts = new ItemTexts() { Next = "", Previous = "", Page = "" }, ItemIcon = new ItemIcon() { First = "icon-backward", Previous = "icon-chevron-right", Next = "icon-chevron-left", Last = "icon-forward" }, TooltipTitles = new TooltipTitles() { Next = "Next page", Previous = "Previous page", Page = "Page {0}." }, Size = Size.normal, Alignment = Alignment.centered, IsShowControls = false, IsShowFirstLast = false, CssClass = "pagination pagination-sm" }, new AjaxOptions { UpdateTargetId = "gridlist", OnBegin = "beginPaging", OnSuccess = "successPaging", OnFailure = "failurePaging" }, new { controller = MVC.Admin.Role.Name, action = MVC.Admin.Role.ActionNames.Index, search = querySearch }))
                </td>
            </tr>
        </tfoot>
    </table>
</div>
