@{ 
    ViewBag.Title = Captions.Languages;
}
<section id="configuration">
    <div class="col-xs-12">
        <div class="card">
            <div class="card-header">

                <button type="button" class="btn btn-social width-150 btn-instagram margin-bottom-2" data-toggle="modal" data-target="#Create"><span class="icon-plus font-medium-4"></span> @Captions.NewLanguage</button>
                @Html.Action(MVC.Admin.Language.Create())

                <button type="button" class="btn btn-social width-250 btn-instagram margin-bottom-2" data-toggle="modal" data-target="#CreateByXml"><span class="icon-upload3 font-medium-4"></span> @Captions.NewLanguageWithXml</button>
                @Html.Action(MVC.Admin.Language.CreateByXml())

                @*<button type="button" class="btn btn-social width-250 btn-instagram margin-bottom-2" data-toggle="modal" data-target="#Transltion"><span class="icon-language font-medium-4"></span> @Captions.TranslationSystem</button>
                @Html.Partial(MVC.Admin.Language.Views._Translate)*@

            </div>

            <div class="card-body collapse in">
                <div class="card-block card-dashboard">
                    @Html.Partial(MVC.Admin.Language.Views._TableLanguage)
                </div>
            </div>

        </div>
    </div>
</section>


<div id="edit-container"></div>

@section DownScript{

    <script type="text/javascript">
        $(function () {
            var table = $('#grid').dataTable({
                "order": [[1, 'asc']],
                "iDisplayLength": 10,
                "bProcessing": true,
                "bStateSave": true,
                "bServerSide": true,
                "bFilter": true,
                "aLengthMenu": [[10, 25, 50, 100], [10, 25, 50, 100]],
                "bAutoWidth": false,
                "sAjaxSource": "@Url.Action(MVC.Admin.Language.GetList())",
                "fnServerData": function (sSource, aoData, fnCallback) {
                    $.ajax({
                        "dataType": 'json',
                        "type": "POST",
                        "url": sSource,
                        "data": aoData,
                        "success": fnCallback
                    });
                },
                "aoColumnDefs": [
                    { "bSortable": false, "aTargets": [0] },
                    { "bSortable": false, "aTargets": [-1] },
                    {
                        "targets": 1,
                        "render": function (data, type, full, meta) {
                            var result = '<img src="/Content/images/flags/' + full.FlagImageFileName + '" class="thumbnail"> ' + full.Name;
                            return result;
                        }
                    },
                    {
                        "targets": 2,
                        "render": function (data, type, full, meta) {
                            var result = full.LanguageCulture;
                            if (full.IsDefault) {
                                if (full.IsDefault == true) {
                                    result += ' <div class="tag tag-success">'+'@Captions.Default'+'</div> '
                                }
                            }
                            if (full.Published == false) {
                                result += ' <div class="tag tag-danger">'+'@Captions.Disabled'+'</div> '
                            }
                            return result;
                        }
                    },
                     {
                         "targets": -1,
                         "render": function (data, type, full, meta) {
                             return '<span class="dropdown">'
                                 + '<button id="btnSearchDrop2" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="true" class="btn btn-outline-secondary dropdown-toggle dropdown-menu-right">'
                                 + '<i class="icon-cog3"></i> '+'@Captions.Action'+'</button>'
                                 + '<span aria-labelledby="btnSearchDrop2" class="dropdown-menu mt-1 dropdown-menu-right">'
                                 + '<a onclick="edit(' + full.Id + ');" class="edit dropdown-item">'
                                 + '<i class="icon-pen3"></i> '+'@Captions.Edit'+' </a>'
                                 + '<a onclick="remove(' + full.Id + ');" class="dropdown-item">'
                                 + '<i class="icon-trash4"></i> '+'@Captions.Remove'+' </a>'
                                 + '<a href="'+'@Url.Action(MVC.Admin.Language.Resources())'+'/'+ full.Id + '" class="dropdown-item">'
                                 + '<i class="icon-file-word"></i> '+'@Captions.Texts'+' </a>'
                                 + '<a href="'+'@Url.Action(MVC.Admin.Language.Export())'+'/'+ full.Id + '" class="dropdown-item">'
                                 + '<i class="icon-download"></i> '+'@Captions.DownloadLanguage'+' </a>';
                         }
                     }
                ]
                ,
                "aoColumns": [
                    { "mDataProp": "RowNumber" },
                    { "mDataProp": "Name" },
                    { "mDataProp": "LanguageCulture" },
                    { "mDataProp": "UniqueSeoCode" },
                    { "mDataProp": "Rtl" },
                    { "no": "no" }
                ]
            });

        });

        function edit(id) {
            CardBlock('.card');
            var url = "@Url.Action(MVC.Admin.Language.Edit())";
            $.get(url + '/' + id, function (data) {
                $('#edit-container').html(data);
                Selectize();
                Icheck();
                $('#Edit').modal('show');
                CardUnBlock('.card');
                AjaxForm.EnableAjaxFormvalidate('Edit');
            });
        };
        
        function remove(id) {
            swal({
                title: "@Captions.AreYouSure",
                text: "@Captions.AfterRemoveCantRecover",
                type: "warning",
                showCancelButton: !0,
                confirmButtonColor: "#DA4453",
                confirmButtonText: "@Captions.YesRemove",
                cancelButtonText: "@Captions.NoCancel",
                closeOnConfirm: !1,
                closeOnCancel: !1
            }, function (a) {
                if (a) {
                    swal("@Captions.Removed", "@Captions.AccountRemoved", "success");
                   PostData("@Url.Action(MVC.Admin.Language.Remove())", { id: id });
                } else {
                    swal("@Captions.Canceled", "@Captions.RemoveActionCanceled", "error");
                }

            })
        }
    </script>
}
