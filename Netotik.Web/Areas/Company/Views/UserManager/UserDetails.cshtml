@model Netotik.ViewModels.Identity.UserClient.UserModel
    @using Netotik.Resources;
@{ 
    var counter = 1;
    var counter2 = 1;
}
<section class="flexbox-container">
    <div class="row">
        <div class="col-md-12">
            <div class="card">
                <div class="card-header">
                    <a value="@Captions.Back" class="btn btn-social btn-instagram" href="@Url.Action(MVC.Company.UserManager.UserList())">
                        <span class="icon-reply font-medium-4"></span>
                        @Captions.Back
                    </a>
                    <a value="@Captions.TerminateConnection" class="btn btn-social btn-instagram" href="#" onclick="UserCloseSession('@Model.id','@Model.username');">
                        <span class="icon-blocked font-medium-4"></span>
                        @Captions.TerminateConnection
                    </a>
                    <a value="@Captions.Reset" class="btn btn-social btn-instagram" href="#" onclick="UserResetCounter('@Model.id','@Model.username');">
                        <span class="icon-refresh font-medium-4"></span>
                        @Captions.Reset
                    </a>
                    <a value="@Captions.Remove" class="btn btn-social btn-instagram" href="#" onclick="Userremove('@Model.id');">
                        <span class="icon-remove font-medium-4"></span>
                        @Captions.Remove
                    </a>
                    @if (Model.disabled == "false")
                    {
                        <a onclick="Userdisable('@Model.id');" class="btn btn-social btn-instagram" value="@Captions.Disable" href="#">
                            <span class="icon-eye-blocked font-medium-4"></span> @Captions.Disable
                        </a>
                    }
                    else
                    {
                        <a href="#" onclick="Userenable('@Model.id');" class="btn btn-social btn-instagram" value="@Captions.Enable">
                            <span class="icon-eye font-medium-4"></span> @Captions.Enable
                        </a>
                    }
                    <a value="@Captions.MakeCard" class="btn btn-social btn-instagram" href="#">
                        <span class="icon-card font-medium-4"></span>
                        @Captions.MakeCard
                    </a>
                </div>
                <div class="card-body">
                    <div class="card-block">
                        <ul class="nav nav-tabs nav-underline nav-justified">
                            <li class="nav-item">
                                <a class="nav-link active" id="activeIcon12-tab1" data-toggle="tab" href="#property" aria-controls="activeIcon12" aria-expanded="true"><i class="icon-file-text"></i>@Captions.Properties</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" id="linkIconOpt11-tab1" data-toggle="tab" href="#Router" aria-controls="linkIconOpt11"><i class="icon-connection"></i>@Captions.Connections</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" id="linkIcon12-tab1" data-toggle="tab" href="#traffic" aria-controls="linkIcon12" aria-expanded="false"><i class="icon-data"></i>@Captions.Traffic</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" id="linkIcon12-tab1" data-toggle="tab" href="#time" aria-controls="linkIcon12" aria-expanded="false"><i class="icon-ios-time"></i>@Captions.Time</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" id="linkIcon12-tab1" data-toggle="tab" href="#WebsiteLog" aria-controls="linkIcon12" aria-expanded="false"><i class="icon-ios-time"></i>سایت های بازدید شده</a>
                            </li>
                        </ul>
                        <div class="tab-content px-1 pt-1" style="min-height:260px!important">
                            <div role="tabpanel" class="tab-pane fade active in" id="property" aria-labelledby="activeIcon12-tab1" aria-expanded="true">
                                <div class="row">
                                    <div class="col-md-4">
                                        <div class="form-group has-icon-left">
                                            @Html.LabelFor(m => m.first_name)
                                            <div class="position-relative has-icon-left">
                                                @Html.TextBoxFor(m => m.first_name, new { @class = "form-control" })
                                                <div class="form-control-position">
                                                    <i class="icon-head"></i>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="form-group has-icon-left">
                                            @Html.LabelFor(m => m.last_name)
                                            <div class="position-relative has-icon-left">
                                                @Html.TextBoxFor(m => m.last_name, new { @class = "form-control" })
                                                <div class="form-control-position">
                                                    <i class="icon-user"></i>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="form-group has-icon-left">
                                            @Html.LabelFor(m => m.disabled)
                                            <div class="position-relative has-icon-left">
                                                @Html.TextBoxFor(m => m.disabled, new { @class = "form-control" })
                                                <div class="form-control-position">
                                                    <i class="icon-user"></i>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="form-group has-icon-left">
                                            @Html.LabelFor(m => m.location)
                                            <div class="position-relative has-icon-left">
                                                @Html.TextBoxFor(m => m.location, new { @class = "form-control" })
                                                <div class="form-control-position">
                                                    <i class="icon-location"></i>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="form-group has-icon-left">
                                            @Html.LabelFor(m => m.email)
                                            <div class="position-relative has-icon-left">
                                                @Html.TextBoxFor(m => m.email, new { @class = "form-control" })
                                                <div class="form-control-position">
                                                    <i class="icon-email"></i>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="form-group has-icon-left">
                                            @Html.LabelFor(m => m.phone)
                                            <div class="position-relative has-icon-left">
                                                @Html.TextBoxFor(m => m.phone, new { @class = "form-control" })
                                                <div class="form-control-position">
                                                    <i class="icon-phone"></i>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="form-group has-icon-left">
                                            @Html.LabelFor(m => m.comment)
                                            <div class="position-relative has-icon-left">
                                                @Html.TextBoxFor(m => m.comment, new { @class = "form-control" })
                                                <div class="form-control-position">
                                                    <i class="icon-comments"></i>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <br />
                                    <div class="col-md-4">
                                        <div class="form-group has-icon-left">
                                            @Html.LabelFor(m => m.username)
                                            <div class="position-relative has-icon-left">
                                                @Html.TextBoxFor(m => m.username, new { @class = "form-control" })
                                                <div class="form-control-position">
                                                    <i class="icon-user"></i>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="form-group has-icon-left">
                                            @Html.LabelFor(m => m.password)
                                            <div class="position-relative has-icon-left">
                                                @Html.TextBoxFor(m => m.password, new { @class = "form-control" })
                                                <div class="form-control-position">
                                                    <i class="icon-key2"></i>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="form-group has-icon-left">
                                            @Html.LabelFor(m => m.actual_profile)
                                            <div class="position-relative has-icon-left">
                                                @Html.TextBoxFor(m => m.actual_profile, new { @class = "form-control" })
                                                <div class="form-control-position">
                                                    <i class="icon-profile"></i>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="form-group has-icon-left">
                                            @Html.LabelFor(m => m.ip_address)
                                            <div class="position-relative has-icon-left">
                                                @Html.TextBoxFor(m => m.ip_address, new { @class = "form-control" })
                                                <div class="form-control-position">
                                                    <i class="icon-network_cell"></i>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="form-group has-icon-left">
                                            @Html.LabelFor(m => m.shared_users)
                                            <div class="position-relative has-icon-left">
                                                @Html.TextBoxFor(m => m.shared_users, new { @class = "form-control" })
                                                <div class="form-control-position">
                                                    <i class="icon-list-numbered"></i>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="tab-pane fade" id="Router" role="tabpanel" aria-labelledby="linkIcon12-tab1" aria-expanded="false">
                                    <table class="table table-striped table-bordered table-hover" id="grid">
                                        <thead>
                                            <tr>
                                                <td>#</td>
                                                <th>@Captions.UserName</th>
                                                <th>@Captions.FromTime</th>
                                                <th>@Captions.TillTime</th>
                                                <th>@Captions.ConnectionOnlineTime</th>
                                                <th>@Captions.Download (MB)</th>
                                                <th>@Captions.Upload (MB)</th>
                                                <th>Nas Port</th>
                                                <th>Nas Port Type</th>
                                                <th>Nas Port ID</th>
                                                <th>Calling Station ID</th>
                                                <th>Acct Session ID</th>
                                                <th>User IP</th>
                                                <th>Host IP</th>
                                                <th>Status</th>
                                                <th>Terminate Cause</th>
                                            </tr>
                                        </thead>
                                        <tbody>

                                            @foreach (var item in ViewBag.session)
                                            {
                                                <tr>
                                                    <td>@(counter++)</td>
                                                    <td>@item.user</td>
                                                    <td data-toggle="tooltip" data-original-title="<b>@item.from_timeT</b>" data-html="true">@item.from_time</td>
                                                    <td data-toggle="tooltip" data-original-title="<b>@item.till_timeT</b>" data-html="true">@item.till_time</td>
                                                    <td>@item.uptime.Replace("s", Captions.Secend).Replace("h", Captions.Hour).Replace("m", Captions.Minute).Replace("d",Captions.Day)</td>
                                                    <td>@((ulong.Parse(item.download) / 1048576))</td>
                                                    <td>@(ulong.Parse(item.upload) / 1048576)</td>
                                                    <td>@item.nas_port</td>
                                                    <td>@item.nas_port_type</td>
                                                    <td>@item.nas_port_id</td>
                                                    <td>@item.calling_station_id</td>
                                                    <td>@item.acct_session_id</td>
                                                    <td>@item.user_ip</td>
                                                    <td>@item.host_ip</td>
                                                    <td>@item.status</td>
                                                    <td>@item.terminate_cause</td>
                                                </tr>
                                            }
                                        </tbody>
                                    </table>
                            </div>
                            <div class="tab-pane fade" id="traffic" role="tabpanel" aria-labelledby="linkIconOpt11-tab1" aria-expanded="false">
                                    <div class="col-md-4">
                                        <label>@Html.DisplayNameFor(model => model.download_used)</label>
                                        <div class="input-group">
                                            <input type="text" class="form-control m-b" style="height:45px !important;" placeholder="0" name="downloadused" id="downloadused" value="@Html.DisplayTextFor(model => model.download_used)"  />
                                            <div class="input-group-addon">
                                                <select name="downloadusedB" onchange="changeval('downloadusedB', 'downloadused')" id="downloadusedB">
                                                    <option value="1">KB</option>
                                                    <option value="3">MB</option>
                                                    <option value="5">GB</option>
                                                </select>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <label>@Html.DisplayNameFor(model => model.upload_used)</label>
                                        <div class="input-group">
                                            <input type="text" class="form-control m-b" style="height:45px !important;" placeholder="0" name="uploadused" id="uploadused" value="@Html.DisplayTextFor(model => model.upload_used)"  />
                                            <div class="input-group-addon">
                                                <select name="uploadusedB" onchange="changeval('uploadusedB', 'uploadused')" id="uploadusedB">
                                                    <option value="1">KB</option>
                                                    <option value="3">MB</option>
                                                    <option value="5">GB</option>
                                                </select>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <label>@Captions.TrafficRemain</label>
                                        <div class="input-group">
                                            <input type="text" class="form-control m-b" style="height:45px !important;" placeholder="0" name="downloaduploadremain" id="downloaduploadremain" value="@ViewBag.download_remain" />
                                            <div class="input-group-addon">
                                                <select name="downloaduploadremainB" onchange="changeval('downloaduploadremainB', 'downloaduploadremain')" id="downloaduploadremainB">
                                                    <option value="1">KB</option>
                                                    <option value="3">MB</option>
                                                    <option value="5">GB</option>
                                                </select>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <label>@Captions.DownloadTrafficLimit</label>
                                        <div class="input-group">
                                            <input type="text" class="form-control m-b" style="height:45px !important;" placeholder="0" name="downloadlimit" id="downloadlimit" value="@ViewBag.download_limit"  />
                                            <div class="input-group-addon">
                                                <select name="downloadlimitB" onchange="changeval('downloadlimitB', 'downloadlimit')" id="downloadlimitB">
                                                    <option value="1">KB</option>
                                                    <option value="3">MB</option>
                                                    <option value="5">GB</option>
                                                </select>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <label>@Captions.UploadTrafficLimit</label>
                                        <div class="input-group">
                                            <input type="text" class="form-control m-b" style="height:45px !important;" placeholder="0" name="uploadlimit" id="uploadlimit" value="@ViewBag.upload_limit"  />
                                            <div class="input-group-addon">
                                                <select name="uploadlimitB" onchange="changeval('uploadlimitB', 'uploadlimit')" id="uploadlimitB">
                                                    <option value="1">KB</option>
                                                    <option value="3">MB</option>
                                                    <option value="5">GB</option>
                                                </select>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <label>@Captions.DownloadUploadTrafficLimit</label>
                                        <div class="input-group">
                                            <input type="text" class="form-control m-b" style="height:45px !important;" placeholder="0" name="downloaduploadlimit" id="downloaduploadlimit" value="@ViewBag.transfer_limit" />
                                            <div class="input-group-addon">
                                                <select name="downloaduploadlimitB" onchange="changeval('downloaduploadlimitB', 'downloaduploadlimit')" id="downloaduploadlimitB">
                                                    <option value="1">KB</option>
                                                    <option value="3">MB</option>
                                                    <option value="5">GB</option>
                                                </select>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-3">
                                        <label>@Captions.DownloadSpeedLimit</label>
                                        <div class="input-group ">
                                            <input type="text" value="@ViewBag.rate_limit_tx"  class="form-control m-b" style="height:45px !important;" placeholder="0" name="uploadrate" id="uploadrate" />
                                            <div class="input-group-addon">
                                                <select name="uploadrateB" onchange="changeval('uploadrateB', 'uploadrate')" id="uploadrateB">
                                                    <option value="2">KB</option>
                                                    <option value="1">kb</option>
                                                    <option value="3">MB</option>
                                                    <option value="4">mb</option>
                                                </select>
                                            </div>
                                        </div>
                                    </div>
                                <div class="col-md-3">
                                    <label>@Captions.UploadSpeedLimit</label>
                                    <div class="input-group">
                                        <input type="text" value="@ViewBag.rate_limit_rx" class="form-control m-b" style="height:45px !important;" placeholder="0" name="downloadrate" id="downloadrate" />
                                        <div class="input-group-addon">
                                            <select name="downloadrateB" onchange="changeval('downloadrateB', 'downloadrate')" id="downloadrateB">
                                                <option value="2">KB</option>
                                                <option value="1">kb</option>
                                                <option value="3">MB</option>
                                                <option value="4">mb</option>
                                            </select>
                                        </div>
                                    </div>
                                </div>



                                <div class="row">
                                    <div class="col-xs-6">

                                            <div class="card-body collapse in">
                                                <div class="card-block">
                                                        <div id="morris-donut-chart" class="height-400" style="width:240px !important;"></div>
                                                </div>
                                            </div>
                                    </div>
                                </div>
                            </div>
                            <div class="tab-pane fade" id="time" role="tabpanel" aria-labelledby="linkIconOpt11-tab1" aria-expanded="false">
                                    <div class="col-md-4">
                                        <div class="form-group has-icon-left">
                                            @Html.LabelFor(m => m.uptime_used)
                                            <div class="position-relative has-icon-left">
                                                @Html.TextBoxFor(m => m.uptime_used, new { @class = "form-control" })
                                                <div class="form-control-position">
                                                    <i class="icon-android-time"></i>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                <div class="col-md-4">
                                    <div class="form-group has-icon-left">
                                        @Html.LabelFor(m => m.last_seen)
                                        <div class="position-relative has-icon-left" data-toggle="tooltip" data-original-title="<b>@Model.last_seenT</b>" data-html="true">
                                            @Html.TextBoxFor(m => m.last_seen, new { @class = "form-control" })
                                            <div class="form-control-position">
                                                <i class="icon-ios-timer"></i>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            
                            <div class="tab-pane fade" id="WebsiteLog" role="tabpanel" aria-labelledby="linkIconOpt11-tab1" aria-expanded="false">
                               <table class="table table-striped table-bordered table-hover" id="grid2">
                                    <thead>
                                        <tr>
                                            <th>#</th>
                                            <th>@Captions.UserName</th>
                                            <th>MikrotikCreateDate</th>
                                            <th>Url</th>
                                            <th>DstIp</th>
                                            <th>Method</th>
                                            <th>Protocol</th>
                                            <th>SrcIp</th>
                                            <th>SrcMac</th>



                                            <th>MAC</th>
                                            <th>Host IP</th>
                                            <th>User IP</th>
                                            <th>Customer</th>
                                            <th>Nas Port</th>
                                            <th>Nas Port Type</th>
                                            <th>Nas Port ID</th>
                                            <th>Acct Session Id</th>
                                            <th>From Time</th>
                                            <th>Till Time</th>
                                            <th>Terminate Cause</th>
                                            <th>Uptime</th>
                                            <th>Download</th>
                                            <th>Upload</th>
                                            <th>Active</th>
                                        </tr>
                                    </thead>
                                    <tbody>

                                        @foreach (var item in ViewBag.WebsiteLogs)
            {
                                            <tr>
                                                <td>@(counter2++)</td>
                                                <td>@item.user</td>
                                                <td>@item.MikrotikCreateDate</td>
                                                <td>@item.Url</td>
                                                <td>@item.DstIp</td>
                                                <td>@item.Method</td>
                                                <td>@item.Protocol</td>
                                                <td>@item.SrcIp</td>
                                                <td>@item.SrcMac</td>
                                                <td>@item.calling_station_id</td>
                                                <td>@item.host_ip</td>
                                                <td>@item.user_ip</td>
                                                <td>@item.customer</td>
                                                <td>@item.nas_port</td>
                                                <td>@item.nas_port_type</td>
                                                <td>@item.nas_port_id</td>
                                                <td>@item.acct_session_id</td>
                                                <td>@item.from_time</td>
                                                <td>@item.till_time</td>
                                                <td>@item.terminate_cause</td>
                                                <td>@item.uptime</td>
                                                <td>@item.download</td>
                                                <td>@item.upload</td>
                                                <td>@item.active</td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                        </div>
                        
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>


@section UpScript{
    <link rel="stylesheet" type="text/css" href="~/Content/css/plugins/tables/extensions/dataTables.colVis.css">
<link rel="stylesheet" type="text/css" href="~/Content/css/plugins/tables/extensions/buttons.dataTables.min.css">
<link href="~/Content/css/plugins/charts/morris.css" rel="stylesheet">
}
@section DownScript{
<script src="~/Content/js/plugins/tables/datatable/dataTables.buttons.min.js" type="text/javascript"></script>
<script src="~/Content/js/plugins/tables/jszip.min.js" type="text/javascript"></script>
<script src="~/Content/js/plugins/tables/pdfmake.min.js" type="text/javascript"></script>
<script src="~/Content/js/plugins/tables/vfs_fonts.js" type="text/javascript"></script>
<script src="~/Content/js/plugins/tables/buttons.html5.min.js" type="text/javascript"></script>
<script src="~/Content/js/plugins/tables/buttons.colVis.min.js" type="text/javascript"></script>


<script src="~/Content/js/plugins/charts/morris.min.js" type="text/javascript"></script>
<script src="~/Content/js/plugins/charts/raphael-min.js" type="text/javascript"></script>
    <script type="text/javascript">
        $(document).ready(function () {
            var table = $('#grid').dataTable({
                "iDisplayLength": 10,
                "bProcessing": true,
                "bStateSave": true,
                "bFilter": true,
                "columnDefs": [
               {
                   "targets": [7],
                   "visible": false
               },
               {
                   "targets": [11],
                   "visible": false
               },
               {
                   "targets": [8],
                   "visible": false
               },
               {
                   "targets": [9],
                   "visible": false
               },
               {
                   "targets": [10],
                   "visible": false
               },
               {
                   "targets": [12],
                   "visible": false
               },
               {
                   "targets": [13],
                   "visible": false
               },
               {
                   "targets": [14],
                   "visible": false
               },
               {
                   "targets": [15],
                   "visible": false
               }
                ],
                dom: 'Bfrtip',
                lengthMenu: [
                             [10, 25, 50, -1],
                             ['10', '25', '50', 'All']
                ],
                buttons: [
                    'copy', 'excel', 'pdf', 'pageLength', 'colvis'
                ]
            });
            $(document).ready(function () {
                var table = $('#grid2').dataTable({
                    "iDisplayLength": 10,
                    "bProcessing": true,
                    "bStateSave": true,
                    "bFilter": true,
                    "columnDefs": [
                   {
                       "targets": [7],
                       "visible": false
                   },
                   {
                       "targets": [11],
                       "visible": false
                   },
                   {
                       "targets": [8],
                       "visible": false
                   },
                   {
                       "targets": [9],
                       "visible": false
                   },
                   {
                       "targets": [10],
                       "visible": false
                   },
                   {
                       "targets": [12],
                       "visible": false
                   },
                   {
                       "targets": [13],
                       "visible": false
                   },
                   {
                       "targets": [14],
                       "visible": false
                   },
                   {
                       "targets": [15],
                       "visible": false
                   }
                    ],
                    dom: 'Bfrtip',
                    lengthMenu: [
                                 [10, 25, 50, -1],
                                 ['10', '25', '50', 'All']
                    ],
                    buttons: [
                        'copy', 'excel', 'pdf', 'pageLength', 'colvis'
                    ]
                });
            changeval('downloadlimitB', 'downloadlimit');
            changeval('uploadlimitB', 'uploadlimit');
            changeval('downloaduploadlimitB', 'downloaduploadlimit');
            changeval('downloadrateB', 'downloadrate');
            changeval('uploadrateB', 'uploadrate');
            changeval('downloaduploadremainB', 'downloaduploadremain');
            changeval('downloadusedB', 'downloadused');
            changeval('uploadusedB', 'uploadused');
            Morris.Donut({
                element: 'morris-donut-chart',
                data: [{ label: "@Netotik.Resources.Captions.Used", value: @(ViewBag.download_used==null?1: ulong.Parse(ViewBag.download_used.ToString()) < 1048576 ? 1 : (ulong.Parse(Model.download_used.ToString()) / 1048576)) },
                    { label: "@Netotik.Resources.Captions.Remain", value: @(ViewBag.download_remain == null ? 1 : ulong.Parse(ViewBag.download_remain.ToString())<1048576?1:(ulong.Parse(ViewBag.download_remain.ToString()) / 1048576)) }],
                resize: !0,
                colors: ['#ff5733', '#54cdb4']
            });
        });

        var downloadlimit = document.getElementById('downloadlimit').value;
        var uploadlimit = document.getElementById('uploadlimit').value;
        var downloaduploadlimit = document.getElementById('downloaduploadlimit').value;
        var downloadrate = document.getElementById('downloadrate').value;
        var uploadrate = document.getElementById('uploadrate').value;
        var downloaduploadremain = document.getElementById('downloaduploadremain').value;
        var downloadused = document.getElementById('downloadused').value;
        var uploadused = document.getElementById('uploadused').value;

        function changeval(selectid, inputid) {
            var e = document.getElementById(selectid);
            var strUser = e.options[e.selectedIndex].value;
            var temp;
            switch (strUser) {
                case '1':
                    if (inputid == 'uploadrate') temp = (parseInt(uploadrate) / 1024).toFixed(2);
                    if (inputid == 'downloadrate') temp = (parseInt(downloadrate) / 1024).toFixed(2);
                    if (inputid == 'downloaduploadlimit') temp = (parseInt(downloaduploadlimit) / 1024).toFixed(2);
                    if (inputid == 'downloaduploadremain') temp = (parseInt(downloaduploadremain) / 1024).toFixed(2);
                    if (inputid == 'uploadlimit') temp = (parseInt(uploadlimit) / 1024).toFixed(2);
                    if (inputid == 'downloadlimit') temp = (parseInt(downloadlimit) / 1024).toFixed(2);
                    if (inputid == 'downloadused') temp = (parseInt(downloadused) / 1024).toFixed(2);
                    if (inputid == 'uploadused') temp = (parseInt(uploadused) / 1024).toFixed(2);
                    document.getElementById(inputid).value = temp.toString();
                    break;
                case '2':
                    if (inputid == 'uploadrate') temp = (parseInt(uploadrate) / 8192).toFixed(2);
                    if (inputid == 'downloadrate') temp = (parseInt(downloadrate) / 8192).toFixed(2);
                    if (inputid == 'downloaduploadlimit') temp = (parseInt(downloaduploadlimit) / 8192).toFixed(2);
                    if (inputid == 'downloaduploadremain') temp = (parseInt(downloaduploadremain) / 8192).toFixed(2);
                    if (inputid == 'uploadlimit') temp = (parseInt(uploadlimit) / 8192).toFixed(2);
                    if (inputid == 'downloadlimit') temp = (parseInt(downloadlimit) / 8192).toFixed(2);
                    if (inputid == 'downloadused') temp = (parseInt(downloadused) / 8192).toFixed(2);
                    if (inputid == 'uploadused') temp = (parseInt(uploadused) / 8192).toFixed(2);
                    document.getElementById(inputid).value = temp.toString();
                    break;
                case '3':
                    if (inputid == 'uploadrate') temp = (parseInt(uploadrate) / 1048576).toFixed(2);
                    if (inputid == 'downloadrate') temp = (parseInt(downloadrate) / 1048576).toFixed(2);
                    if (inputid == 'downloaduploadlimit') temp = (parseInt(downloaduploadlimit) / 1048576).toFixed(2);
                    if (inputid == 'downloaduploadremain') temp = (parseInt(downloaduploadremain) / 1048576).toFixed(2);
                    if (inputid == 'uploadlimit') temp = (parseInt(uploadlimit) / 1048576).toFixed(2);
                    if (inputid == 'downloadlimit') temp = (parseInt(downloadlimit) / 1048576).toFixed(2);
                    if (inputid == 'downloadused') temp = (parseInt(downloadused) / 1048576).toFixed(2);
                    if (inputid == 'uploadused') temp = (parseInt(uploadused) / 1048576).toFixed(2);
                    document.getElementById(inputid).value = temp.toString();
                    break;
                case '4':
                    if (inputid == 'uploadrate') temp = ((parseInt(uploadrate) / 8388608)).toFixed(2);
                    if (inputid == 'downloadrate') temp = ((parseInt(downloadrate) / 8388608)).toFixed(2);
                    if (inputid == 'downloaduploadlimit') temp = ((parseInt(downloaduploadlimit) / 1048576)).toFixed(2);
                    if (inputid == 'downloaduploadremain') temp = ((parseInt(downloaduploadremain) / 1048576)).toFixed(2);
                    if (inputid == 'uploadlimit') temp = (parseInt(uploadlimit) / 1048576).toFixed(2);
                    if (inputid == 'downloadlimit') temp = ((parseInt(downloadlimit) / 1048576)).toFixed(2);
                    if (inputid == 'downloadused') temp = ((parseInt(downloadused) / 1048576)).toFixed(2);
                    if (inputid == 'uploadused') temp = ((parseInt(uploadused) / 1048576)).toFixed(2);
                    document.getElementById(inputid).value = temp.toString();
                    break;
                case '5':
                    if (inputid == 'uploadrate') temp = ((parseInt(uploadrate) / 1073741824)).toFixed(2);
                    if (inputid == 'downloadrate') temp = ((parseInt(downloadrate) / 1073741824)).toFixed(2);
                    if (inputid == 'downloaduploadlimit') temp = ((parseInt(downloaduploadlimit) / 1073741824)).toFixed(2);
                    if (inputid == 'downloaduploadremain') temp = ((parseInt(downloaduploadremain) / 1073741824)).toFixed(2);
                    if (inputid == 'uploadlimit') temp = ((parseInt(uploadlimit) / 1073741824)).toFixed(2);
                    if (inputid == 'downloadlimit') temp = ((parseInt(downloadlimit) / 1073741824)).toFixed(2);
                    if (inputid == 'downloadused') temp = ((parseInt(downloadused) / 1073741824)).toFixed(2);
                    if (inputid == 'uploadused') temp = ((parseInt(uploadused) / 1073741824)).toFixed(2);
                    document.getElementById(inputid).value = temp.toString();
                    break;
            }
        }


        function Userremove(id) {
            PostData("@Url.Action(MVC.Company.UserManager.Userremove())", { id: id });
        }

        function Userdisable(id) {
            PostData("@Url.Action(MVC.Company.UserManager.Userdisable())", { id: id });
        }

        function Userenable(id) {
            PostData("@Url.Action(MVC.Company.UserManager.Userenable())", { id: id });
        }

        function UserResetCounter(id,name) {
            PostData("@Url.Action(MVC.Company.UserManager.ResetCounter())", { id: id, user: name});
        }

        function UserCloseSession(id , name) {
            PostData("@Url.Action(MVC.Company.UserManager.CloseSession())", { id: id ,user: name});
        }

    </script>
}