@model Netotik.ViewModels.Identity.UserClient.UserRegisterModel
@using Netotik.Resources;
@{
    ViewBag.Title = Captions.NewUser;
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<section class="flexbox-container">
    <div class="row">
        <div class="col-md-12">
            @using (Html.BeginForm(MVC.Company.UserManager.ActionNames.UserCreate, MVC.Company.UserManager.Name, FormMethod.Post,
                                                                    htmlAttributes: new { @class = "form cmxform form-horizontal tasi-form", enctype = "multipart/form-data", id = "form" }))
            {
                @Html.AntiForgeryToken()
                <div class="card">
                    <div class="card-header">
                        <button name="actionType" value="@Netotik.Common.Controller.ActionType.Save" class="btn btn-social width-100 btn-instagram" onclick="AjaxForm.Post(this, 'form')" data-loading-text="در حال ارسال اطلاعات">
                            <span class="icon-checkmark2 font-medium-4"></span>
                            @Netotik.Resources.Captions.Save
                        </button>

                        <div class="col-md-12">
                            @Html.ValidationSummary(false, "", htmlAttributes: new { @class = "text-danger" })
                            <span class="text-danger">@Captions.JustEnglish</span>
                        </div>
                    </div>
                    <div class="card-body">
                        <div class="card-block">
                            <div class="row">
                                <div class="col-md-3">
                                    <div class="form-group has-feedback has-icon-left">
                                        @Html.LabelFor(m => m.first_name)
                                        <div class="position-relative has-icon-left">
                                            @Html.TextBoxFor(m => m.first_name, new { @class = "form-control" })
                                            <div class="form-control-position">
                                                <i class="icon-head"></i>
                                            </div>
                                            @Html.ValidationMessageFor(model => model.first_name, "", htmlAttributes: new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="form-group has-feedback has-icon-left">
                                        @Html.LabelFor(m => m.last_name)
                                        <div class="position-relative has-icon-left">
                                            @Html.TextBoxFor(m => m.last_name, new { @class = "form-control" })
                                            <div class="form-control-position">
                                                <i class="icon-user"></i>
                                            </div>
                                            @Html.ValidationMessageFor(model => model.last_name, "", htmlAttributes: new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="form-group has-feedback has-icon-left">
                                        @Html.LabelFor(m => m.phone)
                                        <div class="position-relative has-icon-left">
                                            @Html.TextBoxFor(m => m.phone, new { @class = "form-control" })
                                            <div class="form-control-position">
                                                <i class="icon-phone"></i>
                                            </div>
                                            @Html.ValidationMessageFor(model => model.phone, "", htmlAttributes: new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="form-group has-feedback has-icon-left">
                                        @Html.LabelFor(m => m.email)
                                        <div class="position-relative has-icon-left">
                                            @Html.TextBoxFor(m => m.email, new { @class = "form-control" })
                                            <div class="form-control-position">
                                                <i class="icon-email"></i>
                                            </div>
                                            @Html.ValidationMessageFor(model => model.email, "", htmlAttributes: new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group has-feedback has-icon-left">
                                        @Html.LabelFor(m => m.username)
                                        <div class="position-relative has-icon-left">
                                            @Html.TextBoxFor(m => m.username, new { @class = "form-control" })
                                            <div class="form-control-position">
                                                <i class="icon-user-tie"></i>
                                            </div>
                                            @Html.ValidationMessageFor(model => model.username, "", htmlAttributes: new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group has-feedback has-icon-left">
                                        @Html.LabelFor(m => m.password)
                                        <div class="position-relative has-icon-left">
                                            @Html.TextBoxFor(m => m.password, new { @class = "form-control" })
                                            <div class="form-control-position">
                                                <i class="icon-key2"></i>
                                            </div>
                                            @Html.ValidationMessageFor(model => model.password, "", htmlAttributes: new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <label class="font-noraml">@Captions.SelectPackage</label>
                                    <select id="profile" name="profile" data-placeholder="@Captions.SelectPackage" class="selectize-select" style="min-width:350px;" tabindex="2">
                                        @foreach (var item in ViewBag.profiles)
                                        {
                                            <option value="@item.name">@item.name</option>
                                        }
                                    </select>
                                </div>


                            </div>
                            <div class="row">
                                <div class="col-md-4">
                                    <div class="form-group has-feedback has-icon-left">
                                        @Html.LabelFor(m => m.location)
                                        <div class="position-relative has-icon-left">
                                            @Html.TextBoxFor(m => m.location, new { @class = "form-control" })
                                            <div class="form-control-position">
                                                <i class="icon-location"></i>
                                            </div>
                                            @Html.ValidationMessageFor(model => model.location, "", htmlAttributes: new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group has-feedback has-icon-left">
                                        @Html.LabelFor(m => m.comment)
                                        <div class="position-relative has-icon-left">
                                            @Html.TextBoxFor(m => m.comment, new { @class = "form-control" })
                                            <div class="form-control-position">
                                                <i class="icon-comments"></i>
                                            </div>
                                            @Html.ValidationMessageFor(model => model.comment, "", htmlAttributes: new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-3">
                                    <div class="form-group has-feedback has-icon-left">
                                        @Html.LabelFor(m => m.NationalCode)
                                        <div class="position-relative has-icon-left">
                                            @Html.TextBoxFor(m => m.NationalCode, new { @class = "form-control" })
                                            <div class="form-control-position">
                                                <i class="icon-comments"></i>
                                            </div>
                                            @Html.ValidationMessageFor(model => model.NationalCode, "", htmlAttributes: new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="form-group has-feedback has-icon-left">
                                        @Html.LabelFor(m => m.MarriageDate)
                                        <div class="position-relative has-icon-left">
                                            @Html.TextBoxFor(m => m.MarriageDate, new { @class = "form-control" })
                                            <div class="form-control-position">
                                                <i class="icon-comments"></i>
                                            </div>
                                            @Html.ValidationMessageFor(model => model.MarriageDate, "", htmlAttributes: new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="form-group has-feedback has-icon-left">
                                        @Html.LabelFor(m => m.IsMale)
                                        <div class="position-relative has-icon-left">
                                            @Html.TextBoxFor(m => m.IsMale, new { @class = "form-control" })
                                            <div class="form-control-position">
                                                <i class="icon-comments"></i>
                                            </div>
                                            @Html.ValidationMessageFor(model => model.IsMale, "", htmlAttributes: new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="form-group has-feedback has-icon-left">
                                        @Html.LabelFor(m => m.Age)
                                        <div class="position-relative has-icon-left">
                                            @Html.TextBoxFor(m => m.Age, new { @class = "form-control" })
                                            <div class="form-control-position">
                                                <i class="icon-comments"></i>
                                            </div>
                                            @Html.ValidationMessageFor(model => model.Age, "", htmlAttributes: new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="form-group has-feedback has-icon-left">
                                        @Html.LabelFor(m => m.Birthday)
                                        <div class="position-relative has-icon-left">
                                            @Html.TextBoxFor(m => m.Birthday, new { @class = "form-control" })
                                            <div class="form-control-position">
                                                <i class="icon-comments"></i>
                                            </div>
                                            @Html.ValidationMessageFor(model => model.Birthday, "", htmlAttributes: new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-4">
                                    <div class="form-group skin skin-flat">
                                        @Html.LabelFor(model => model.SendSmsNow)
                                        @Html.CheckBoxFor(model => model.SendSmsNow)
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</section>