@using Netotik.ViewModels.Identity.Security
@{

    var CmsMenu = User.Roles.Any(x => AssignableToRolePermissions.GetAllCmsSectionPermision().Any(y => y.Name == x));

    var CmsContentCategoryMenu = User.Roles.Any(x => x == AssignableToRolePermissions.CanAccessContentCategory);
    var CmsContactUsMenu = User.Roles.Any(x => x == AssignableToRolePermissions.CanAccessContactUs);
    var CmsContentsMenu = User.Roles.Any(x => x == AssignableToRolePermissions.CanAccessContent);
    var CmsTagMenu = User.Roles.Any(x => x == AssignableToRolePermissions.CanAccessTag);
    var CmsCommentsMenu = User.Roles.Any(x => x == AssignableToRolePermissions.CanAccessComment);
    var CmsSliderMenu = User.Roles.Any(x => x == AssignableToRolePermissions.CanAccessSlider);
    var CmsAdvertiseMenu = User.Roles.Any(x => x == AssignableToRolePermissions.CanAccessAdvertise);
    //--------------------------------------------------------------------------
    var ShopMenu = User.Roles.Any(x => AssignableToRolePermissions.GetAllShopSectionPermision().Any(y => y.Name == x));

    var ShopCategoryMenu = User.Roles.Any(x => x == AssignableToRolePermissions.CanAccessProductCategory);
    var ShopdeliveryDateMenu = User.Roles.Any(x => x == AssignableToRolePermissions.CanAccessDeliveryDate);
    var ShopDiscountMenu = User.Roles.Any(x => x == AssignableToRolePermissions.CanAccessDiscount);
    var ShopManufacturerMenu = User.Roles.Any(x => x == AssignableToRolePermissions.CanAccessPaymentType);
    var ShopPaymentTypeMenu = User.Roles.Any(x => x == AssignableToRolePermissions.CanAccessPaymentType);
    var ShopProductMenu = User.Roles.Any(x => x == AssignableToRolePermissions.CanAccessProduct);
    var ShopProductGalleryMenu = User.Roles.Any(x => x == AssignableToRolePermissions.CanAccessProductGallery);
    var ShopProductAttributeMenu = User.Roles.Any(x => x == AssignableToRolePermissions.CanAccessProductAttribute);
    var ShopProductCommentsMenu = User.Roles.Any(x => x == AssignableToRolePermissions.CanAccessProductComment);
    var ShopShippingMethodMenu = User.Roles.Any(x => x == AssignableToRolePermissions.CanAccessShopShippingByMethod);
    var ShopTaxMenu = User.Roles.Any(x => x == AssignableToRolePermissions.CanAccessTag);
    var ShopWareHouseMenu = User.Roles.Any(x => x == AssignableToRolePermissions.CanAccessWareHouse);
    //--------------------------------------------------------------------------

    var FactorMenu = User.Roles.Any(x => AssignableToRolePermissions.GetAllFactorPermision().Any(y => y.Name == x));

    var SuccessOrderMenu = User.Roles.Any(x => x == AssignableToRolePermissions.CanAccessSuccessOrder);
    var FailOrderMenu = User.Roles.Any(x => x == AssignableToRolePermissions.CanAccessFailOrder);
    //-------------------------------------------------------------------------------

    var UserMenu = User.Roles.Any(x => AssignableToRolePermissions.GetAllUserPermision().Any(y => y.Name == x));

    var UserAccountMenu = User.Roles.Any(x => x == AssignableToRolePermissions.CanAccessUser);
    var RoleMenu = User.Roles.Any(x => x == AssignableToRolePermissions.CanCreateRole);
    var RolePermissionMenu = User.Roles.Any(x => x == AssignableToRolePermissions.CanViewAllPermissions);

    //-------------------------------------------------------------------------------

    var IssueMenu = User.Roles.Any(x => AssignableToRolePermissions.GetAllIssuePermision().Any(y => y.Name == x));

    var IssueListMenu = User.Roles.Any(x => x == AssignableToRolePermissions.CanAccessIssue);
    var IssueLabelMenu = User.Roles.Any(x => x == AssignableToRolePermissions.CanAccessIssueLabel);
    //-------------------------------------------------------------------------------

    var ConfigurationMenu = User.Roles.Any(x => AssignableToRolePermissions.GetAllConfigurationPermision().Any(y => y.Name == x));

    var ConfigProductColor = User.Roles.Any(x => x == AssignableToRolePermissions.CanAccessProductColor);
    var ConfigProductSize = User.Roles.Any(x => x == AssignableToRolePermissions.CanAccessProductSize);
    var ConfigMenuMenu = User.Roles.Any(x => x == AssignableToRolePermissions.CanAccessMenu);
    var ConfigPublicMenu = User.Roles.Any(x => x == AssignableToRolePermissions.CanAccessPublicSetting);
    var ConfigLinksMenu = User.Roles.Any(x => x == AssignableToRolePermissions.CanAccessLinks);
    var ConfigStateMenu = User.Roles.Any(x => x == AssignableToRolePermissions.CanAccessState);
    var ConfigCityMenu = User.Roles.Any(x => x == AssignableToRolePermissions.CanAccessCity);

}



@if (User.Roles.Any(x => x == AssignableToRolePermissions.CanViewAdminPanel))
{
    <li>
        <a href="@Url.Action(MVC.Admin.Home.ActionNames.Index, MVC.Admin.Home.Name, new { area = MVC.Admin.Name })">
            <i class="fa fa-dashboard"></i>
            <span>داشبورد مدیریت</span>
        </a>
    </li>
}

@if (CmsMenu && true)
{
    <li>
        <a href="javascript:;" class="">
            <i class="fa fa-list"></i>
            <span>مدیریت محتوا</span>
            <span class="fa arrow"></span>
        </a>
        <ul class="nav nav-second-level collapse">
            @if (CmsContentCategoryMenu)
            {
                <li><a href="@Url.Action(MVC.Admin.ContentCategory.ActionNames.Index, MVC.Admin.ContentCategory.Name, new { area = MVC.Admin.Name })">مدیرت موضوعات</a></li>}
            @if (CmsContentsMenu)
            {
                <li><a href="@Url.Action(MVC.Admin.Content.ActionNames.Index, MVC.Admin.Content.Name, new { area = MVC.Admin.Name })">مدیرت مطالب</a></li>}
            @if (CmsTagMenu)
            {
                <li><a href="@Url.Action(MVC.Admin.ContentTag.ActionNames.Index, MVC.Admin.ContentTag.Name, new { area = MVC.Admin.Name })">مدیرت برچسب ها</a></li>}
            @if (CmsSliderMenu)
            {
                <li><a href="@Url.Action(MVC.Admin.Slider.ActionNames.Index, MVC.Admin.Slider.Name, new { area = MVC.Admin.Name })">مدیریت اسلایدر</a></li>}
            @if (CmsAdvertiseMenu)
            {
                <li><a href="@Url.Action(MVC.Admin.Advertise.ActionNames.Index, MVC.Admin.Advertise.Name, new { area = MVC.Admin.Name })">مدیریت بنرها</a></li>}
            @if (CmsCommentsMenu)
            {
                <li><a href="@Url.Action(MVC.Admin.Comments.ActionNames.Index, MVC.Admin.Comments.Name, new { area = MVC.Admin.Name })">مدیریت نظرات</a></li>}
            @if (CmsContactUsMenu)
            {
                <li><a href="@Url.Action(MVC.Admin.ContactUs.ActionNames.Index, MVC.Admin.ContactUs.Name, new { area = MVC.Admin.Name })">پیام های تماس با ما</a></li>}
        </ul>
    </li>
}

@if (ShopMenu && true)
{
    <li class="">
        <a href="javascript:;" class="">
            <i class="fa fa-shopping-cart"></i>
            <span>فـروشگاه</span>
            <span class="fa arrow"></span>
        </a>
        <ul class="nav nav-second-level collapse">
            @if (ShopProductMenu)
            {
                <li><a href="@Url.Action(MVC.Admin.ShopProduct.ActionNames.Index, MVC.Admin.ShopProduct.Name, new { area = MVC.Admin.Name })">مدیریت محصولات</a></li>}
            @if (ShopProductGalleryMenu)
            {
                <li><a href="@Url.Action(MVC.Admin.ShopProductGallery.ActionNames.Index, MVC.Admin.ShopProductGallery.Name, new { area = MVC.Admin.Name })">مدیریت محصولات گالری</a></li>}
            @if (ShopProductCommentsMenu)
            {
                <li><a href="@Url.Action(MVC.Admin.ShopProductComments.ActionNames.Index, MVC.Admin.ShopProductComments.Name, new { area = MVC.Admin.Name })">مدیریت نظرات</a></li>}
            @if (ShopManufacturerMenu)
            {
                <li><a href="@Url.Action(MVC.Admin.ShopManuFacturer.ActionNames.Index, MVC.Admin.ShopManuFacturer.Name, new { area = MVC.Admin.Name })">مدیریت برند ها</a></li>}
            @if (ShopCategoryMenu)
            {
                <li><a href="@Url.Action(MVC.Admin.ShopCategory.ActionNames.Index, MVC.Admin.ShopCategory.Name, new { area = MVC.Admin.Name })">مدیریت دسته بندی ها</a></li>}
            @if (ShopDiscountMenu)
            {
                <li><a href="@Url.Action(MVC.Admin.ShopDiscount.ActionNames.Index, MVC.Admin.ShopDiscount.Name, new { area = MVC.Admin.Name })">مدیریت تخفیف ها</a></li>}
            @if (ShopdeliveryDateMenu)
            {
                <li><a href="@Url.Action(MVC.Admin.ShopDeliveryDate.ActionNames.Index, MVC.Admin.ShopDeliveryDate.Name, new { area = MVC.Admin.Name })">مدت زمان های تحویل</a></li>}
            @if (ShopShippingMethodMenu)
            {
                <li><a href="@Url.Action(MVC.Admin.ShopShippingMethod.ActionNames.Index, MVC.Admin.ShopShippingMethod.Name, new { area = MVC.Admin.Name })">مدیریت نحوه ارسال ها</a></li>}

            @if (ShopPaymentTypeMenu)
            {
                <li><a href="@Url.Action(MVC.Admin.ShopPaymentType.ActionNames.Index, MVC.Admin.ShopPaymentType.Name, new { area = MVC.Admin.Name })">مدیریت درگاه های پرداخت</a></li>}
            @if (ShopTaxMenu)
            {
                <li><a href="@Url.Action(MVC.Admin.ShopTax.ActionNames.Index, MVC.Admin.ShopTax.Name, new { area = MVC.Admin.Name })">مدیریت انواع مالیات</a></li>}
            @if (ShopWareHouseMenu)
            {
                <li><a href="@Url.Action(MVC.Admin.ShopWareHouse.ActionNames.Index, MVC.Admin.ShopWareHouse.Name, new { area = MVC.Admin.Name })">مدیریت انبار ها</a></li>}
            @if (ShopProductAttributeMenu)
            {
                <li><a href="@Url.Action(MVC.Admin.ShopProductAttribute.ActionNames.Index, MVC.Admin.ShopProductAttribute.Name, new { area = MVC.Admin.Name })">مشخصات محصولات</a></li>}

        </ul>
    </li>
}

@if (FactorMenu && true)
{
    <li class="">
        <a href="javascript:;" class="">
            <i class="fa fa-file-excel-o"></i>
            <span>مدیریت فاکتورها</span>
            <span class="fa arrow"></span>
        </a>
        <ul class="nav nav-second-level collapse">
            @if (SuccessOrderMenu)
            {
                <li><a href="@Url.Action(MVC.Admin.Order.ActionNames.Index, MVC.Admin.Order.Name, new { area = MVC.Admin.Name })">فاکتورهای پرداخت شده</a></li>
            }
            @if (FailOrderMenu)
            {
                <li><a href="@Url.Action(MVC.Admin.OrderNotPayment.ActionNames.Index, MVC.Admin.OrderNotPayment.Name, new { area = MVC.Admin.Name })">فاکتورها پرداخت نشده</a></li>
            }
        </ul>
    </li>
}
@if (IssueMenu)
{
    <li>
        <a href="javascript:;" class="">
            <i class="fa fa-suitcase"></i>
            <span>وظایف و کارها</span>
            <span class="fa arrow"></span>
        </a>
        <ul class="nav nav-second-level collapse">
            @if (IssueListMenu)
            {
                <li><a href="@Url.Action(MVC.Admin.Issue.ActionNames.Index, MVC.Admin.Issue.Name, new { area = MVC.Admin.Name })">لیست وظایف</a></li>}
            @if (IssueLabelMenu)
            {
                <li><a href="@Url.Action(MVC.Admin.IssueLabel.ActionNames.Index, MVC.Admin.IssueLabel.Name, new { area = MVC.Admin.Name })">برچسب های وظایف</a></li>}
        </ul>
    </li>
}


@if (UserMenu)
{
    <li>
        <a href="javascript:;" class="">
            <i class="fa fa-user"></i>
            <span>کاربران و مجوزها</span>
            <span class="fa arrow"></span>
        </a>
        <ul class="nav nav-second-level collapse">
            @if (UserAccountMenu)
            {
                <li><a href="@Url.Action(MVC.Admin.User.ActionNames.Index, MVC.Admin.User.Name, new { area = MVC.Admin.Name })">مدیرت کاربران</a></li>}
            @if (RoleMenu)
            {
                <li><a href="@Url.Action(MVC.Admin.Role.ActionNames.Index, MVC.Admin.Role.Name, new { area = MVC.Admin.Name })">مدیرت گروه ها</a></li>}
            @if (RolePermissionMenu)
            {
                <li><a href="@Url.Action(MVC.Admin.Permission.ActionNames.Index, MVC.Admin.Permission.Name, new { area = MVC.Admin.Name })">مجوز ها</a></li>}
        </ul>
    </li>
}

@if (ConfigurationMenu)
{
    <li>
        <a href="javascript:;" class="">
            <i class="fa fa-cogs"></i>
            <span>تنظیمات</span>
            <span class="fa arrow"></span>
        </a>
        <ul class="nav nav-second-level collapse">
            @if (ConfigPublicMenu)
            {
                <li><a href="@Url.Action(MVC.Admin.Configuration.ActionNames.Index, MVC.Admin.Configuration.Name, new { area = MVC.Admin.Name })">تنظیمات عمومی</a></li>}
            @if (ConfigMenuMenu)
            {
                <li><a href="@Url.Action(MVC.Admin.Menu.ActionNames.Index, MVC.Admin.Menu.Name, new { area = MVC.Admin.Name })">مدیریت منو</a></li>}
            @if (ConfigLinksMenu)
            {
                <li><a href="@Url.Action(MVC.Admin.Link.ActionNames.Index, MVC.Admin.Link.Name, new { area = MVC.Admin.Name })">مدیریت پیوندها</a></li>}
            @if (ConfigStateMenu)
            {
                <li><a href="@Url.Action(MVC.Admin.AddressState.ActionNames.Index, MVC.Admin.AddressState.Name, new { area = MVC.Admin.Name })">مدیریت استان ها</a></li>}
            @if (ConfigCityMenu)
            {
                <li><a href="@Url.Action(MVC.Admin.AddressCity.ActionNames.Index, MVC.Admin.AddressCity.Name, new { area = MVC.Admin.Name })">مدیریت شهر ها</a></li>}
            @if (ConfigProductColor)
            {
                <li><a href="@Url.Action(MVC.Admin.ProductColor.ActionNames.Index, MVC.Admin.ProductColor.Name, new { area = MVC.Admin.Name })">مدیریت رنگ های محصولات</a></li>}
            @if (ConfigProductSize)
            {
                <li><a href="@Url.Action(MVC.Admin.ProductSize.ActionNames.Index, MVC.Admin.ProductSize.Name, new { area = MVC.Admin.Name })">مدیریت سایزهای محصولات</a></li>}
        </ul>
    </li>
}


<li>
    <a href="javascript:;" class="">
        <i class="fa fa-cogs"></i>
        <span>سیستم مدیریت نت</span>
        <span class="fa arrow"></span>
    </a>
    <ul class="nav nav-second-level collapse">
        <li><a href="@Url.Action(MVC.Admin.NetAccCompany.ActionNames.Index, MVC.Admin.NetAccCompany.Name, new { area = MVC.Admin.Name })">مدیریت شرکت ها</a></li>
    </ul>
</li>










@model List<Netotik.Domain.Entity.Menu>
@foreach (var item in Model.Where(x => !x.ParentId.HasValue))
{
    <li>
        @if (item.SubMenues.Any())
        {
            <a href="#">
                <i class="@item.Icon"></i>
                <span class="nav-label">@item.Text</span>
                <span class="fa arrow"></span>
            </a>

            <ul class="nav nav-second-level collapse">
                @foreach (var item2 in item.SubMenues)
                {
                    <li>
                        @if (item2.SubMenues.Any())
                        {
                            <a href="#">منوی سه سطحه <span class="fa arrow"></span></a>
                            <ul class="nav nav-third-level">
                                <li>
                                    <a href="#">آیتم سطح سوم</a>
                                </li>

                            </ul>

                        }
                        else
                        {
                            <a href="@item2.Url">@item2.Text</a>
                        }
                    </li>
                }
            </ul>

        }
        else
        {
            <a href="@item.Url"><i class="@item.Icon"></i> <span class="nav-label">@item.Text</span></a>
        }
    </li>
}
