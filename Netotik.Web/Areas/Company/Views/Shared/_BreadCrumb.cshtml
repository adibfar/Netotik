@using DNTBreadCrumb
@{
    var homeUrl = Url.Action("Index", "Home");
    const string homePage = "داشبورد";

    var breadCrumbs = this.Context.Items[BreadCrumbExtentions.CurrentBreadCrumbKey] as List<BreadCrumb>;
    var currentFullUrl = this.Request.Url.ToString();
    var currentRouteUrl = Url.RouteUrl(this.ViewContext.RouteData.Values);
    var isCurrentPageHomeUrl = homeUrl.Equals(currentFullUrl, StringComparison.OrdinalIgnoreCase) ||
                               homeUrl.Equals(currentRouteUrl, StringComparison.OrdinalIgnoreCase);
}


@if (breadCrumbs != null && breadCrumbs.Any())
{

    <div class="row wrapper border-bottom white-bg page-heading">
        <div class="col-lg-12">
            <h2></h2>
            <div class="row">
                <div class="col-lg-12">
                    <ul class="breadcrumb">
                        @if (isCurrentPageHomeUrl)
                        {
                            <li class="active" style="color:#95949a">
                                <span class="fa fa-desktop" aria-hidden="true"></span>
                                @homePage
                            </li>
                        }
                        else
                        {
                            <li>
                                <a href="@homeUrl" style="color: #2f4050">
                                    <span class="fa fa-desktop" aria-hidden="true"></span>
                                    @homePage
                                </a>
                            </li>
                        }

                        @foreach (var node in breadCrumbs.OrderBy(x => x.Order))
                        {
                            if (node.Url.Equals(homeUrl, StringComparison.OrdinalIgnoreCase))
                            {
                                continue;
                            }

                            if (node.Url.Equals(currentFullUrl, StringComparison.OrdinalIgnoreCase) ||
                                node.Url.Equals(currentRouteUrl, StringComparison.OrdinalIgnoreCase))
                            {
                                <li class="active" style="color:#95949a">
                                    @if (!string.IsNullOrWhiteSpace(node.GlyphIcon))
                                    {
                                        <span class="" aria-hidden="true"></span>
                                    }
                                    @node.Title
                                </li>

                            }
                            else
                            {
                                <li>
                                    <a href="@node.Url" style="color: #2f4050">
                                        @if (!string.IsNullOrWhiteSpace(node.GlyphIcon))
                                        {
                                            <span class="" aria-hidden="true"></span>
                                        }
                                        @node.Title
                                    </a>
                                </li>
                            }
                        }
                    </ul>
                </div>
            </div>

        </div>
    </div>
}