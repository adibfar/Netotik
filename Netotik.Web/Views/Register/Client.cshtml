@using Netotik.Common.Helpers
@using Netotik.ViewModels.Identity.UserClient

@model UserRegisterModel
@{
    Layout = MVC.Shared.Views._Layout;
}

<section class="flexbox-container">
    @if (ViewBag.Success != null)
    {
        <div class="col-md-8 offset-md-2 col-xs-12">
            <div class="alert alert-icon-left alert-success alert-dismissible fade in mb-2" role="alert">
                <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                    <span aria-hidden="true">×</span>
                </button>
                <strong>@Captions.RegisterDone</strong> @ViewBag.Success
            </div>
        </div>
    }
    else
    {

        <div class="col-md-6 offset-md-3 col-xs-10 box-shadow-2 p-0">
            <div class="card border-grey border-lighten-3 m-0">
                <div class="card-body collapse in">
                    @if (ViewBag.Message != null)
                {
                        <div class="alert alert-icon-left alert-danger alert-dismissible fade in mb-2" role="alert">
                            <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                                <span aria-hidden="true">×</span>
                            </button>
                            <strong>@Captions.MissionFail</strong> @ViewBag.Message
                        </div>

                    }
                    <div class="card-block">
                        @using (Html.BeginForm(MVC.Register.ActionNames.Client, MVC.Register.Name, new { ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", role = "form", id = "loginForm", autocomplete = "off" }))
                        {
                            @Html.AntiForgeryToken()
                            <div class="row">
                                <div class="col-md-4">
                                    <div class="form-group has-feedback has-icon-left">
                                        @Html.TextBoxFor(m => m.first_name, new { @class = "form-control", placeholder = Captions.Name })
                                        <div class="form-control-position">
                                            <i class="icon-head"></i>
                                        </div>
                                        @Html.ValidationMessageFor(model => model.first_name, "", htmlAttributes: new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group has-feedback has-icon-left">
                                        @Html.TextBoxFor(m => m.last_name, new { @class = "form-control", placeholder = Captions.LastName })
                                        <div class="form-control-position">
                                            <i class="icon-user"></i>
                                        </div>
                                        @Html.ValidationMessageFor(model => model.last_name, "", htmlAttributes: new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group has-feedback has-icon-left">
                                        @Html.TextBoxFor(m => m.phone, new { @class = "form-control", placeholder = Captions.MobileNumber })
                                        <div class="form-control-position">
                                            <i class="icon-phone"></i>
                                        </div>
                                        @Html.ValidationMessageFor(model => model.phone, "", htmlAttributes: new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-4">
                                    <div class="form-group has-feedback has-icon-left">
                                        @Html.TextBoxFor(m => m.NationalCode, new { @class = "form-control", placeholder = Captions.NationalCode })
                                        <div class="form-control-position">
                                            <i class="icon-diamonds"></i>
                                        </div>
                                        @Html.ValidationMessageFor(model => model.NationalCode, "", htmlAttributes: new { @class = "text-danger" })
                                    </div>
                                </div>                         
                                <div class="col-md-4">
                                    <div class="form-group has-feedback has-icon-left">
                                        @Html.TextBoxFor(m => m.email, new { @class = "form-control", placeholder = Captions.Email })
                                        <div class="form-control-position">
                                            <i class="icon-mail"></i>
                                        </div>
                                        @Html.ValidationMessageFor(model => model.email, "", htmlAttributes: new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group has-feedback has-icon-left">
                                        <div class="position-relative has-icon-left">
                                            @Html.TextBoxFor(m => m.location, new { @class = "form-control", placeholder = Captions.Location })
                                            <div class="form-control-position">
                                                <i class="icon-location"></i>
                                            </div>
                                            @Html.ValidationMessageFor(model => model.location, "", htmlAttributes: new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group has-feedback has-icon-left">
                                        @Html.TextBoxFor(m => m.username, new { @class = "form-control", placeholder = Captions.UserName })
                                        <div class="form-control-position">
                                            <i class="icon-head"></i>
                                        </div>
                                        @Html.ValidationMessageFor(model => model.username, "", htmlAttributes: new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    
                                    <select id="profile" name="profile" data-placeholder="انتخاب تعرفه" class="selectize-select" style="min-width:350px;" tabindex="2">
                                        @foreach (var item in ViewBag.profiles)
                                        {
                                            <option value="@item.name">@item.name | قیمت:@item.price</option>
                                        }
                                    </select>
                                </div>
                                </div>
                                <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group has-feedback has-icon-left">
                                        @Html.PasswordFor(m => m.password, new { @class = "form-control", placeholder = Captions.Password })
                                        <div class="form-control-position">
                                            <i class="icon-key2"></i>
                                        </div>
                                        @Html.ValidationMessageFor(model => model.password, "", htmlAttributes: new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group has-feedback has-icon-left">
                                        @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control", placeholder = Captions.ConfirmPassword })
                                        <div class="form-control-position">
                                            <i class="icon-key2"></i>
                                        </div>
                                        @Html.ValidationMessageFor(model => model.ConfirmPassword, "", htmlAttributes: new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            
                                
                            <div class="controls">
                                <label class="custom-control custom-checkbox">
                                    <input required="" value="single" name="styled_single_checkbox" class="custom-control-input" aria-invalid="false" type="checkbox">
                                    <span class="custom-control-indicator"></span>
                                    <span class="custom-control-description">
                                        @Captions.PrivacyMessage
                                    </span>
                                </label>
                            </div>
                            <button type="submit" class="btn btn-success btn-block">
                                <i class="icon-user"></i> @Captions.Register
                            </button>
                        }
                    </div>
                    <div class="card-block">
                        <a href="#" class="btn btn-outline-primary btn-block"><i class="icon-lock4"></i> @Captions.LoginToUserAccount</a>
                    </div>
                </div>
            </div>
        </div>
    }
</section>
