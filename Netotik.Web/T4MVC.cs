// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments and CLS compliance
// 0108: suppress "Foo hides inherited member Foo. Use the new keyword if hiding was intended." when a controller and its abstract parent are both processed
// 0114: suppress "Foo.BarController.Baz()' hides inherited member 'Qux.BarController.Baz()'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword." when an action (with an argument) overrides an action in a parent controller
#pragma warning disable 1591, 3008, 3009, 0108, 0114
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Threading.Tasks;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;

[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
public static partial class MVC
{
    static readonly AdminClass s_Admin = new AdminClass();
    public static AdminClass Admin { get { return s_Admin; } }
    static readonly CompanyClass s_Company = new CompanyClass();
    public static CompanyClass Company { get { return s_Company; } }
    static readonly ResellerClass s_Reseller = new ResellerClass();
    public static ResellerClass Reseller { get { return s_Reseller; } }
    static readonly UserClass s_User = new UserClass();
    public static UserClass User { get { return s_User; } }
    public static Netotik.Web.Controllers.AccountController Account = new Netotik.Web.Controllers.T4MVC_AccountController();
    public static Netotik.Web.Controllers.BlogController Blog = new Netotik.Web.Controllers.T4MVC_BlogController();
    public static Netotik.Web.Controllers.ContactUsController ContactUs = new Netotik.Web.Controllers.T4MVC_ContactUsController();
    public static Netotik.Web.Controllers.ErrorController Error = new Netotik.Web.Controllers.T4MVC_ErrorController();
    public static Netotik.Web.Controllers.FactorController Factor = new Netotik.Web.Controllers.T4MVC_FactorController();
    public static Netotik.Web.Controllers.HomeController Home = new Netotik.Web.Controllers.T4MVC_HomeController();
    public static Netotik.Web.Controllers.LoginController Login = new Netotik.Web.Controllers.T4MVC_LoginController();
    public static Netotik.Web.Controllers.MetaTagController MetaTag = new Netotik.Web.Controllers.T4MVC_MetaTagController();
    public static Netotik.Web.Controllers.ProductController Product = new Netotik.Web.Controllers.T4MVC_ProductController();
    public static Netotik.Web.Controllers.RegisterController Register = new Netotik.Web.Controllers.T4MVC_RegisterController();
    public static Netotik.Web.Controllers.RemoteController Remote = new Netotik.Web.Controllers.T4MVC_RemoteController();
    public static T4MVC.SharedController Shared = new T4MVC.SharedController();
    public static T4MVC.UserMailerController UserMailer = new T4MVC.UserMailerController();
}

namespace T4MVC
{
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public class AdminClass
    {
        public readonly string Name = "Admin";
        public Netotik.Web.Areas.Admin.Controllers.AdvertiseController Advertise = new Netotik.Web.Areas.Admin.Controllers.T4MVC_AdvertiseController();
        public Netotik.Web.Areas.Admin.Controllers.CityController City = new Netotik.Web.Areas.Admin.Controllers.T4MVC_CityController();
        public Netotik.Web.Areas.Admin.Controllers.CommentsController Comments = new Netotik.Web.Areas.Admin.Controllers.T4MVC_CommentsController();
        public Netotik.Web.Areas.Admin.Controllers.ConfigurationController Configuration = new Netotik.Web.Areas.Admin.Controllers.T4MVC_ConfigurationController();
        public Netotik.Web.Areas.Admin.Controllers.ContactUsController ContactUs = new Netotik.Web.Areas.Admin.Controllers.T4MVC_ContactUsController();
        public Netotik.Web.Areas.Admin.Controllers.ContentCategoryController ContentCategory = new Netotik.Web.Areas.Admin.Controllers.T4MVC_ContentCategoryController();
        public Netotik.Web.Areas.Admin.Controllers.ContentController Content = new Netotik.Web.Areas.Admin.Controllers.T4MVC_ContentController();
        public Netotik.Web.Areas.Admin.Controllers.ContentTagController ContentTag = new Netotik.Web.Areas.Admin.Controllers.T4MVC_ContentTagController();
        public Netotik.Web.Areas.Admin.Controllers.HomeController Home = new Netotik.Web.Areas.Admin.Controllers.T4MVC_HomeController();
        public Netotik.Web.Areas.Admin.Controllers.IssueController Issue = new Netotik.Web.Areas.Admin.Controllers.T4MVC_IssueController();
        public Netotik.Web.Areas.Admin.Controllers.IssueLabelController IssueLabel = new Netotik.Web.Areas.Admin.Controllers.T4MVC_IssueLabelController();
        public Netotik.Web.Areas.Admin.Controllers.LinkController Link = new Netotik.Web.Areas.Admin.Controllers.T4MVC_LinkController();
        public Netotik.Web.Areas.Admin.Controllers.LuceneIndexingController LuceneIndexing = new Netotik.Web.Areas.Admin.Controllers.T4MVC_LuceneIndexingController();
        public Netotik.Web.Areas.Admin.Controllers.MenuController Menu = new Netotik.Web.Areas.Admin.Controllers.T4MVC_MenuController();
        public Netotik.Web.Areas.Admin.Controllers.OrderController Order = new Netotik.Web.Areas.Admin.Controllers.T4MVC_OrderController();
        public Netotik.Web.Areas.Admin.Controllers.OrderNotPaymentController OrderNotPayment = new Netotik.Web.Areas.Admin.Controllers.T4MVC_OrderNotPaymentController();
        public Netotik.Web.Areas.Admin.Controllers.ResellerController Reseller = new Netotik.Web.Areas.Admin.Controllers.T4MVC_ResellerController();
        public Netotik.Web.Areas.Admin.Controllers.ResourceController Resource = new Netotik.Web.Areas.Admin.Controllers.T4MVC_ResourceController();
        public Netotik.Web.Areas.Admin.Controllers.RoleController Role = new Netotik.Web.Areas.Admin.Controllers.T4MVC_RoleController();
        public Netotik.Web.Areas.Admin.Controllers.ShopCategoryController ShopCategory = new Netotik.Web.Areas.Admin.Controllers.T4MVC_ShopCategoryController();
        public Netotik.Web.Areas.Admin.Controllers.ShopDeliveryDateController ShopDeliveryDate = new Netotik.Web.Areas.Admin.Controllers.T4MVC_ShopDeliveryDateController();
        public Netotik.Web.Areas.Admin.Controllers.ShopDiscountController ShopDiscount = new Netotik.Web.Areas.Admin.Controllers.T4MVC_ShopDiscountController();
        public Netotik.Web.Areas.Admin.Controllers.ShopManuFacturerController ShopManuFacturer = new Netotik.Web.Areas.Admin.Controllers.T4MVC_ShopManuFacturerController();
        public Netotik.Web.Areas.Admin.Controllers.ShopPaymentTypeController ShopPaymentType = new Netotik.Web.Areas.Admin.Controllers.T4MVC_ShopPaymentTypeController();
        public Netotik.Web.Areas.Admin.Controllers.ShopProductAttributeController ShopProductAttribute = new Netotik.Web.Areas.Admin.Controllers.T4MVC_ShopProductAttributeController();
        public Netotik.Web.Areas.Admin.Controllers.ShopProductCommentsController ShopProductComments = new Netotik.Web.Areas.Admin.Controllers.T4MVC_ShopProductCommentsController();
        public Netotik.Web.Areas.Admin.Controllers.ShopProductController ShopProduct = new Netotik.Web.Areas.Admin.Controllers.T4MVC_ShopProductController();
        public Netotik.Web.Areas.Admin.Controllers.ShopShippingByWeightController ShopShippingByWeight = new Netotik.Web.Areas.Admin.Controllers.T4MVC_ShopShippingByWeightController();
        public Netotik.Web.Areas.Admin.Controllers.ShopShippingMethodController ShopShippingMethod = new Netotik.Web.Areas.Admin.Controllers.T4MVC_ShopShippingMethodController();
        public Netotik.Web.Areas.Admin.Controllers.ShopTaxController ShopTax = new Netotik.Web.Areas.Admin.Controllers.T4MVC_ShopTaxController();
        public Netotik.Web.Areas.Admin.Controllers.ShopWareHouseController ShopWareHouse = new Netotik.Web.Areas.Admin.Controllers.T4MVC_ShopWareHouseController();
        public Netotik.Web.Areas.Admin.Controllers.SliderController Slider = new Netotik.Web.Areas.Admin.Controllers.T4MVC_SliderController();
        public Netotik.Web.Areas.Admin.Controllers.StateController State = new Netotik.Web.Areas.Admin.Controllers.T4MVC_StateController();
        public Netotik.Web.Areas.Admin.Controllers.UserController User = new Netotik.Web.Areas.Admin.Controllers.T4MVC_UserController();
        public T4MVC.Admin.SharedController Shared = new T4MVC.Admin.SharedController();
    }
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public class CompanyClass
    {
        public readonly string Name = "Company";
        public Netotik.Web.Areas.Company.Controllers.HomeController Home = new Netotik.Web.Areas.Company.Controllers.T4MVC_HomeController();
        public Netotik.Web.Areas.Company.Controllers.RouterController Router = new Netotik.Web.Areas.Company.Controllers.T4MVC_RouterController();
        public Netotik.Web.Areas.Company.Controllers.UserManagerController UserManager = new Netotik.Web.Areas.Company.Controllers.T4MVC_UserManagerController();
        public T4MVC.Company.SharedController Shared = new T4MVC.Company.SharedController();
    }
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public class ResellerClass
    {
        public readonly string Name = "Reseller";
        public Netotik.Web.Areas.Reseller.Controllers.CompanyController Company = new Netotik.Web.Areas.Reseller.Controllers.T4MVC_CompanyController();
        public Netotik.Web.Areas.Reseller.Controllers.HomeController Home = new Netotik.Web.Areas.Reseller.Controllers.T4MVC_HomeController();
        public T4MVC.Reseller.SharedController Shared = new T4MVC.Reseller.SharedController();
    }
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public class UserClass
    {
        public readonly string Name = "User";
        public T4MVC.User.SharedController Shared = new T4MVC.User.SharedController();
    }
}

namespace T4MVC
{
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public class Dummy
    {
        private Dummy() { }
        public static Dummy Instance = new Dummy();
    }
}

[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
internal partial class T4MVC_System_Web_Mvc_ActionResult : System.Web.Mvc.ActionResult, IT4MVCActionResult
{
    public T4MVC_System_Web_Mvc_ActionResult(string area, string controller, string action, string protocol = null): base()
    {
        this.InitMVCT4Result(area, controller, action, protocol);
    }
     
    public override void ExecuteResult(System.Web.Mvc.ControllerContext context) { }
    
    public string Controller { get; set; }
    public string Action { get; set; }
    public string Protocol { get; set; }
    public RouteValueDictionary RouteValueDictionary { get; set; }
}
[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
internal partial class T4MVC_System_Web_Mvc_JsonResult : System.Web.Mvc.JsonResult, IT4MVCActionResult
{
    public T4MVC_System_Web_Mvc_JsonResult(string area, string controller, string action, string protocol = null): base()
    {
        this.InitMVCT4Result(area, controller, action, protocol);
    }
    
    public string Controller { get; set; }
    public string Action { get; set; }
    public string Protocol { get; set; }
    public RouteValueDictionary RouteValueDictionary { get; set; }
}



namespace Links
{
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public static class Scripts {
        private const string URLPATH = "~/Scripts";
        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
        public static readonly string _references_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/_references.min.js") ? Url("_references.min.js") : Url("_references.js");
        public static readonly string admin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/admin.min.js") ? Url("admin.min.js") : Url("admin.js");
        public static readonly string ajaxfileupload_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ajaxfileupload.min.js") ? Url("ajaxfileupload.min.js") : Url("ajaxfileupload.js");
        public static readonly string bootstrap_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap.min.js") ? Url("bootstrap.min.js") : Url("bootstrap.js");
        public static readonly string bootstrap_min_js = Url("bootstrap.min.js");
        public static readonly string cloud_zoom_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/cloud-zoom.min.js") ? Url("cloud-zoom.min.js") : Url("cloud-zoom.js");
        public static readonly string Factor_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/Factor.min.js") ? Url("Factor.min.js") : Url("Factor.js");
        public static readonly string fileinput_min_js = Url("fileinput.min.js");
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class i18n {
            private const string URLPATH = "~/Scripts/i18n";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            public static readonly string grid_locale_ar_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/grid.locale-ar.min.js") ? Url("grid.locale-ar.min.js") : Url("grid.locale-ar.js");
            public static readonly string grid_locale_bg_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/grid.locale-bg.min.js") ? Url("grid.locale-bg.min.js") : Url("grid.locale-bg.js");
            public static readonly string grid_locale_bg1251_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/grid.locale-bg1251.min.js") ? Url("grid.locale-bg1251.min.js") : Url("grid.locale-bg1251.js");
            public static readonly string grid_locale_cat_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/grid.locale-cat.min.js") ? Url("grid.locale-cat.min.js") : Url("grid.locale-cat.js");
            public static readonly string grid_locale_cn_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/grid.locale-cn.min.js") ? Url("grid.locale-cn.min.js") : Url("grid.locale-cn.js");
            public static readonly string grid_locale_cs_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/grid.locale-cs.min.js") ? Url("grid.locale-cs.min.js") : Url("grid.locale-cs.js");
            public static readonly string grid_locale_da_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/grid.locale-da.min.js") ? Url("grid.locale-da.min.js") : Url("grid.locale-da.js");
            public static readonly string grid_locale_de_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/grid.locale-de.min.js") ? Url("grid.locale-de.min.js") : Url("grid.locale-de.js");
            public static readonly string grid_locale_dk_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/grid.locale-dk.min.js") ? Url("grid.locale-dk.min.js") : Url("grid.locale-dk.js");
            public static readonly string grid_locale_el_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/grid.locale-el.min.js") ? Url("grid.locale-el.min.js") : Url("grid.locale-el.js");
            public static readonly string grid_locale_en_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/grid.locale-en.min.js") ? Url("grid.locale-en.min.js") : Url("grid.locale-en.js");
            public static readonly string grid_locale_es_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/grid.locale-es.min.js") ? Url("grid.locale-es.min.js") : Url("grid.locale-es.js");
            public static readonly string grid_locale_fa_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/grid.locale-fa.min.js") ? Url("grid.locale-fa.min.js") : Url("grid.locale-fa.js");
            public static readonly string grid_locale_fi_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/grid.locale-fi.min.js") ? Url("grid.locale-fi.min.js") : Url("grid.locale-fi.js");
            public static readonly string grid_locale_fr_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/grid.locale-fr.min.js") ? Url("grid.locale-fr.min.js") : Url("grid.locale-fr.js");
            public static readonly string grid_locale_gl_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/grid.locale-gl.min.js") ? Url("grid.locale-gl.min.js") : Url("grid.locale-gl.js");
            public static readonly string grid_locale_he_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/grid.locale-he.min.js") ? Url("grid.locale-he.min.js") : Url("grid.locale-he.js");
            public static readonly string grid_locale_hr_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/grid.locale-hr.min.js") ? Url("grid.locale-hr.min.js") : Url("grid.locale-hr.js");
            public static readonly string grid_locale_hr1250_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/grid.locale-hr1250.min.js") ? Url("grid.locale-hr1250.min.js") : Url("grid.locale-hr1250.js");
            public static readonly string grid_locale_hu_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/grid.locale-hu.min.js") ? Url("grid.locale-hu.min.js") : Url("grid.locale-hu.js");
            public static readonly string grid_locale_id_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/grid.locale-id.min.js") ? Url("grid.locale-id.min.js") : Url("grid.locale-id.js");
            public static readonly string grid_locale_is_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/grid.locale-is.min.js") ? Url("grid.locale-is.min.js") : Url("grid.locale-is.js");
            public static readonly string grid_locale_it_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/grid.locale-it.min.js") ? Url("grid.locale-it.min.js") : Url("grid.locale-it.js");
            public static readonly string grid_locale_ja_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/grid.locale-ja.min.js") ? Url("grid.locale-ja.min.js") : Url("grid.locale-ja.js");
            public static readonly string grid_locale_kr_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/grid.locale-kr.min.js") ? Url("grid.locale-kr.min.js") : Url("grid.locale-kr.js");
            public static readonly string grid_locale_lt_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/grid.locale-lt.min.js") ? Url("grid.locale-lt.min.js") : Url("grid.locale-lt.js");
            public static readonly string grid_locale_mne_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/grid.locale-mne.min.js") ? Url("grid.locale-mne.min.js") : Url("grid.locale-mne.js");
            public static readonly string grid_locale_nl_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/grid.locale-nl.min.js") ? Url("grid.locale-nl.min.js") : Url("grid.locale-nl.js");
            public static readonly string grid_locale_no_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/grid.locale-no.min.js") ? Url("grid.locale-no.min.js") : Url("grid.locale-no.js");
            public static readonly string grid_locale_pl_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/grid.locale-pl.min.js") ? Url("grid.locale-pl.min.js") : Url("grid.locale-pl.js");
            public static readonly string grid_locale_pt_br_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/grid.locale-pt-br.min.js") ? Url("grid.locale-pt-br.min.js") : Url("grid.locale-pt-br.js");
            public static readonly string grid_locale_pt_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/grid.locale-pt.min.js") ? Url("grid.locale-pt.min.js") : Url("grid.locale-pt.js");
            public static readonly string grid_locale_ro_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/grid.locale-ro.min.js") ? Url("grid.locale-ro.min.js") : Url("grid.locale-ro.js");
            public static readonly string grid_locale_ru_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/grid.locale-ru.min.js") ? Url("grid.locale-ru.min.js") : Url("grid.locale-ru.js");
            public static readonly string grid_locale_sk_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/grid.locale-sk.min.js") ? Url("grid.locale-sk.min.js") : Url("grid.locale-sk.js");
            public static readonly string grid_locale_sr_latin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/grid.locale-sr-latin.min.js") ? Url("grid.locale-sr-latin.min.js") : Url("grid.locale-sr-latin.js");
            public static readonly string grid_locale_sr_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/grid.locale-sr.min.js") ? Url("grid.locale-sr.min.js") : Url("grid.locale-sr.js");
            public static readonly string grid_locale_sv_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/grid.locale-sv.min.js") ? Url("grid.locale-sv.min.js") : Url("grid.locale-sv.js");
            public static readonly string grid_locale_th_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/grid.locale-th.min.js") ? Url("grid.locale-th.min.js") : Url("grid.locale-th.js");
            public static readonly string grid_locale_tr_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/grid.locale-tr.min.js") ? Url("grid.locale-tr.min.js") : Url("grid.locale-tr.js");
            public static readonly string grid_locale_tw_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/grid.locale-tw.min.js") ? Url("grid.locale-tw.min.js") : Url("grid.locale-tw.js");
            public static readonly string grid_locale_ua_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/grid.locale-ua.min.js") ? Url("grid.locale-ua.min.js") : Url("grid.locale-ua.js");
            public static readonly string grid_locale_vi_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/grid.locale-vi.min.js") ? Url("grid.locale-vi.min.js") : Url("grid.locale-vi.js");
        }
    
        public static readonly string jquery_1_10_2_intellisense_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery-1.10.2.intellisense.min.js") ? Url("jquery-1.10.2.intellisense.min.js") : Url("jquery-1.10.2.intellisense.js");
        public static readonly string jquery_1_10_2_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery-1.10.2.min.js") ? Url("jquery-1.10.2.min.js") : Url("jquery-1.10.2.js");
        public static readonly string jquery_1_10_2_min_js = Url("jquery-1.10.2.min.js");
        public static readonly string jquery_1_10_2_min_map = Url("jquery-1.10.2.min.map");
        public static readonly string jquery_2_1_4_min_js = Url("jquery-2.1.4.min.js");
        public static readonly string jquery_MVC_RemoveRow_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery-MVC-RemoveRow.min.js") ? Url("jquery-MVC-RemoveRow.min.js") : Url("jquery-MVC-RemoveRow.js");
        public static readonly string jquery_ui_1_11_4_min_js = Url("jquery-ui-1.11.4.min.js");
        public static readonly string jquery_ui_1_8_11_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery-ui-1.8.11.min.js") ? Url("jquery-ui-1.8.11.min.js") : Url("jquery-ui-1.8.11.js");
        public static readonly string jquery_ui_1_8_11_min_js = Url("jquery-ui-1.8.11.min.js");
        public static readonly string jquery_autocomplete_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.autocomplete.min.js") ? Url("jquery.autocomplete.min.js") : Url("jquery.autocomplete.js");
        public static readonly string jquery_blockUI_min_js = Url("jquery.blockUI.min.js");
        public static readonly string jquery_jqGrid_min_js = Url("jquery.jqGrid.min.js");
        public static readonly string jquery_jqGrid_src_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.jqGrid.src.min.js") ? Url("jquery.jqGrid.src.min.js") : Url("jquery.jqGrid.src.js");
        public static readonly string jquery_unobtrusive_ajax_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.unobtrusive-ajax.min.js") ? Url("jquery.unobtrusive-ajax.min.js") : Url("jquery.unobtrusive-ajax.js");
        public static readonly string jquery_unobtrusive_ajax_min_js = Url("jquery.unobtrusive-ajax.min.js");
        public static readonly string jquery_validate_vsdoc_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.validate-vsdoc.min.js") ? Url("jquery.validate-vsdoc.min.js") : Url("jquery.validate-vsdoc.js");
        public static readonly string jquery_validate_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.validate.min.js") ? Url("jquery.validate.min.js") : Url("jquery.validate.js");
        public static readonly string jquery_validate_unobtrusive_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.validate.unobtrusive.min.js") ? Url("jquery.validate.unobtrusive.min.js") : Url("jquery.validate.unobtrusive.js");
        public static readonly string jqueryval_default_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jqueryval-default.min.js") ? Url("jqueryval-default.min.js") : Url("jqueryval-default.js");
        public static readonly string lazysizes_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/lazysizes.min.js") ? Url("lazysizes.min.js") : Url("lazysizes.js");
        public static readonly string modernizr_2_8_3_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/modernizr-2.8.3.min.js") ? Url("modernizr-2.8.3.min.js") : Url("modernizr-2.8.3.js");
        public static readonly string PersianDatePicker_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/PersianDatePicker.min.js") ? Url("PersianDatePicker.min.js") : Url("PersianDatePicker.js");
        public static readonly string respond_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/respond.min.js") ? Url("respond.min.js") : Url("respond.js");
        public static readonly string respond_matchmedia_addListener_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/respond.matchmedia.addListener.min.js") ? Url("respond.matchmedia.addListener.min.js") : Url("respond.matchmedia.addListener.js");
        public static readonly string respond_matchmedia_addListener_min_js = Url("respond.matchmedia.addListener.min.js");
        public static readonly string respond_min_js = Url("respond.min.js");
        public static readonly string sweet_alert_min_js = Url("sweet-alert.min.js");
        public static readonly string thumbelina_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/thumbelina.min.js") ? Url("thumbelina.min.js") : Url("thumbelina.js");
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public static class Content {
        private const string URLPATH = "~/Content";
        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class css {
            private const string URLPATH = "~/Content/css";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            public static readonly string app_min_css = Url("app.min.css");
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class components {
                private const string URLPATH = "~/Content/css/components";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class buttons {
                    private const string URLPATH = "~/Content/css/components/buttons";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string ladda_themeless_min_css = Url("ladda-themeless.min.css");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class weather_icons {
                    private const string URLPATH = "~/Content/css/components/weather-icons";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string climacons_min_css = Url("climacons.min.css");
                }
            
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class fonts {
                private const string URLPATH = "~/Content/css/fonts";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class tinymce {
                    private const string URLPATH = "~/Content/css/fonts/tinymce";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string tinymce_small_ttf = Url("tinymce-small.ttf");
                    public static readonly string tinymce_small_woff = Url("tinymce-small.woff");
                    public static readonly string tinymce_ttf = Url("tinymce.ttf");
                    public static readonly string tinymce_woff = Url("tinymce.woff");
                }
            
            }
        
            public static readonly string my_style_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/my-style.min.css") ? Url("my-style.min.css") : Url("my-style.css");
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class plugins {
                private const string URLPATH = "~/Content/css/plugins";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class calendars {
                    private const string URLPATH = "~/Content/css/plugins/calendars";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string fullcalendar_min_css = Url("fullcalendar.min.css");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class charts {
                    private const string URLPATH = "~/Content/css/plugins/charts";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string c3_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/c3.min.css") ? Url("c3.min.css") : Url("c3.css");
                    public static readonly string chartist_plugin_tooltip_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/chartist-plugin-tooltip.min.css") ? Url("chartist-plugin-tooltip.min.css") : Url("chartist-plugin-tooltip.css");
                    public static readonly string chartist_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/chartist.min.css") ? Url("chartist.min.css") : Url("chartist.css");
                    public static readonly string d3_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/d3.min.css") ? Url("d3.min.css") : Url("d3.css");
                    public static readonly string jquery_jvectormap_2_0_3_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery-jvectormap-2.0.3.min.css") ? Url("jquery-jvectormap-2.0.3.min.css") : Url("jquery-jvectormap-2.0.3.css");
                    public static readonly string jqvmap_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jqvmap.min.css") ? Url("jqvmap.min.css") : Url("jqvmap.css");
                    public static readonly string mapael_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/mapael.min.css") ? Url("mapael.min.css") : Url("mapael.css");
                    public static readonly string morris_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/morris.min.css") ? Url("morris.min.css") : Url("morris.css");
                    public static readonly string rickshaw_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/rickshaw.min.css") ? Url("rickshaw.min.css") : Url("rickshaw.css");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class editors {
                    private const string URLPATH = "~/Content/css/plugins/editors";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class addon {
                        private const string URLPATH = "~/Content/css/plugins/editors/addon";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class dialog {
                            private const string URLPATH = "~/Content/css/plugins/editors/addon/dialog";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string dialog_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/dialog.min.css") ? Url("dialog.min.css") : Url("dialog.css");
                        }
                    
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class fold {
                            private const string URLPATH = "~/Content/css/plugins/editors/addon/fold";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string foldgutter_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/foldgutter.min.css") ? Url("foldgutter.min.css") : Url("foldgutter.css");
                        }
                    
                    }
                
                    public static readonly string codemirror_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/codemirror.min.css") ? Url("codemirror.min.css") : Url("codemirror.css");
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class quill {
                        private const string URLPATH = "~/Content/css/plugins/editors/quill";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class fonts {
                            private const string URLPATH = "~/Content/css/plugins/editors/quill/fonts";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string KaTeX_Main_Regular_woff2 = Url("KaTeX_Main-Regular.woff2");
                            public static readonly string KaTeX_Math_Italic_woff2 = Url("KaTeX_Math-Italic.woff2");
                        }
                    
                        public static readonly string katex_min_css = Url("katex.min.css");
                        public static readonly string monokai_sublime_min_css = Url("monokai-sublime.min.css");
                        public static readonly string quill_bubble_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/quill.bubble.min.css") ? Url("quill.bubble.min.css") : Url("quill.bubble.css");
                        public static readonly string quill_snow_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/quill.snow.min.css") ? Url("quill.snow.min.css") : Url("quill.snow.css");
                    }
                
                    public static readonly string summernote_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/summernote.min.css") ? Url("summernote.min.css") : Url("summernote.css");
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class theme {
                        private const string URLPATH = "~/Content/css/plugins/editors/theme";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string _3024_day_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/3024-day.min.css") ? Url("3024-day.min.css") : Url("3024-day.css");
                        public static readonly string monokai_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/monokai.min.css") ? Url("monokai.min.css") : Url("monokai.css");
                        public static readonly string night_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/night.min.css") ? Url("night.min.css") : Url("night.css");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class tinymce {
                        private const string URLPATH = "~/Content/css/plugins/editors/tinymce";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string tinymce_min_css = Url("tinymce.min.css");
                    }
                
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class extensions {
                    private const string URLPATH = "~/Content/css/plugins/extensions";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class bgvideo {
                        private const string URLPATH = "~/Content/css/plugins/extensions/bgvideo";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string bigvideo_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bigvideo.min.css") ? Url("bigvideo.min.css") : Url("bigvideo.css");
                        public static readonly string video_js_min_css = Url("video-js.min.css");
                    }
                
                    public static readonly string bootstrap_treeview_min_css = Url("bootstrap-treeview.min.css");
                    public static readonly string datedropper_min_css = Url("datedropper.min.css");
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class dd_icon {
                        private const string URLPATH = "~/Content/css/plugins/extensions/dd-icon";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string dd_icon_eot = Url("dd-icon.eot");
                        public static readonly string dd_icon_eot_ = Url("dd-icon.eot@");
                        public static readonly string dd_icon_svg = Url("dd-icon.svg");
                        public static readonly string dd_icon_ttf = Url("dd-icon.ttf");
                        public static readonly string dd_icon_woff = Url("dd-icon.woff");
                    }
                
                    public static readonly string jquery_toolbar_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.toolbar.min.css") ? Url("jquery.toolbar.min.css") : Url("jquery.toolbar.css");
                    public static readonly string long_press_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/long-press.min.css") ? Url("long-press.min.css") : Url("long-press.css");
                    public static readonly string nouislider_min_css = Url("nouislider.min.css");
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class offline {
                        private const string URLPATH = "~/Content/css/plugins/extensions/offline";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class themes {
                            private const string URLPATH = "~/Content/css/plugins/extensions/offline/themes";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string offline_language_english_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/offline-language-english.min.css") ? Url("offline-language-english.min.css") : Url("offline-language-english.css");
                            public static readonly string offline_theme_slide_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/offline-theme-slide.min.css") ? Url("offline-theme-slide.min.css") : Url("offline-theme-slide.css");
                        }
                    
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class raty {
                        private const string URLPATH = "~/Content/css/plugins/extensions/raty";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class fonts {
                            private const string URLPATH = "~/Content/css/plugins/extensions/raty/fonts";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string raty_eot = Url("raty.eot");
                            public static readonly string raty_eot_ = Url("raty.eot@");
                            public static readonly string raty_svg = Url("raty.svg");
                            public static readonly string raty_ttf = Url("raty.ttf");
                            public static readonly string raty_woff = Url("raty.woff");
                        }
                    
                        public static readonly string jquery_raty_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.raty.min.css") ? Url("jquery.raty.min.css") : Url("jquery.raty.css");
                    }
                
                    public static readonly string sweetalert_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/sweetalert.min.css") ? Url("sweetalert.min.css") : Url("sweetalert.css");
                    public static readonly string timedropper_min_css = Url("timedropper.min.css");
                    public static readonly string toastr_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/toastr.min.css") ? Url("toastr.min.css") : Url("toastr.css");
                    public static readonly string unslider_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/unslider.min.css") ? Url("unslider.min.css") : Url("unslider.css");
                    public static readonly string zoom_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/zoom.min.css") ? Url("zoom.min.css") : Url("zoom.css");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class file_uploaders {
                    private const string URLPATH = "~/Content/css/plugins/file-uploaders";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string blueimp_gallery_min_css = Url("blueimp-gallery.min.css");
                    public static readonly string dropzone_min_css = Url("dropzone.min.css");
                    public static readonly string jquery_fileupload_ui_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.fileupload-ui.min.css") ? Url("jquery.fileupload-ui.min.css") : Url("jquery.fileupload-ui.css");
                    public static readonly string jquery_fileupload_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.fileupload.min.css") ? Url("jquery.fileupload.min.css") : Url("jquery.fileupload.css");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class forms {
                    private const string URLPATH = "~/Content/css/plugins/forms";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class icheck {
                        private const string URLPATH = "~/Content/css/plugins/forms/icheck";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string custom_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/custom.min.css") ? Url("custom.min.css") : Url("custom.css");
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class flat {
                            private const string URLPATH = "~/Content/css/plugins/forms/icheck/flat";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string _all_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/_all.min.css") ? Url("_all.min.css") : Url("_all.css");
                            public static readonly string aero_png = Url("aero.png");
                            public static readonly string aero_2x_png = Url("aero@2x.png");
                            public static readonly string blue_png = Url("blue.png");
                            public static readonly string blue_2x_png = Url("blue@2x.png");
                            public static readonly string flat_png = Url("flat.png");
                            public static readonly string flat_2x_png = Url("flat@2x.png");
                            public static readonly string green_png = Url("green.png");
                            public static readonly string green_2x_png = Url("green@2x.png");
                            public static readonly string grey_png = Url("grey.png");
                            public static readonly string grey_2x_png = Url("grey@2x.png");
                            public static readonly string orange_png = Url("orange.png");
                            public static readonly string orange_2x_png = Url("orange@2x.png");
                            public static readonly string pink_png = Url("pink.png");
                            public static readonly string pink_2x_png = Url("pink@2x.png");
                            public static readonly string purple_png = Url("purple.png");
                            public static readonly string purple_2x_png = Url("purple@2x.png");
                            public static readonly string red_png = Url("red.png");
                            public static readonly string red_2x_png = Url("red@2x.png");
                            public static readonly string yellow_png = Url("yellow.png");
                            public static readonly string yellow_2x_png = Url("yellow@2x.png");
                        }
                    
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class futurico {
                            private const string URLPATH = "~/Content/css/plugins/forms/icheck/futurico";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string futurico_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/futurico.min.css") ? Url("futurico.min.css") : Url("futurico.css");
                            public static readonly string futurico_png = Url("futurico.png");
                            public static readonly string futurico_2x_png = Url("futurico@2x.png");
                        }
                    
                        public static readonly string icheck_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/icheck.min.css") ? Url("icheck.min.css") : Url("icheck.css");
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class line {
                            private const string URLPATH = "~/Content/css/plugins/forms/icheck/line";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string _all_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/_all.min.css") ? Url("_all.min.css") : Url("_all.css");
                            public static readonly string line_png = Url("line.png");
                            public static readonly string line_2x_png = Url("line@2x.png");
                        }
                    
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class minimal {
                            private const string URLPATH = "~/Content/css/plugins/forms/icheck/minimal";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string _all_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/_all.min.css") ? Url("_all.min.css") : Url("_all.css");
                            public static readonly string aero_png = Url("aero.png");
                            public static readonly string aero_2x_png = Url("aero@2x.png");
                            public static readonly string blue_png = Url("blue.png");
                            public static readonly string blue_2x_png = Url("blue@2x.png");
                            public static readonly string green_png = Url("green.png");
                            public static readonly string green_2x_png = Url("green@2x.png");
                            public static readonly string grey_png = Url("grey.png");
                            public static readonly string grey_2x_png = Url("grey@2x.png");
                            public static readonly string minimal_png = Url("minimal.png");
                            public static readonly string minimal_2x_png = Url("minimal@2x.png");
                            public static readonly string orange_png = Url("orange.png");
                            public static readonly string orange_2x_png = Url("orange@2x.png");
                            public static readonly string pink_png = Url("pink.png");
                            public static readonly string pink_2x_png = Url("pink@2x.png");
                            public static readonly string purple_png = Url("purple.png");
                            public static readonly string purple_2x_png = Url("purple@2x.png");
                            public static readonly string red_png = Url("red.png");
                            public static readonly string red_2x_png = Url("red@2x.png");
                            public static readonly string yellow_png = Url("yellow.png");
                            public static readonly string yellow_2x_png = Url("yellow@2x.png");
                        }
                    
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class polaris {
                            private const string URLPATH = "~/Content/css/plugins/forms/icheck/polaris";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string polaris_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/polaris.min.css") ? Url("polaris.min.css") : Url("polaris.css");
                            public static readonly string polaris_png = Url("polaris.png");
                            public static readonly string polaris_2x_png = Url("polaris@2x.png");
                        }
                    
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class square {
                            private const string URLPATH = "~/Content/css/plugins/forms/icheck/square";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string _all_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/_all.min.css") ? Url("_all.min.css") : Url("_all.css");
                            public static readonly string aero_png = Url("aero.png");
                            public static readonly string aero_2x_png = Url("aero@2x.png");
                            public static readonly string blue_png = Url("blue.png");
                            public static readonly string blue_2x_png = Url("blue@2x.png");
                            public static readonly string green_png = Url("green.png");
                            public static readonly string green_2x_png = Url("green@2x.png");
                            public static readonly string grey_png = Url("grey.png");
                            public static readonly string grey_2x_png = Url("grey@2x.png");
                            public static readonly string orange_png = Url("orange.png");
                            public static readonly string orange_2x_png = Url("orange@2x.png");
                            public static readonly string pink_png = Url("pink.png");
                            public static readonly string pink_2x_png = Url("pink@2x.png");
                            public static readonly string purple_png = Url("purple.png");
                            public static readonly string purple_2x_png = Url("purple@2x.png");
                            public static readonly string red_png = Url("red.png");
                            public static readonly string red_2x_png = Url("red@2x.png");
                            public static readonly string square_png = Url("square.png");
                            public static readonly string square_2x_png = Url("square@2x.png");
                            public static readonly string yellow_png = Url("yellow.png");
                            public static readonly string yellow_2x_png = Url("yellow@2x.png");
                        }
                    
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class listbox {
                        private const string URLPATH = "~/Content/css/plugins/forms/listbox";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string bootstrap_duallistbox_min_css = Url("bootstrap-duallistbox.min.css");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class selects {
                        private const string URLPATH = "~/Content/css/plugins/forms/selects";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string jquery_selectBoxIt_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.selectBoxIt.min.css") ? Url("jquery.selectBoxIt.min.css") : Url("jquery.selectBoxIt.css");
                        public static readonly string select2_min_css = Url("select2.min.css");
                        public static readonly string selectivity_full_min_css = Url("selectivity-full.min.css");
                        public static readonly string selectize_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/selectize.min.css") ? Url("selectize.min.css") : Url("selectize.css");
                        public static readonly string selectize_default_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/selectize.default.min.css") ? Url("selectize.default.min.css") : Url("selectize.default.css");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class spinner {
                        private const string URLPATH = "~/Content/css/plugins/forms/spinner";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string jquery_bootstrap_touchspin_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.bootstrap-touchspin.min.css") ? Url("jquery.bootstrap-touchspin.min.css") : Url("jquery.bootstrap-touchspin.css");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class tags {
                        private const string URLPATH = "~/Content/css/plugins/forms/tags";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string bootstrap_tagsinput_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap-tagsinput.min.css") ? Url("bootstrap-tagsinput.min.css") : Url("bootstrap-tagsinput.css");
                        public static readonly string tagging_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/tagging.min.css") ? Url("tagging.min.css") : Url("tagging.css");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class toggle {
                        private const string URLPATH = "~/Content/css/plugins/forms/toggle";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string bootstrap_switch_min_css = Url("bootstrap-switch.min.css");
                        public static readonly string switchery_min_css = Url("switchery.min.css");
                    }
                
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class pages {
                    private const string URLPATH = "~/Content/css/plugins/pages";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class lobilist {
                        private const string URLPATH = "~/Content/css/plugins/pages/lobilist";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string lobilist_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/lobilist.min.css") ? Url("lobilist.min.css") : Url("lobilist.css");
                    }
                
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class pagination {
                    private const string URLPATH = "~/Content/css/plugins/pagination";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string bootstrap_datepaginator_min_css = Url("bootstrap-datepaginator.min.css");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class pickers {
                    private const string URLPATH = "~/Content/css/plugins/pickers";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class colorpicker {
                        private const string URLPATH = "~/Content/css/plugins/pickers/colorpicker";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string bootstrap_colorpicker_min_css = Url("bootstrap-colorpicker.min.css");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class miniColors {
                        private const string URLPATH = "~/Content/css/plugins/pickers/miniColors";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string jquery_minicolors_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.minicolors.min.css") ? Url("jquery.minicolors.min.css") : Url("jquery.minicolors.css");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class pickadate {
                        private const string URLPATH = "~/Content/css/plugins/pickers/pickadate";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string pickadate_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/pickadate.min.css") ? Url("pickadate.min.css") : Url("pickadate.css");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class spectrum {
                        private const string URLPATH = "~/Content/css/plugins/pickers/spectrum";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string spectrum_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/spectrum.min.css") ? Url("spectrum.min.css") : Url("spectrum.css");
                    }
                
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class sliders {
                    private const string URLPATH = "~/Content/css/plugins/sliders";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class slick {
                        private const string URLPATH = "~/Content/css/plugins/sliders/slick";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string slick_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/slick.min.css") ? Url("slick.min.css") : Url("slick.css");
                    }
                
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class tables {
                    private const string URLPATH = "~/Content/css/plugins/tables";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class datatable {
                        private const string URLPATH = "~/Content/css/plugins/tables/datatable";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string buttons_bootstrap4_min_css = Url("buttons.bootstrap4.min.css");
                        public static readonly string dataTables_bootstrap4_min_css = Url("dataTables.bootstrap4.min.css");
                        public static readonly string select_dataTables_min_css = Url("select.dataTables.min.css");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class extensions {
                        private const string URLPATH = "~/Content/css/plugins/tables/extensions";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string autoFill_dataTables_min_css = Url("autoFill.dataTables.min.css");
                        public static readonly string buttons_dataTables_min_css = Url("buttons.dataTables.min.css");
                        public static readonly string colReorder_dataTables_min_css = Url("colReorder.dataTables.min.css");
                        public static readonly string dataTables_colVis_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/dataTables.colVis.min.css") ? Url("dataTables.colVis.min.css") : Url("dataTables.colVis.css");
                        public static readonly string fixedColumns_dataTables_min_css = Url("fixedColumns.dataTables.min.css");
                        public static readonly string fixedHeader_dataTables_min_css = Url("fixedHeader.dataTables.min.css");
                        public static readonly string keyTable_dataTables_min_css = Url("keyTable.dataTables.min.css");
                        public static readonly string responsive_dataTables_min_css = Url("responsive.dataTables.min.css");
                        public static readonly string rowReorder_dataTables_min_css = Url("rowReorder.dataTables.min.css");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class handsontable {
                        private const string URLPATH = "~/Content/css/plugins/tables/handsontable";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string handsontable_full_min_css = Url("handsontable.full.min.css");
                        public static readonly string jsgrid_theme_min_css = Url("jsgrid-theme.min.css");
                        public static readonly string jsgrid_min_css = Url("jsgrid.min.css");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class jsgrid {
                        private const string URLPATH = "~/Content/css/plugins/tables/jsgrid";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string jsgrid_theme_min_css = Url("jsgrid-theme.min.css");
                        public static readonly string jsgrid_min_css = Url("jsgrid.min.css");
                    }
                
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class ui {
                    private const string URLPATH = "~/Content/css/plugins/ui";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string dragula_min_css = Url("dragula.min.css");
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class images {
                        private const string URLPATH = "~/Content/css/plugins/ui/images";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string ui_icons_444444_256x240_png = Url("ui-icons_444444_256x240.png");
                        public static readonly string ui_icons_555555_256x240_png = Url("ui-icons_555555_256x240.png");
                        public static readonly string ui_icons_777620_256x240_png = Url("ui-icons_777620_256x240.png");
                        public static readonly string ui_icons_777777_256x240_png = Url("ui-icons_777777_256x240.png");
                        public static readonly string ui_icons_cc0000_256x240_png = Url("ui-icons_cc0000_256x240.png");
                        public static readonly string ui_icons_ffffff_256x240_png = Url("ui-icons_ffffff_256x240.png");
                    }
                
                    public static readonly string jquery_ui_slider_pips_min_css = Url("jquery-ui-slider-pips.min.css");
                    public static readonly string jquery_ui_min_css = Url("jquery-ui.min.css");
                    public static readonly string prism_min_css = Url("prism.min.css");
                }
            
            }
        
            public static readonly string vendors_min_css = Url("vendors.min.css");
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class demo_data {
            private const string URLPATH = "~/Content/demo-data";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class jqvmaps {
                private const string URLPATH = "~/Content/demo-data/jqvmaps";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string jquery_vmap_sampledata_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.vmap.sampledata.min.js") ? Url("jquery.vmap.sampledata.min.js") : Url("jquery.vmap.sampledata.js");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class jvector {
                private const string URLPATH = "~/Content/demo-data/jvector";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string gdp_data_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/gdp-data.min.js") ? Url("gdp-data.min.js") : Url("gdp-data.js");
                public static readonly string visitor_data_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/visitor-data.min.js") ? Url("visitor-data.min.js") : Url("visitor-data.js");
            }
        
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class fonts {
            private const string URLPATH = "~/Content/fonts";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class flag_icon_css {
                private const string URLPATH = "~/Content/fonts/flag-icon-css";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class css {
                    private const string URLPATH = "~/Content/fonts/flag-icon-css/css";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string flag_icon_min_css = Url("flag-icon.min.css");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class flags {
                    private const string URLPATH = "~/Content/fonts/flag-icon-css/flags";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class _1x1 {
                        private const string URLPATH = "~/Content/fonts/flag-icon-css/flags/1x1";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string ad_svg = Url("ad.svg");
                        public static readonly string ae_svg = Url("ae.svg");
                        public static readonly string af_svg = Url("af.svg");
                        public static readonly string ag_svg = Url("ag.svg");
                        public static readonly string ai_svg = Url("ai.svg");
                        public static readonly string al_svg = Url("al.svg");
                        public static readonly string am_svg = Url("am.svg");
                        public static readonly string ao_svg = Url("ao.svg");
                        public static readonly string aq_svg = Url("aq.svg");
                        public static readonly string ar_svg = Url("ar.svg");
                        public static readonly string as_svg = Url("as.svg");
                        public static readonly string at_svg = Url("at.svg");
                        public static readonly string au_svg = Url("au.svg");
                        public static readonly string aw_svg = Url("aw.svg");
                        public static readonly string ax_svg = Url("ax.svg");
                        public static readonly string az_svg = Url("az.svg");
                        public static readonly string ba_svg = Url("ba.svg");
                        public static readonly string bb_svg = Url("bb.svg");
                        public static readonly string bd_svg = Url("bd.svg");
                        public static readonly string be_svg = Url("be.svg");
                        public static readonly string bf_svg = Url("bf.svg");
                        public static readonly string bg_svg = Url("bg.svg");
                        public static readonly string bh_svg = Url("bh.svg");
                        public static readonly string bi_svg = Url("bi.svg");
                        public static readonly string bj_svg = Url("bj.svg");
                        public static readonly string bl_svg = Url("bl.svg");
                        public static readonly string bm_svg = Url("bm.svg");
                        public static readonly string bn_svg = Url("bn.svg");
                        public static readonly string bo_svg = Url("bo.svg");
                        public static readonly string bq_svg = Url("bq.svg");
                        public static readonly string br_svg = Url("br.svg");
                        public static readonly string bs_svg = Url("bs.svg");
                        public static readonly string bt_svg = Url("bt.svg");
                        public static readonly string bv_svg = Url("bv.svg");
                        public static readonly string bw_svg = Url("bw.svg");
                        public static readonly string by_svg = Url("by.svg");
                        public static readonly string bz_svg = Url("bz.svg");
                        public static readonly string ca_svg = Url("ca.svg");
                        public static readonly string cc_svg = Url("cc.svg");
                        public static readonly string cd_svg = Url("cd.svg");
                        public static readonly string cf_svg = Url("cf.svg");
                        public static readonly string cg_svg = Url("cg.svg");
                        public static readonly string ch_svg = Url("ch.svg");
                        public static readonly string ci_svg = Url("ci.svg");
                        public static readonly string ck_svg = Url("ck.svg");
                        public static readonly string cl_svg = Url("cl.svg");
                        public static readonly string cm_svg = Url("cm.svg");
                        public static readonly string cn_svg = Url("cn.svg");
                        public static readonly string co_svg = Url("co.svg");
                        public static readonly string cr_svg = Url("cr.svg");
                        public static readonly string cu_svg = Url("cu.svg");
                        public static readonly string cv_svg = Url("cv.svg");
                        public static readonly string cw_svg = Url("cw.svg");
                        public static readonly string cx_svg = Url("cx.svg");
                        public static readonly string cy_svg = Url("cy.svg");
                        public static readonly string cz_svg = Url("cz.svg");
                        public static readonly string de_svg = Url("de.svg");
                        public static readonly string dj_svg = Url("dj.svg");
                        public static readonly string dk_svg = Url("dk.svg");
                        public static readonly string dm_svg = Url("dm.svg");
                        public static readonly string do_svg = Url("do.svg");
                        public static readonly string dz_svg = Url("dz.svg");
                        public static readonly string ec_svg = Url("ec.svg");
                        public static readonly string ee_svg = Url("ee.svg");
                        public static readonly string eg_svg = Url("eg.svg");
                        public static readonly string eh_svg = Url("eh.svg");
                        public static readonly string er_svg = Url("er.svg");
                        public static readonly string es_svg = Url("es.svg");
                        public static readonly string et_svg = Url("et.svg");
                        public static readonly string eu_svg = Url("eu.svg");
                        public static readonly string fi_svg = Url("fi.svg");
                        public static readonly string fj_svg = Url("fj.svg");
                        public static readonly string fk_svg = Url("fk.svg");
                        public static readonly string fm_svg = Url("fm.svg");
                        public static readonly string fo_svg = Url("fo.svg");
                        public static readonly string fr_svg = Url("fr.svg");
                        public static readonly string ga_svg = Url("ga.svg");
                        public static readonly string gb_eng_svg = Url("gb-eng.svg");
                        public static readonly string gb_sct_svg = Url("gb-sct.svg");
                        public static readonly string gb_wls_svg = Url("gb-wls.svg");
                        public static readonly string gb_svg = Url("gb.svg");
                        public static readonly string gd_svg = Url("gd.svg");
                        public static readonly string ge_svg = Url("ge.svg");
                        public static readonly string gf_svg = Url("gf.svg");
                        public static readonly string gg_svg = Url("gg.svg");
                        public static readonly string gh_svg = Url("gh.svg");
                        public static readonly string gi_svg = Url("gi.svg");
                        public static readonly string gl_svg = Url("gl.svg");
                        public static readonly string gm_svg = Url("gm.svg");
                        public static readonly string gn_svg = Url("gn.svg");
                        public static readonly string gp_svg = Url("gp.svg");
                        public static readonly string gq_svg = Url("gq.svg");
                        public static readonly string gr_svg = Url("gr.svg");
                        public static readonly string gs_svg = Url("gs.svg");
                        public static readonly string gt_svg = Url("gt.svg");
                        public static readonly string gu_svg = Url("gu.svg");
                        public static readonly string gw_svg = Url("gw.svg");
                        public static readonly string gy_svg = Url("gy.svg");
                        public static readonly string hk_svg = Url("hk.svg");
                        public static readonly string hm_svg = Url("hm.svg");
                        public static readonly string hn_svg = Url("hn.svg");
                        public static readonly string hr_svg = Url("hr.svg");
                        public static readonly string ht_svg = Url("ht.svg");
                        public static readonly string hu_svg = Url("hu.svg");
                        public static readonly string id_svg = Url("id.svg");
                        public static readonly string ie_svg = Url("ie.svg");
                        public static readonly string il_svg = Url("il.svg");
                        public static readonly string im_svg = Url("im.svg");
                        public static readonly string in_svg = Url("in.svg");
                        public static readonly string io_svg = Url("io.svg");
                        public static readonly string iq_svg = Url("iq.svg");
                        public static readonly string ir_svg = Url("ir.svg");
                        public static readonly string is_svg = Url("is.svg");
                        public static readonly string it_svg = Url("it.svg");
                        public static readonly string je_svg = Url("je.svg");
                        public static readonly string jm_svg = Url("jm.svg");
                        public static readonly string jo_svg = Url("jo.svg");
                        public static readonly string jp_svg = Url("jp.svg");
                        public static readonly string ke_svg = Url("ke.svg");
                        public static readonly string kg_svg = Url("kg.svg");
                        public static readonly string kh_svg = Url("kh.svg");
                        public static readonly string ki_svg = Url("ki.svg");
                        public static readonly string km_svg = Url("km.svg");
                        public static readonly string kn_svg = Url("kn.svg");
                        public static readonly string kp_svg = Url("kp.svg");
                        public static readonly string kr_svg = Url("kr.svg");
                        public static readonly string kw_svg = Url("kw.svg");
                        public static readonly string ky_svg = Url("ky.svg");
                        public static readonly string kz_svg = Url("kz.svg");
                        public static readonly string la_svg = Url("la.svg");
                        public static readonly string lb_svg = Url("lb.svg");
                        public static readonly string lc_svg = Url("lc.svg");
                        public static readonly string li_svg = Url("li.svg");
                        public static readonly string lk_svg = Url("lk.svg");
                        public static readonly string lr_svg = Url("lr.svg");
                        public static readonly string ls_svg = Url("ls.svg");
                        public static readonly string lt_svg = Url("lt.svg");
                        public static readonly string lu_svg = Url("lu.svg");
                        public static readonly string lv_svg = Url("lv.svg");
                        public static readonly string ly_svg = Url("ly.svg");
                        public static readonly string ma_svg = Url("ma.svg");
                        public static readonly string mc_svg = Url("mc.svg");
                        public static readonly string md_svg = Url("md.svg");
                        public static readonly string me_svg = Url("me.svg");
                        public static readonly string mf_svg = Url("mf.svg");
                        public static readonly string mg_svg = Url("mg.svg");
                        public static readonly string mh_svg = Url("mh.svg");
                        public static readonly string mk_svg = Url("mk.svg");
                        public static readonly string ml_svg = Url("ml.svg");
                        public static readonly string mm_svg = Url("mm.svg");
                        public static readonly string mn_svg = Url("mn.svg");
                        public static readonly string mo_svg = Url("mo.svg");
                        public static readonly string mp_svg = Url("mp.svg");
                        public static readonly string mq_svg = Url("mq.svg");
                        public static readonly string mr_svg = Url("mr.svg");
                        public static readonly string ms_svg = Url("ms.svg");
                        public static readonly string mt_svg = Url("mt.svg");
                        public static readonly string mu_svg = Url("mu.svg");
                        public static readonly string mv_svg = Url("mv.svg");
                        public static readonly string mw_svg = Url("mw.svg");
                        public static readonly string mx_svg = Url("mx.svg");
                        public static readonly string my_svg = Url("my.svg");
                        public static readonly string mz_svg = Url("mz.svg");
                        public static readonly string na_svg = Url("na.svg");
                        public static readonly string nc_svg = Url("nc.svg");
                        public static readonly string ne_svg = Url("ne.svg");
                        public static readonly string nf_svg = Url("nf.svg");
                        public static readonly string ng_svg = Url("ng.svg");
                        public static readonly string ni_svg = Url("ni.svg");
                        public static readonly string nl_svg = Url("nl.svg");
                        public static readonly string no_svg = Url("no.svg");
                        public static readonly string np_svg = Url("np.svg");
                        public static readonly string nr_svg = Url("nr.svg");
                        public static readonly string nu_svg = Url("nu.svg");
                        public static readonly string nz_svg = Url("nz.svg");
                        public static readonly string om_svg = Url("om.svg");
                        public static readonly string pa_svg = Url("pa.svg");
                        public static readonly string pe_svg = Url("pe.svg");
                        public static readonly string pf_svg = Url("pf.svg");
                        public static readonly string pg_svg = Url("pg.svg");
                        public static readonly string ph_svg = Url("ph.svg");
                        public static readonly string pk_svg = Url("pk.svg");
                        public static readonly string pl_svg = Url("pl.svg");
                        public static readonly string pm_svg = Url("pm.svg");
                        public static readonly string pn_svg = Url("pn.svg");
                        public static readonly string pr_svg = Url("pr.svg");
                        public static readonly string ps_svg = Url("ps.svg");
                        public static readonly string pt_svg = Url("pt.svg");
                        public static readonly string pw_svg = Url("pw.svg");
                        public static readonly string py_svg = Url("py.svg");
                        public static readonly string qa_svg = Url("qa.svg");
                        public static readonly string re_svg = Url("re.svg");
                        public static readonly string ro_svg = Url("ro.svg");
                        public static readonly string rs_svg = Url("rs.svg");
                        public static readonly string ru_svg = Url("ru.svg");
                        public static readonly string rw_svg = Url("rw.svg");
                        public static readonly string sa_svg = Url("sa.svg");
                        public static readonly string sb_svg = Url("sb.svg");
                        public static readonly string sc_svg = Url("sc.svg");
                        public static readonly string sd_svg = Url("sd.svg");
                        public static readonly string se_svg = Url("se.svg");
                        public static readonly string sg_svg = Url("sg.svg");
                        public static readonly string sh_svg = Url("sh.svg");
                        public static readonly string si_svg = Url("si.svg");
                        public static readonly string sj_svg = Url("sj.svg");
                        public static readonly string sk_svg = Url("sk.svg");
                        public static readonly string sl_svg = Url("sl.svg");
                        public static readonly string sm_svg = Url("sm.svg");
                        public static readonly string sn_svg = Url("sn.svg");
                        public static readonly string so_svg = Url("so.svg");
                        public static readonly string sr_svg = Url("sr.svg");
                        public static readonly string ss_svg = Url("ss.svg");
                        public static readonly string st_svg = Url("st.svg");
                        public static readonly string sv_svg = Url("sv.svg");
                        public static readonly string sx_svg = Url("sx.svg");
                        public static readonly string sy_svg = Url("sy.svg");
                        public static readonly string sz_svg = Url("sz.svg");
                        public static readonly string tc_svg = Url("tc.svg");
                        public static readonly string td_svg = Url("td.svg");
                        public static readonly string tf_svg = Url("tf.svg");
                        public static readonly string tg_svg = Url("tg.svg");
                        public static readonly string th_svg = Url("th.svg");
                        public static readonly string tj_svg = Url("tj.svg");
                        public static readonly string tk_svg = Url("tk.svg");
                        public static readonly string tl_svg = Url("tl.svg");
                        public static readonly string tm_svg = Url("tm.svg");
                        public static readonly string tn_svg = Url("tn.svg");
                        public static readonly string to_svg = Url("to.svg");
                        public static readonly string tr_svg = Url("tr.svg");
                        public static readonly string tt_svg = Url("tt.svg");
                        public static readonly string tv_svg = Url("tv.svg");
                        public static readonly string tw_svg = Url("tw.svg");
                        public static readonly string tz_svg = Url("tz.svg");
                        public static readonly string ua_svg = Url("ua.svg");
                        public static readonly string ug_svg = Url("ug.svg");
                        public static readonly string um_svg = Url("um.svg");
                        public static readonly string us_svg = Url("us.svg");
                        public static readonly string uy_svg = Url("uy.svg");
                        public static readonly string uz_svg = Url("uz.svg");
                        public static readonly string va_svg = Url("va.svg");
                        public static readonly string vc_svg = Url("vc.svg");
                        public static readonly string ve_svg = Url("ve.svg");
                        public static readonly string vg_svg = Url("vg.svg");
                        public static readonly string vi_svg = Url("vi.svg");
                        public static readonly string vn_svg = Url("vn.svg");
                        public static readonly string vu_svg = Url("vu.svg");
                        public static readonly string wf_svg = Url("wf.svg");
                        public static readonly string ws_svg = Url("ws.svg");
                        public static readonly string ye_svg = Url("ye.svg");
                        public static readonly string yt_svg = Url("yt.svg");
                        public static readonly string za_svg = Url("za.svg");
                        public static readonly string zm_svg = Url("zm.svg");
                        public static readonly string zw_svg = Url("zw.svg");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class _4x3 {
                        private const string URLPATH = "~/Content/fonts/flag-icon-css/flags/4x3";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string ad_svg = Url("ad.svg");
                        public static readonly string ae_svg = Url("ae.svg");
                        public static readonly string af_svg = Url("af.svg");
                        public static readonly string ag_svg = Url("ag.svg");
                        public static readonly string ai_svg = Url("ai.svg");
                        public static readonly string al_svg = Url("al.svg");
                        public static readonly string am_svg = Url("am.svg");
                        public static readonly string ao_svg = Url("ao.svg");
                        public static readonly string aq_svg = Url("aq.svg");
                        public static readonly string ar_svg = Url("ar.svg");
                        public static readonly string as_svg = Url("as.svg");
                        public static readonly string at_svg = Url("at.svg");
                        public static readonly string au_svg = Url("au.svg");
                        public static readonly string aw_svg = Url("aw.svg");
                        public static readonly string ax_svg = Url("ax.svg");
                        public static readonly string az_svg = Url("az.svg");
                        public static readonly string ba_svg = Url("ba.svg");
                        public static readonly string bb_svg = Url("bb.svg");
                        public static readonly string bd_svg = Url("bd.svg");
                        public static readonly string be_svg = Url("be.svg");
                        public static readonly string bf_svg = Url("bf.svg");
                        public static readonly string bg_svg = Url("bg.svg");
                        public static readonly string bh_svg = Url("bh.svg");
                        public static readonly string bi_svg = Url("bi.svg");
                        public static readonly string bj_svg = Url("bj.svg");
                        public static readonly string bl_svg = Url("bl.svg");
                        public static readonly string bm_svg = Url("bm.svg");
                        public static readonly string bn_svg = Url("bn.svg");
                        public static readonly string bo_svg = Url("bo.svg");
                        public static readonly string bq_svg = Url("bq.svg");
                        public static readonly string br_svg = Url("br.svg");
                        public static readonly string bs_svg = Url("bs.svg");
                        public static readonly string bt_svg = Url("bt.svg");
                        public static readonly string bv_svg = Url("bv.svg");
                        public static readonly string bw_svg = Url("bw.svg");
                        public static readonly string by_svg = Url("by.svg");
                        public static readonly string bz_svg = Url("bz.svg");
                        public static readonly string ca_svg = Url("ca.svg");
                        public static readonly string cc_svg = Url("cc.svg");
                        public static readonly string cd_svg = Url("cd.svg");
                        public static readonly string cf_svg = Url("cf.svg");
                        public static readonly string cg_svg = Url("cg.svg");
                        public static readonly string ch_svg = Url("ch.svg");
                        public static readonly string ci_svg = Url("ci.svg");
                        public static readonly string ck_svg = Url("ck.svg");
                        public static readonly string cl_svg = Url("cl.svg");
                        public static readonly string cm_svg = Url("cm.svg");
                        public static readonly string cn_svg = Url("cn.svg");
                        public static readonly string co_svg = Url("co.svg");
                        public static readonly string cr_svg = Url("cr.svg");
                        public static readonly string cu_svg = Url("cu.svg");
                        public static readonly string cv_svg = Url("cv.svg");
                        public static readonly string cw_svg = Url("cw.svg");
                        public static readonly string cx_svg = Url("cx.svg");
                        public static readonly string cy_svg = Url("cy.svg");
                        public static readonly string cz_svg = Url("cz.svg");
                        public static readonly string de_svg = Url("de.svg");
                        public static readonly string dj_svg = Url("dj.svg");
                        public static readonly string dk_svg = Url("dk.svg");
                        public static readonly string dm_svg = Url("dm.svg");
                        public static readonly string do_svg = Url("do.svg");
                        public static readonly string dz_svg = Url("dz.svg");
                        public static readonly string ec_svg = Url("ec.svg");
                        public static readonly string ee_svg = Url("ee.svg");
                        public static readonly string eg_svg = Url("eg.svg");
                        public static readonly string eh_svg = Url("eh.svg");
                        public static readonly string er_svg = Url("er.svg");
                        public static readonly string es_svg = Url("es.svg");
                        public static readonly string et_svg = Url("et.svg");
                        public static readonly string eu_svg = Url("eu.svg");
                        public static readonly string fi_svg = Url("fi.svg");
                        public static readonly string fj_svg = Url("fj.svg");
                        public static readonly string fk_svg = Url("fk.svg");
                        public static readonly string fm_svg = Url("fm.svg");
                        public static readonly string fo_svg = Url("fo.svg");
                        public static readonly string fr_svg = Url("fr.svg");
                        public static readonly string ga_svg = Url("ga.svg");
                        public static readonly string gb_eng_svg = Url("gb-eng.svg");
                        public static readonly string gb_sct_svg = Url("gb-sct.svg");
                        public static readonly string gb_wls_svg = Url("gb-wls.svg");
                        public static readonly string gb_svg = Url("gb.svg");
                        public static readonly string gd_svg = Url("gd.svg");
                        public static readonly string ge_svg = Url("ge.svg");
                        public static readonly string gf_svg = Url("gf.svg");
                        public static readonly string gg_svg = Url("gg.svg");
                        public static readonly string gh_svg = Url("gh.svg");
                        public static readonly string gi_svg = Url("gi.svg");
                        public static readonly string gl_svg = Url("gl.svg");
                        public static readonly string gm_svg = Url("gm.svg");
                        public static readonly string gn_svg = Url("gn.svg");
                        public static readonly string gp_svg = Url("gp.svg");
                        public static readonly string gq_svg = Url("gq.svg");
                        public static readonly string gr_svg = Url("gr.svg");
                        public static readonly string gs_svg = Url("gs.svg");
                        public static readonly string gt_svg = Url("gt.svg");
                        public static readonly string gu_svg = Url("gu.svg");
                        public static readonly string gw_svg = Url("gw.svg");
                        public static readonly string gy_svg = Url("gy.svg");
                        public static readonly string hk_svg = Url("hk.svg");
                        public static readonly string hm_svg = Url("hm.svg");
                        public static readonly string hn_svg = Url("hn.svg");
                        public static readonly string hr_svg = Url("hr.svg");
                        public static readonly string ht_svg = Url("ht.svg");
                        public static readonly string hu_svg = Url("hu.svg");
                        public static readonly string id_svg = Url("id.svg");
                        public static readonly string ie_svg = Url("ie.svg");
                        public static readonly string il_svg = Url("il.svg");
                        public static readonly string im_svg = Url("im.svg");
                        public static readonly string in_svg = Url("in.svg");
                        public static readonly string io_svg = Url("io.svg");
                        public static readonly string iq_svg = Url("iq.svg");
                        public static readonly string ir_svg = Url("ir.svg");
                        public static readonly string is_svg = Url("is.svg");
                        public static readonly string it_svg = Url("it.svg");
                        public static readonly string je_svg = Url("je.svg");
                        public static readonly string jm_svg = Url("jm.svg");
                        public static readonly string jo_svg = Url("jo.svg");
                        public static readonly string jp_svg = Url("jp.svg");
                        public static readonly string ke_svg = Url("ke.svg");
                        public static readonly string kg_svg = Url("kg.svg");
                        public static readonly string kh_svg = Url("kh.svg");
                        public static readonly string ki_svg = Url("ki.svg");
                        public static readonly string km_svg = Url("km.svg");
                        public static readonly string kn_svg = Url("kn.svg");
                        public static readonly string kp_svg = Url("kp.svg");
                        public static readonly string kr_svg = Url("kr.svg");
                        public static readonly string kw_svg = Url("kw.svg");
                        public static readonly string ky_svg = Url("ky.svg");
                        public static readonly string kz_svg = Url("kz.svg");
                        public static readonly string la_svg = Url("la.svg");
                        public static readonly string lb_svg = Url("lb.svg");
                        public static readonly string lc_svg = Url("lc.svg");
                        public static readonly string li_svg = Url("li.svg");
                        public static readonly string lk_svg = Url("lk.svg");
                        public static readonly string lr_svg = Url("lr.svg");
                        public static readonly string ls_svg = Url("ls.svg");
                        public static readonly string lt_svg = Url("lt.svg");
                        public static readonly string lu_svg = Url("lu.svg");
                        public static readonly string lv_svg = Url("lv.svg");
                        public static readonly string ly_svg = Url("ly.svg");
                        public static readonly string ma_svg = Url("ma.svg");
                        public static readonly string mc_svg = Url("mc.svg");
                        public static readonly string md_svg = Url("md.svg");
                        public static readonly string me_svg = Url("me.svg");
                        public static readonly string mf_svg = Url("mf.svg");
                        public static readonly string mg_svg = Url("mg.svg");
                        public static readonly string mh_svg = Url("mh.svg");
                        public static readonly string mk_svg = Url("mk.svg");
                        public static readonly string ml_svg = Url("ml.svg");
                        public static readonly string mm_svg = Url("mm.svg");
                        public static readonly string mn_svg = Url("mn.svg");
                        public static readonly string mo_svg = Url("mo.svg");
                        public static readonly string mp_svg = Url("mp.svg");
                        public static readonly string mq_svg = Url("mq.svg");
                        public static readonly string mr_svg = Url("mr.svg");
                        public static readonly string ms_svg = Url("ms.svg");
                        public static readonly string mt_svg = Url("mt.svg");
                        public static readonly string mu_svg = Url("mu.svg");
                        public static readonly string mv_svg = Url("mv.svg");
                        public static readonly string mw_svg = Url("mw.svg");
                        public static readonly string mx_svg = Url("mx.svg");
                        public static readonly string my_svg = Url("my.svg");
                        public static readonly string mz_svg = Url("mz.svg");
                        public static readonly string na_svg = Url("na.svg");
                        public static readonly string nc_svg = Url("nc.svg");
                        public static readonly string ne_svg = Url("ne.svg");
                        public static readonly string nf_svg = Url("nf.svg");
                        public static readonly string ng_svg = Url("ng.svg");
                        public static readonly string ni_svg = Url("ni.svg");
                        public static readonly string nl_svg = Url("nl.svg");
                        public static readonly string no_svg = Url("no.svg");
                        public static readonly string np_svg = Url("np.svg");
                        public static readonly string nr_svg = Url("nr.svg");
                        public static readonly string nu_svg = Url("nu.svg");
                        public static readonly string nz_svg = Url("nz.svg");
                        public static readonly string om_svg = Url("om.svg");
                        public static readonly string pa_svg = Url("pa.svg");
                        public static readonly string pe_svg = Url("pe.svg");
                        public static readonly string pf_svg = Url("pf.svg");
                        public static readonly string pg_svg = Url("pg.svg");
                        public static readonly string ph_svg = Url("ph.svg");
                        public static readonly string pk_svg = Url("pk.svg");
                        public static readonly string pl_svg = Url("pl.svg");
                        public static readonly string pm_svg = Url("pm.svg");
                        public static readonly string pn_svg = Url("pn.svg");
                        public static readonly string pr_svg = Url("pr.svg");
                        public static readonly string ps_svg = Url("ps.svg");
                        public static readonly string pt_svg = Url("pt.svg");
                        public static readonly string pw_svg = Url("pw.svg");
                        public static readonly string py_svg = Url("py.svg");
                        public static readonly string qa_svg = Url("qa.svg");
                        public static readonly string re_svg = Url("re.svg");
                        public static readonly string ro_svg = Url("ro.svg");
                        public static readonly string rs_svg = Url("rs.svg");
                        public static readonly string ru_svg = Url("ru.svg");
                        public static readonly string rw_svg = Url("rw.svg");
                        public static readonly string sa_svg = Url("sa.svg");
                        public static readonly string sb_svg = Url("sb.svg");
                        public static readonly string sc_svg = Url("sc.svg");
                        public static readonly string sd_svg = Url("sd.svg");
                        public static readonly string se_svg = Url("se.svg");
                        public static readonly string sg_svg = Url("sg.svg");
                        public static readonly string sh_svg = Url("sh.svg");
                        public static readonly string si_svg = Url("si.svg");
                        public static readonly string sj_svg = Url("sj.svg");
                        public static readonly string sk_svg = Url("sk.svg");
                        public static readonly string sl_svg = Url("sl.svg");
                        public static readonly string sm_svg = Url("sm.svg");
                        public static readonly string sn_svg = Url("sn.svg");
                        public static readonly string so_svg = Url("so.svg");
                        public static readonly string sr_svg = Url("sr.svg");
                        public static readonly string ss_svg = Url("ss.svg");
                        public static readonly string st_svg = Url("st.svg");
                        public static readonly string sv_svg = Url("sv.svg");
                        public static readonly string sx_svg = Url("sx.svg");
                        public static readonly string sy_svg = Url("sy.svg");
                        public static readonly string sz_svg = Url("sz.svg");
                        public static readonly string tc_svg = Url("tc.svg");
                        public static readonly string td_svg = Url("td.svg");
                        public static readonly string tf_svg = Url("tf.svg");
                        public static readonly string tg_svg = Url("tg.svg");
                        public static readonly string th_svg = Url("th.svg");
                        public static readonly string tj_svg = Url("tj.svg");
                        public static readonly string tk_svg = Url("tk.svg");
                        public static readonly string tl_svg = Url("tl.svg");
                        public static readonly string tm_svg = Url("tm.svg");
                        public static readonly string tn_svg = Url("tn.svg");
                        public static readonly string to_svg = Url("to.svg");
                        public static readonly string tr_svg = Url("tr.svg");
                        public static readonly string tt_svg = Url("tt.svg");
                        public static readonly string tv_svg = Url("tv.svg");
                        public static readonly string tw_svg = Url("tw.svg");
                        public static readonly string tz_svg = Url("tz.svg");
                        public static readonly string ua_svg = Url("ua.svg");
                        public static readonly string ug_svg = Url("ug.svg");
                        public static readonly string um_svg = Url("um.svg");
                        public static readonly string us_svg = Url("us.svg");
                        public static readonly string uy_svg = Url("uy.svg");
                        public static readonly string uz_svg = Url("uz.svg");
                        public static readonly string va_svg = Url("va.svg");
                        public static readonly string vc_svg = Url("vc.svg");
                        public static readonly string ve_svg = Url("ve.svg");
                        public static readonly string vg_svg = Url("vg.svg");
                        public static readonly string vi_svg = Url("vi.svg");
                        public static readonly string vn_svg = Url("vn.svg");
                        public static readonly string vu_svg = Url("vu.svg");
                        public static readonly string wf_svg = Url("wf.svg");
                        public static readonly string ws_svg = Url("ws.svg");
                        public static readonly string ye_svg = Url("ye.svg");
                        public static readonly string yt_svg = Url("yt.svg");
                        public static readonly string za_svg = Url("za.svg");
                        public static readonly string zm_svg = Url("zm.svg");
                        public static readonly string zw_svg = Url("zw.svg");
                    }
                
                }
            
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class icomoon {
                private const string URLPATH = "~/Content/fonts/icomoon";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string icomoon_eot = Url("icomoon.eot");
                public static readonly string icomoon_svg = Url("icomoon.svg");
                public static readonly string icomoon_ttf = Url("icomoon.ttf");
            }
        
            public static readonly string icomoon_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/icomoon.min.css") ? Url("icomoon.min.css") : Url("icomoon.css");
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class IRANSansWeb {
                private const string URLPATH = "~/Content/fonts/IRANSansWeb";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string IRANSansWeb_eot = Url("IRANSansWeb.eot");
                public static readonly string IRANSansWeb_ttf = Url("IRANSansWeb.ttf");
                public static readonly string IRANSansWeb_woff = Url("IRANSansWeb.woff");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class summernote {
                private const string URLPATH = "~/Content/fonts/summernote";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string summernote_eot_ = Url("summernote.eot@");
                public static readonly string summernote_eot_ad8d7e2d177d2473aecd9b35d16211fb = Url("summernote.eot@ad8d7e2d177d2473aecd9b35d16211fb");
                public static readonly string summernote_ttf_ad8d7e2d177d2473aecd9b35d16211fb = Url("summernote.ttf@ad8d7e2d177d2473aecd9b35d16211fb");
                public static readonly string summernote_woff_ad8d7e2d177d2473aecd9b35d16211fb = Url("summernote.woff@ad8d7e2d177d2473aecd9b35d16211fb");
            }
        
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class ico {
            private const string URLPATH = "~/Content/ico";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            public static readonly string apple_icon_120_png = Url("apple-icon-120.png");
            public static readonly string apple_icon_152_png = Url("apple-icon-152.png");
            public static readonly string apple_icon_60_png = Url("apple-icon-60.png");
            public static readonly string apple_icon_76_png = Url("apple-icon-76.png");
            public static readonly string favicon_32_png = Url("favicon-32.png");
            public static readonly string favicon_ico = Url("favicon.ico");
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class images {
            private const string URLPATH = "~/Content/images";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class backgrounds {
                private const string URLPATH = "~/Content/images/backgrounds";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string bg_12_jpg = Url("bg-12.jpg");
                public static readonly string bg_14_jpg = Url("bg-14.jpg");
                public static readonly string bg_2_jpg = Url("bg-2.jpg");
                public static readonly string fb_jpg = Url("fb.jpg");
                public static readonly string in_jpg = Url("in.jpg");
                public static readonly string snow_rain_gif = Url("snow_rain.gif");
                public static readonly string tw_jpg = Url("tw.jpg");
                public static readonly string wind_turbine_gif = Url("wind_turbine.gif");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class bootstrap_colorpicker {
                private const string URLPATH = "~/Content/images/bootstrap-colorpicker";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string alpha_horizontal_png = Url("alpha-horizontal.png");
                public static readonly string alpha_png = Url("alpha.png");
                public static readonly string hue_horizontal_png = Url("hue-horizontal.png");
                public static readonly string hue_png = Url("hue.png");
                public static readonly string saturation_png = Url("saturation.png");
            }
        
            public static readonly string crop_pic_jpg = Url("crop-pic.jpg");
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class datatables {
                private const string URLPATH = "~/Content/images/datatables";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class resources {
                    private const string URLPATH = "~/Content/images/datatables/resources";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string details_close_png = Url("details_close.png");
                    public static readonly string details_open_png = Url("details_open.png");
                }
            
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class icons {
                private const string URLPATH = "~/Content/images/icons";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string img_png = Url("img.png");
                public static readonly string loading_gif = Url("loading.gif");
                public static readonly string spinner_gif = Url("spinner.gif");
                public static readonly string textarea_expand_png = Url("textarea-expand.png");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class jqueryui {
                private const string URLPATH = "~/Content/images/jqueryui";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string ui_anim_basic_16x16_gif = Url("ui-anim_basic_16x16.gif");
                public static readonly string ui_icons_ffffff_256x240_png = Url("ui-icons_ffffff_256x240.png");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class jvqmap {
                private const string URLPATH = "~/Content/images/jvqmap";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class marker {
                    private const string URLPATH = "~/Content/images/jvqmap/marker";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string blue_png = Url("blue.png");
                    public static readonly string purple_png = Url("purple.png");
                    public static readonly string red_png = Url("red.png");
                }
            
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class logo {
                private const string URLPATH = "~/Content/images/logo";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string robust_80x80_png = Url("robust-80x80.png");
                public static readonly string robust_logo_dark_big_png = Url("robust-logo-dark-big.png");
                public static readonly string robust_logo_dark_png = Url("robust-logo-dark.png");
                public static readonly string robust_logo_light_big_png = Url("robust-logo-light-big.png");
                public static readonly string robust_logo_light_png = Url("robust-logo-light.png");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class svg {
                private const string URLPATH = "~/Content/images/svg";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string cd_arrow_svg = Url("cd-arrow.svg");
                public static readonly string magnifier_svg = Url("magnifier.svg");
            }
        
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class jquery_jqGrid {
            private const string URLPATH = "~/Content/jquery.jqGrid";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            public static readonly string ui_jqgrid_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ui.jqgrid.min.css") ? Url("ui.jqgrid.min.css") : Url("ui.jqgrid.css");
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class js {
            private const string URLPATH = "~/Content/js";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            public static readonly string app_min_js = Url("app.min.js");
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class components {
                private const string URLPATH = "~/Content/js/components";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class animation {
                    private const string URLPATH = "~/Content/js/components/animation";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string animation_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/animation.min.js") ? Url("animation.min.js") : Url("animation.js");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class buttons {
                    private const string URLPATH = "~/Content/js/components/buttons";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string button_ladda_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/button-ladda.min.js") ? Url("button-ladda.min.js") : Url("button-ladda.js");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class cards {
                    private const string URLPATH = "~/Content/js/components/cards";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string advance_cards_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/advance-cards.min.js") ? Url("advance-cards.min.js") : Url("advance-cards.js");
                    public static readonly string draggable_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/draggable.min.js") ? Url("draggable.min.js") : Url("draggable.js");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class charts {
                    private const string URLPATH = "~/Content/js/components/charts";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class c3 {
                        private const string URLPATH = "~/Content/js/components/charts/c3";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class axis {
                            private const string URLPATH = "~/Content/js/components/charts/c3/axis";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string category_axis_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/category-axis.min.js") ? Url("category-axis.min.js") : Url("category-axis.js");
                            public static readonly string rotated_axis_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/rotated-axis.min.js") ? Url("rotated-axis.min.js") : Url("rotated-axis.js");
                            public static readonly string tick_culling_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/tick-culling.min.js") ? Url("tick-culling.min.js") : Url("tick-culling.js");
                            public static readonly string tick_fitting_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/tick-fitting.min.js") ? Url("tick-fitting.min.js") : Url("tick-fitting.js");
                            public static readonly string timezone_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/timezone.min.js") ? Url("timezone.min.js") : Url("timezone.js");
                            public static readonly string y_axis_range_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/y-axis-range.min.js") ? Url("y-axis-range.min.js") : Url("y-axis-range.js");
                            public static readonly string y_axis_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/y-axis.min.js") ? Url("y-axis.min.js") : Url("y-axis.js");
                        }
                    
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class bar_pie {
                            private const string URLPATH = "~/Content/js/components/charts/c3/bar-pie";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string bar_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bar.min.js") ? Url("bar.min.js") : Url("bar.js");
                            public static readonly string column_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/column.min.js") ? Url("column.min.js") : Url("column.js");
                            public static readonly string donut_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/donut.min.js") ? Url("donut.min.js") : Url("donut.js");
                            public static readonly string pie_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/pie.min.js") ? Url("pie.min.js") : Url("pie.js");
                            public static readonly string stacked_bar_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/stacked-bar.min.js") ? Url("stacked-bar.min.js") : Url("stacked-bar.js");
                            public static readonly string stacked_column_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/stacked-column.min.js") ? Url("stacked-column.min.js") : Url("stacked-column.js");
                        }
                    
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class data {
                            private const string URLPATH = "~/Content/js/components/charts/c3/data";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string category_data_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/category-data.min.js") ? Url("category-data.min.js") : Url("category-data.js");
                            public static readonly string column_oriented_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/column-oriented.min.js") ? Url("column-oriented.min.js") : Url("column-oriented.js");
                            public static readonly string data_color_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/data-color.min.js") ? Url("data-color.min.js") : Url("data-color.js");
                            public static readonly string data_from_url_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/data-from-url.min.js") ? Url("data-from-url.min.js") : Url("data-from-url.js");
                            public static readonly string data_order_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/data-order.min.js") ? Url("data-order.min.js") : Url("data-order.js");
                            public static readonly string row_oriented_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/row-oriented.min.js") ? Url("row-oriented.min.js") : Url("row-oriented.js");
                        }
                    
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class grid {
                            private const string URLPATH = "~/Content/js/components/charts/c3/grid";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string grid_lines_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/grid-lines.min.js") ? Url("grid-lines.min.js") : Url("grid-lines.js");
                            public static readonly string x_grid_lines_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/x-grid-lines.min.js") ? Url("x-grid-lines.min.js") : Url("x-grid-lines.js");
                            public static readonly string y_grid_lines_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/y-grid-lines.min.js") ? Url("y-grid-lines.min.js") : Url("y-grid-lines.js");
                        }
                    
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class line {
                            private const string URLPATH = "~/Content/js/components/charts/c3/line";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string area_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/area.min.js") ? Url("area.min.js") : Url("area.js");
                            public static readonly string line_region_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/line-region.min.js") ? Url("line-region.min.js") : Url("line-region.js");
                            public static readonly string line_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/line.min.js") ? Url("line.min.js") : Url("line.js");
                            public static readonly string multiple_xy_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/multiple-xy.min.js") ? Url("multiple-xy.min.js") : Url("multiple-xy.js");
                            public static readonly string simple_xy_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/simple-xy.min.js") ? Url("simple-xy.min.js") : Url("simple-xy.js");
                            public static readonly string spline_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/spline.min.js") ? Url("spline.min.js") : Url("spline.js");
                            public static readonly string step_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/step.min.js") ? Url("step.min.js") : Url("step.js");
                        }
                    
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class other {
                            private const string URLPATH = "~/Content/js/components/charts/c3/other";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string combine_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/combine.min.js") ? Url("combine.min.js") : Url("combine.js");
                            public static readonly string guage_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/guage.min.js") ? Url("guage.min.js") : Url("guage.js");
                            public static readonly string scatter_plot_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/scatter-plot.min.js") ? Url("scatter-plot.min.js") : Url("scatter-plot.js");
                            public static readonly string sub_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/sub.min.js") ? Url("sub.min.js") : Url("sub.js");
                            public static readonly string timeseries_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/timeseries.min.js") ? Url("timeseries.min.js") : Url("timeseries.js");
                            public static readonly string zoom_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/zoom.min.js") ? Url("zoom.min.js") : Url("zoom.js");
                        }
                    
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class transform {
                            private const string URLPATH = "~/Content/js/components/charts/c3/transform";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string to_area_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/to-area.min.js") ? Url("to-area.min.js") : Url("to-area.js");
                            public static readonly string to_bar_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/to-bar.min.js") ? Url("to-bar.min.js") : Url("to-bar.js");
                            public static readonly string to_line_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/to-line.min.js") ? Url("to-line.min.js") : Url("to-line.js");
                            public static readonly string to_pie_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/to-pie.min.js") ? Url("to-pie.min.js") : Url("to-pie.js");
                            public static readonly string to_scatter_plot_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/to-scatter-plot.min.js") ? Url("to-scatter-plot.min.js") : Url("to-scatter-plot.js");
                        }
                    
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class chartist {
                        private const string URLPATH = "~/Content/js/components/charts/chartist";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class bar {
                            private const string URLPATH = "~/Content/js/components/charts/chartist/bar";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string bi_polar_bar_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bi-polar-bar.min.js") ? Url("bi-polar-bar.min.js") : Url("bi-polar-bar.js");
                            public static readonly string distributed_series_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/distributed-series.min.js") ? Url("distributed-series.min.js") : Url("distributed-series.js");
                            public static readonly string horizontal_bar_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/horizontal-bar.min.js") ? Url("horizontal-bar.min.js") : Url("horizontal-bar.js");
                            public static readonly string multi_column_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/multi-column.min.js") ? Url("multi-column.min.js") : Url("multi-column.js");
                            public static readonly string peak_circles_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/peak-circles.min.js") ? Url("peak-circles.min.js") : Url("peak-circles.js");
                            public static readonly string stacked_bar_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/stacked-bar.min.js") ? Url("stacked-bar.min.js") : Url("stacked-bar.js");
                        }
                    
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class line {
                            private const string URLPATH = "~/Content/js/components/charts/chartist/line";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string area_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/area.min.js") ? Url("area.min.js") : Url("area.js");
                            public static readonly string bi_polar_area_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bi-polar-area.min.js") ? Url("bi-polar-area.min.js") : Url("bi-polar-area.js");
                            public static readonly string holes_in_data_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/holes-in-data.min.js") ? Url("holes-in-data.min.js") : Url("holes-in-data.js");
                            public static readonly string line_scatter_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/line-scatter.min.js") ? Url("line-scatter.min.js") : Url("line-scatter.js");
                            public static readonly string line_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/line.min.js") ? Url("line.min.js") : Url("line.js");
                            public static readonly string series_overrides_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/series-overrides.min.js") ? Url("series-overrides.min.js") : Url("series-overrides.js");
                            public static readonly string whole_numbers_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/whole-numbers.min.js") ? Url("whole-numbers.min.js") : Url("whole-numbers.js");
                        }
                    
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class pie {
                            private const string URLPATH = "~/Content/js/components/charts/chartist/pie";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string custom_labels_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/custom-labels.min.js") ? Url("custom-labels.min.js") : Url("custom-labels.js");
                            public static readonly string donut_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/donut.min.js") ? Url("donut.min.js") : Url("donut.js");
                            public static readonly string gauge_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/gauge.min.js") ? Url("gauge.min.js") : Url("gauge.js");
                            public static readonly string pie_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/pie.min.js") ? Url("pie.min.js") : Url("pie.js");
                        }
                    
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class chartjs {
                        private const string URLPATH = "~/Content/js/components/charts/chartjs";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class advance {
                            private const string URLPATH = "~/Content/js/components/charts/chartjs/advance";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string bubble_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bubble.min.js") ? Url("bubble.min.js") : Url("bubble.js");
                            public static readonly string combo_bar_line_data_label_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/combo-bar-line-data-label.min.js") ? Url("combo-bar-line-data-label.min.js") : Url("combo-bar-line-data-label.js");
                            public static readonly string combo_bar_line_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/combo-bar-line.min.js") ? Url("combo-bar-line.min.js") : Url("combo-bar-line.js");
                            public static readonly string different_point_sizes_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/different-point-sizes.min.js") ? Url("different-point-sizes.min.js") : Url("different-point-sizes.js");
                        }
                    
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class bar {
                            private const string URLPATH = "~/Content/js/components/charts/chartjs/bar";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string bar_multi_axis_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bar-multi-axis.min.js") ? Url("bar-multi-axis.min.js") : Url("bar-multi-axis.js");
                            public static readonly string bar_stacked_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bar-stacked.min.js") ? Url("bar-stacked.min.js") : Url("bar-stacked.js");
                            public static readonly string bar_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bar.min.js") ? Url("bar.min.js") : Url("bar.js");
                            public static readonly string column_multi_axis_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/column-multi-axis.min.js") ? Url("column-multi-axis.min.js") : Url("column-multi-axis.js");
                            public static readonly string column_stacked_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/column-stacked.min.js") ? Url("column-stacked.min.js") : Url("column-stacked.js");
                            public static readonly string column_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/column.min.js") ? Url("column.min.js") : Url("column.js");
                        }
                    
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class line {
                            private const string URLPATH = "~/Content/js/components/charts/chartjs/line";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string line_area_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/line-area.min.js") ? Url("line-area.min.js") : Url("line-area.js");
                            public static readonly string line_logarithmic_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/line-logarithmic.min.js") ? Url("line-logarithmic.min.js") : Url("line-logarithmic.js");
                            public static readonly string line_multi_axis_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/line-multi-axis.min.js") ? Url("line-multi-axis.min.js") : Url("line-multi-axis.js");
                            public static readonly string line_skip_points_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/line-skip-points.min.js") ? Url("line-skip-points.min.js") : Url("line-skip-points.js");
                            public static readonly string line_stacked_area_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/line-stacked-area.min.js") ? Url("line-stacked-area.min.js") : Url("line-stacked-area.js");
                            public static readonly string line_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/line.min.js") ? Url("line.min.js") : Url("line.js");
                        }
                    
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class pie_doughnut {
                            private const string URLPATH = "~/Content/js/components/charts/chartjs/pie-doughnut";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string doughnut_simple_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/doughnut-simple.min.js") ? Url("doughnut-simple.min.js") : Url("doughnut-simple.js");
                            public static readonly string doughnut_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/doughnut.min.js") ? Url("doughnut.min.js") : Url("doughnut.js");
                            public static readonly string pie_simple_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/pie-simple.min.js") ? Url("pie-simple.min.js") : Url("pie-simple.js");
                            public static readonly string pie_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/pie.min.js") ? Url("pie.min.js") : Url("pie.js");
                        }
                    
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class polar_radar {
                            private const string URLPATH = "~/Content/js/components/charts/chartjs/polar-radar";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string polar_skip_points_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/polar-skip-points.min.js") ? Url("polar-skip-points.min.js") : Url("polar-skip-points.js");
                            public static readonly string polar_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/polar.min.js") ? Url("polar.min.js") : Url("polar.js");
                            public static readonly string radar_skip_points_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/radar-skip-points.min.js") ? Url("radar-skip-points.min.js") : Url("radar-skip-points.js");
                            public static readonly string radar_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/radar.min.js") ? Url("radar.min.js") : Url("radar.js");
                        }
                    
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class scatter {
                            private const string URLPATH = "~/Content/js/components/charts/chartjs/scatter";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string scatter_logX_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/scatter-logX.min.js") ? Url("scatter-logX.min.js") : Url("scatter-logX.js");
                            public static readonly string scatter_multi_axis_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/scatter-multi-axis.min.js") ? Url("scatter-multi-axis.min.js") : Url("scatter-multi-axis.js");
                            public static readonly string scatter_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/scatter.min.js") ? Url("scatter.min.js") : Url("scatter.js");
                        }
                    
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class d3 {
                        private const string URLPATH = "~/Content/js/components/charts/d3";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class bar {
                            private const string URLPATH = "~/Content/js/components/charts/d3/bar";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string bar_negative_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bar-negative.min.js") ? Url("bar-negative.min.js") : Url("bar-negative.js");
                            public static readonly string bar_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bar.min.js") ? Url("bar.min.js") : Url("bar.js");
                            public static readonly string grouped_bar_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/grouped-bar.min.js") ? Url("grouped-bar.min.js") : Url("grouped-bar.js");
                            public static readonly string normalized_stacked_bar_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/normalized-stacked-bar.min.js") ? Url("normalized-stacked-bar.min.js") : Url("normalized-stacked-bar.js");
                            public static readonly string stacked_bar_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/stacked-bar.min.js") ? Url("stacked-bar.min.js") : Url("stacked-bar.js");
                            public static readonly string stacked_to_grouped_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/stacked-to-grouped.min.js") ? Url("stacked-to-grouped.min.js") : Url("stacked-to-grouped.js");
                            public static readonly string stacked_to_multiples_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/stacked-to-multiples.min.js") ? Url("stacked-to-multiples.min.js") : Url("stacked-to-multiples.js");
                            public static readonly string waterfall_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/waterfall.min.js") ? Url("waterfall.min.js") : Url("waterfall.js");
                        }
                    
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class circle {
                            private const string URLPATH = "~/Content/js/components/charts/d3/circle";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string interactive_venn_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/interactive-venn.min.js") ? Url("interactive-venn.min.js") : Url("interactive-venn.js");
                            public static readonly string intersection_tooltip_venn_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/intersection-tooltip-venn.min.js") ? Url("intersection-tooltip-venn.min.js") : Url("intersection-tooltip-venn.js");
                            public static readonly string medical_venn_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/medical-venn.min.js") ? Url("medical-venn.min.js") : Url("medical-venn.js");
                            public static readonly string sequences_sunburst_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/sequences-sunburst.min.js") ? Url("sequences-sunburst.min.js") : Url("sequences-sunburst.js");
                            public static readonly string styled_venn_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/styled-venn.min.js") ? Url("styled-venn.min.js") : Url("styled-venn.js");
                            public static readonly string sunburst_distortion_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/sunburst-distortion.min.js") ? Url("sunburst-distortion.min.js") : Url("sunburst-distortion.js");
                            public static readonly string sunburst_partition_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/sunburst-partition.min.js") ? Url("sunburst-partition.min.js") : Url("sunburst-partition.js");
                            public static readonly string venn_venn_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/venn-venn.min.js") ? Url("venn-venn.min.js") : Url("venn-venn.js");
                            public static readonly string weighted_venn_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/weighted-venn.min.js") ? Url("weighted-venn.min.js") : Url("weighted-venn.js");
                            public static readonly string zoomable_sunburst_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/zoomable-sunburst.min.js") ? Url("zoomable-sunburst.min.js") : Url("zoomable-sunburst.js");
                        }
                    
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class line {
                            private const string URLPATH = "~/Content/js/components/charts/d3/line";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string area_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/area.min.js") ? Url("area.min.js") : Url("area.js");
                            public static readonly string bivariate_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bivariate.min.js") ? Url("bivariate.min.js") : Url("bivariate.js");
                            public static readonly string difference_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/difference.min.js") ? Url("difference.min.js") : Url("difference.js");
                            public static readonly string focus_context_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/focus-context.min.js") ? Url("focus-context.min.js") : Url("focus-context.js");
                            public static readonly string line_tension_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/line-tension.min.js") ? Url("line-tension.min.js") : Url("line-tension.js");
                            public static readonly string line_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/line.min.js") ? Url("line.min.js") : Url("line.js");
                            public static readonly string multi_series_line_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/multi-series-line.min.js") ? Url("multi-series-line.min.js") : Url("multi-series-line.js");
                            public static readonly string stacked_area_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/stacked-area.min.js") ? Url("stacked-area.min.js") : Url("stacked-area.js");
                        }
                    
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class other {
                            private const string URLPATH = "~/Content/js/components/charts/d3/other";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string bubble_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bubble.min.js") ? Url("bubble.min.js") : Url("bubble.js");
                            public static readonly string chord_diagram_new_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/chord-diagram-new.min.js") ? Url("chord-diagram-new.min.js") : Url("chord-diagram-new.js");
                            public static readonly string gantt_chart_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/gantt-chart.min.js") ? Url("gantt-chart.min.js") : Url("gantt-chart.js");
                            public static readonly string streamgraph_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/streamgraph.min.js") ? Url("streamgraph.min.js") : Url("streamgraph.js");
                            public static readonly string treemap_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/treemap.min.js") ? Url("treemap.min.js") : Url("treemap.js");
                            public static readonly string vertical_sankey_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/vertical-sankey.min.js") ? Url("vertical-sankey.min.js") : Url("vertical-sankey.js");
                        }
                    
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class pie {
                            private const string URLPATH = "~/Content/js/components/charts/d3/pie";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string _3d_pie_donut_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/3d-pie-donut.min.js") ? Url("3d-pie-donut.min.js") : Url("3d-pie-donut.js");
                            public static readonly string dispatch_events_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/dispatch-events.min.js") ? Url("dispatch-events.min.js") : Url("dispatch-events.js");
                            public static readonly string donut_multiples_nesting_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/donut-multiples-nesting.min.js") ? Url("donut-multiples-nesting.min.js") : Url("donut-multiples-nesting.js");
                            public static readonly string donut_multiples_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/donut-multiples.min.js") ? Url("donut-multiples.min.js") : Url("donut-multiples.js");
                            public static readonly string donut_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/donut.min.js") ? Url("donut.min.js") : Url("donut.js");
                            public static readonly string gradient_pie_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/gradient-pie.min.js") ? Url("gradient-pie.min.js") : Url("gradient-pie.js");
                            public static readonly string pie_calendar_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/pie-calendar.min.js") ? Url("pie-calendar.min.js") : Url("pie-calendar.js");
                            public static readonly string pie_multiples_nesting_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/pie-multiples-nesting.min.js") ? Url("pie-multiples-nesting.min.js") : Url("pie-multiples-nesting.js");
                            public static readonly string pie_multiples_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/pie-multiples.min.js") ? Url("pie-multiples.min.js") : Url("pie-multiples.js");
                            public static readonly string pie_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/pie.min.js") ? Url("pie.min.js") : Url("pie.js");
                        }
                    
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class tree {
                            private const string URLPATH = "~/Content/js/components/charts/d3/tree";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string bracket_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bracket.min.js") ? Url("bracket.min.js") : Url("bracket.js");
                            public static readonly string collapsible_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/collapsible.min.js") ? Url("collapsible.min.js") : Url("collapsible.js");
                            public static readonly string dendrogram_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/dendrogram.min.js") ? Url("dendrogram.min.js") : Url("dendrogram.js");
                            public static readonly string radial_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/radial.min.js") ? Url("radial.min.js") : Url("radial.js");
                            public static readonly string tree_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/tree.min.js") ? Url("tree.min.js") : Url("tree.js");
                        }
                    
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class dimple {
                        private const string URLPATH = "~/Content/js/components/charts/dimple";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string bar_column_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bar-column.min.js") ? Url("bar-column.min.js") : Url("bar-column.js");
                        public static readonly string bubble_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bubble.min.js") ? Url("bubble.min.js") : Url("bubble.js");
                        public static readonly string line_area_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/line-area.min.js") ? Url("line-area.min.js") : Url("line-area.js");
                        public static readonly string pie_ring_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/pie-ring.min.js") ? Url("pie-ring.min.js") : Url("pie-ring.js");
                        public static readonly string scatter_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/scatter.min.js") ? Url("scatter.min.js") : Url("scatter.js");
                        public static readonly string step_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/step.min.js") ? Url("step.min.js") : Url("step.js");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class echarts {
                        private const string URLPATH = "~/Content/js/components/charts/echarts";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class advance {
                            private const string URLPATH = "~/Content/js/components/charts/echarts/advance";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string candlestick_multi_level_control_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/candlestick-multi-level-control.min.js") ? Url("candlestick-multi-level-control.min.js") : Url("candlestick-multi-level-control.js");
                            public static readonly string dynamic_data_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/dynamic-data.min.js") ? Url("dynamic-data.min.js") : Url("dynamic-data.js");
                            public static readonly string event_river_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/event-river.min.js") ? Url("event-river.min.js") : Url("event-river.js");
                            public static readonly string eventRiver2_data_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/eventRiver2-data.min.js") ? Url("eventRiver2-data.min.js") : Url("eventRiver2-data.js");
                            public static readonly string multiple_series_rainbow_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/multiple-series-rainbow.min.js") ? Url("multiple-series-rainbow.min.js") : Url("multiple-series-rainbow.js");
                            public static readonly string time_data_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/time-data.min.js") ? Url("time-data.min.js") : Url("time-data.js");
                            public static readonly string timeline_options_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/timeline-options.min.js") ? Url("timeline-options.min.js") : Url("timeline-options.js");
                            public static readonly string timeline_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/timeline.min.js") ? Url("timeline.min.js") : Url("timeline.js");
                            public static readonly string tornado_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/tornado.min.js") ? Url("tornado.min.js") : Url("tornado.js");
                            public static readonly string treemap_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/treemap.min.js") ? Url("treemap.min.js") : Url("treemap.js");
                            public static readonly string word_cloud_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/word-cloud.min.js") ? Url("word-cloud.min.js") : Url("word-cloud.js");
                        }
                    
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class bar_column {
                            private const string URLPATH = "~/Content/js/components/charts/echarts/bar-column";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string basic_bar_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/basic-bar.min.js") ? Url("basic-bar.min.js") : Url("basic-bar.js");
                            public static readonly string basic_column_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/basic-column.min.js") ? Url("basic-column.min.js") : Url("basic-column.js");
                            public static readonly string change_waterfall_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/change-waterfall.min.js") ? Url("change-waterfall.min.js") : Url("change-waterfall.js");
                            public static readonly string column_multi_level_control_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/column-multi-level-control.min.js") ? Url("column-multi-level-control.min.js") : Url("column-multi-level-control.js");
                            public static readonly string irregular_bar_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/irregular-bar.min.js") ? Url("irregular-bar.min.js") : Url("irregular-bar.js");
                            public static readonly string stacked_bar_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/stacked-bar.min.js") ? Url("stacked-bar.min.js") : Url("stacked-bar.js");
                            public static readonly string stacked_clustered_column_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/stacked-clustered-column.min.js") ? Url("stacked-clustered-column.min.js") : Url("stacked-clustered-column.js");
                            public static readonly string stacked_column_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/stacked-column.min.js") ? Url("stacked-column.min.js") : Url("stacked-column.js");
                            public static readonly string stacked_floating_bar_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/stacked-floating-bar.min.js") ? Url("stacked-floating-bar.min.js") : Url("stacked-floating-bar.js");
                            public static readonly string thermometer_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/thermometer.min.js") ? Url("thermometer.min.js") : Url("thermometer.js");
                        }
                    
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class combination {
                            private const string URLPATH = "~/Content/js/components/charts/echarts/combination";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string column_line_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/column-line.min.js") ? Url("column-line.min.js") : Url("column-line.js");
                            public static readonly string column_pie_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/column-pie.min.js") ? Url("column-pie.min.js") : Url("column-pie.js");
                            public static readonly string multiple_combination_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/multiple-combination.min.js") ? Url("multiple-combination.min.js") : Url("multiple-combination.js");
                            public static readonly string scatter_line_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/scatter-line.min.js") ? Url("scatter-line.min.js") : Url("scatter-line.js");
                            public static readonly string scatter_pie_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/scatter-pie.min.js") ? Url("scatter-pie.min.js") : Url("scatter-pie.js");
                        }
                    
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class funnel_gauges {
                            private const string URLPATH = "~/Content/js/components/charts/echarts/funnel-gauges";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string angular_gauge_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-gauge.min.js") ? Url("angular-gauge.min.js") : Url("angular-gauge.js");
                            public static readonly string basic_gauge_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/basic-gauge.min.js") ? Url("basic-gauge.min.js") : Url("basic-gauge.js");
                            public static readonly string customized_gauge_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/customized-gauge.min.js") ? Url("customized-gauge.min.js") : Url("customized-gauge.js");
                            public static readonly string funnel_plot_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/funnel-plot.min.js") ? Url("funnel-plot.min.js") : Url("funnel-plot.js");
                            public static readonly string funnel_pyramid_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/funnel-pyramid.min.js") ? Url("funnel-pyramid.min.js") : Url("funnel-pyramid.js");
                            public static readonly string left_align_funnel_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/left-align-funnel.min.js") ? Url("left-align-funnel.min.js") : Url("left-align-funnel.js");
                            public static readonly string multiple_funnel1_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/multiple-funnel1.min.js") ? Url("multiple-funnel1.min.js") : Url("multiple-funnel1.js");
                            public static readonly string multiple_funnel2_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/multiple-funnel2.min.js") ? Url("multiple-funnel2.min.js") : Url("multiple-funnel2.js");
                            public static readonly string multiple_gauges_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/multiple-gauges.min.js") ? Url("multiple-gauges.min.js") : Url("multiple-gauges.js");
                            public static readonly string right_align_funnel_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/right-align-funnel.min.js") ? Url("right-align-funnel.min.js") : Url("right-align-funnel.js");
                        }
                    
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class line_area {
                            private const string URLPATH = "~/Content/js/components/charts/echarts/line-area";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string basic_area_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/basic-area.min.js") ? Url("basic-area.min.js") : Url("basic-area.js");
                            public static readonly string basic_line_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/basic-line.min.js") ? Url("basic-line.min.js") : Url("basic-line.js");
                            public static readonly string irregular_line_time_axis_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/irregular-line-time-axis.min.js") ? Url("irregular-line-time-axis.min.js") : Url("irregular-line-time-axis.js");
                            public static readonly string irregular_line_two_value_axis_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/irregular-line-two-value-axis.min.js") ? Url("irregular-line-two-value-axis.min.js") : Url("irregular-line-two-value-axis.js");
                            public static readonly string line_multilevel_control_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/line-multilevel-control.min.js") ? Url("line-multilevel-control.min.js") : Url("line-multilevel-control.js");
                            public static readonly string stacked_area_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/stacked-area.min.js") ? Url("stacked-area.min.js") : Url("stacked-area.js");
                            public static readonly string stacked_line_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/stacked-line.min.js") ? Url("stacked-line.min.js") : Url("stacked-line.js");
                        }
                    
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class pie_doughnut {
                            private const string URLPATH = "~/Content/js/components/charts/echarts/pie-doughnut";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string basic_pie_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/basic-pie.min.js") ? Url("basic-pie.min.js") : Url("basic-pie.js");
                            public static readonly string doughnut_infographic_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/doughnut-infographic.min.js") ? Url("doughnut-infographic.min.js") : Url("doughnut-infographic.js");
                            public static readonly string doughnut_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/doughnut.min.js") ? Url("doughnut.min.js") : Url("doughnut.js");
                            public static readonly string lasagna_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/lasagna.min.js") ? Url("lasagna.min.js") : Url("lasagna.js");
                            public static readonly string multiple_doughnut_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/multiple-doughnut.min.js") ? Url("multiple-doughnut.min.js") : Url("multiple-doughnut.js");
                            public static readonly string nested_pie_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/nested-pie.min.js") ? Url("nested-pie.min.js") : Url("nested-pie.js");
                            public static readonly string nightingale_rose_labels_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/nightingale-rose-labels.min.js") ? Url("nightingale-rose-labels.min.js") : Url("nightingale-rose-labels.js");
                            public static readonly string nightingale_rose_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/nightingale-rose.min.js") ? Url("nightingale-rose.min.js") : Url("nightingale-rose.js");
                            public static readonly string timeline_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/timeline.min.js") ? Url("timeline.min.js") : Url("timeline.js");
                        }
                    
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class radar_chord {
                            private const string URLPATH = "~/Content/js/components/charts/echarts/radar-chord";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string basic_chord_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/basic-chord.min.js") ? Url("basic-chord.min.js") : Url("basic-chord.js");
                            public static readonly string basic_filled_radar_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/basic-filled-radar.min.js") ? Url("basic-filled-radar.min.js") : Url("basic-filled-radar.js");
                            public static readonly string basic_radar_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/basic-radar.min.js") ? Url("basic-radar.min.js") : Url("basic-radar.js");
                            public static readonly string chord_sorting_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/chord-sorting.min.js") ? Url("chord-sorting.min.js") : Url("chord-sorting.js");
                            public static readonly string multiple_dimensions_chord_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/multiple-dimensions-chord.min.js") ? Url("multiple-dimensions-chord.min.js") : Url("multiple-dimensions-chord.js");
                            public static readonly string multiple_radars_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/multiple-radars.min.js") ? Url("multiple-radars.min.js") : Url("multiple-radars.js");
                            public static readonly string non_ribbon_chord_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/non-ribbon-chord.min.js") ? Url("non-ribbon-chord.min.js") : Url("non-ribbon-chord.js");
                            public static readonly string radar_multi_level_control_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/radar-multi-level-control.min.js") ? Url("radar-multi-level-control.min.js") : Url("radar-multi-level-control.js");
                            public static readonly string wormhole_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/wormhole.min.js") ? Url("wormhole.min.js") : Url("wormhole.js");
                        }
                    
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class scatter {
                            private const string URLPATH = "~/Content/js/components/charts/echarts/scatter";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string basic_bubble_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/basic-bubble.min.js") ? Url("basic-bubble.min.js") : Url("basic-bubble.js");
                            public static readonly string basic_scatter_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/basic-scatter.min.js") ? Url("basic-scatter.min.js") : Url("basic-scatter.js");
                            public static readonly string category_scatter_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/category-scatter.min.js") ? Url("category-scatter.min.js") : Url("category-scatter.js");
                            public static readonly string large_scale_scatter_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/large-scale-scatter.min.js") ? Url("large-scale-scatter.min.js") : Url("large-scale-scatter.js");
                            public static readonly string scatter_multi_level_control_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/scatter-multi-level-control.min.js") ? Url("scatter-multi-level-control.min.js") : Url("scatter-multi-level-control.js");
                        }
                    
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class flot {
                        private const string URLPATH = "~/Content/js/components/charts/flot";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class bar {
                            private const string URLPATH = "~/Content/js/components/charts/flot/bar";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string annotations_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/annotations.min.js") ? Url("annotations.min.js") : Url("annotations.js");
                            public static readonly string bar_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bar.min.js") ? Url("bar.min.js") : Url("bar.js");
                            public static readonly string error_bars_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/error-bars.min.js") ? Url("error-bars.min.js") : Url("error-bars.js");
                            public static readonly string stacked_bar_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/stacked-bar.min.js") ? Url("stacked-bar.min.js") : Url("stacked-bar.js");
                            public static readonly string thresholds_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/thresholds.min.js") ? Url("thresholds.min.js") : Url("thresholds.js");
                        }
                    
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class line {
                            private const string URLPATH = "~/Content/js/components/charts/flot/line";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string line_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/line.min.js") ? Url("line.min.js") : Url("line.js");
                            public static readonly string realtime_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/realtime.min.js") ? Url("realtime.min.js") : Url("realtime.js");
                            public static readonly string series_types_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/series-types.min.js") ? Url("series-types.min.js") : Url("series-types.js");
                            public static readonly string symbols_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/symbols.min.js") ? Url("symbols.min.js") : Url("symbols.js");
                            public static readonly string tracking_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/tracking.min.js") ? Url("tracking.min.js") : Url("tracking.js");
                            public static readonly string visitors_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/visitors.min.js") ? Url("visitors.min.js") : Url("visitors.js");
                        }
                    
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class pie {
                            private const string URLPATH = "~/Content/js/components/charts/flot/pie";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string donut_hole_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/donut-hole.min.js") ? Url("donut-hole.min.js") : Url("donut-hole.js");
                            public static readonly string interactive_pie_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/interactive-pie.min.js") ? Url("interactive-pie.min.js") : Url("interactive-pie.js");
                            public static readonly string label_formatter_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/label-formatter.min.js") ? Url("label-formatter.min.js") : Url("label-formatter.js");
                            public static readonly string pie_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/pie.min.js") ? Url("pie.min.js") : Url("pie.js");
                            public static readonly string rectangular_pie_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/rectangular-pie.min.js") ? Url("rectangular-pie.min.js") : Url("rectangular-pie.js");
                            public static readonly string tilted_pie_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/tilted-pie.min.js") ? Url("tilted-pie.min.js") : Url("tilted-pie.js");
                        }
                    
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class gmaps {
                        private const string URLPATH = "~/Content/js/components/charts/gmaps";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string maps_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/maps.min.js") ? Url("maps.min.js") : Url("maps.js");
                        public static readonly string overlays_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/overlays.min.js") ? Url("overlays.min.js") : Url("overlays.js");
                        public static readonly string routes_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/routes.min.js") ? Url("routes.min.js") : Url("routes.js");
                        public static readonly string services_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/services.min.js") ? Url("services.min.js") : Url("services.js");
                        public static readonly string static_maps_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/static-maps.min.js") ? Url("static-maps.min.js") : Url("static-maps.js");
                        public static readonly string utils_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/utils.min.js") ? Url("utils.min.js") : Url("utils.js");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class google {
                        private const string URLPATH = "~/Content/js/components/charts/google";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class bar {
                            private const string URLPATH = "~/Content/js/components/charts/google/bar";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string bar_intervals_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bar-intervals.min.js") ? Url("bar-intervals.min.js") : Url("bar-intervals.js");
                            public static readonly string bar_stacked_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bar-stacked.min.js") ? Url("bar-stacked.min.js") : Url("bar-stacked.js");
                            public static readonly string bar_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bar.min.js") ? Url("bar.min.js") : Url("bar.js");
                            public static readonly string column_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/column.min.js") ? Url("column.min.js") : Url("column.js");
                            public static readonly string combo_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/combo.min.js") ? Url("combo.min.js") : Url("combo.js");
                            public static readonly string histogram_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/histogram.min.js") ? Url("histogram.min.js") : Url("histogram.js");
                            public static readonly string stacked_column_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/stacked-column.min.js") ? Url("stacked-column.min.js") : Url("stacked-column.js");
                        }
                    
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class bubble {
                            private const string URLPATH = "~/Content/js/components/charts/google/bubble";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string bubble_color_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bubble-color.min.js") ? Url("bubble-color.min.js") : Url("bubble-color.js");
                            public static readonly string bubble_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bubble.min.js") ? Url("bubble.min.js") : Url("bubble.js");
                        }
                    
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class line {
                            private const string URLPATH = "~/Content/js/components/charts/google/line";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string area_interval_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/area-interval.min.js") ? Url("area-interval.min.js") : Url("area-interval.js");
                            public static readonly string area_stacked_stepped_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/area-stacked-stepped.min.js") ? Url("area-stacked-stepped.min.js") : Url("area-stacked-stepped.js");
                            public static readonly string area_stacked_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/area-stacked.min.js") ? Url("area-stacked.min.js") : Url("area-stacked.js");
                            public static readonly string area_stepped_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/area-stepped.min.js") ? Url("area-stepped.min.js") : Url("area-stepped.js");
                            public static readonly string area_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/area.min.js") ? Url("area.min.js") : Url("area.js");
                            public static readonly string line_interval_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/line-interval.min.js") ? Url("line-interval.min.js") : Url("line-interval.js");
                            public static readonly string line_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/line.min.js") ? Url("line.min.js") : Url("line.js");
                        }
                    
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class other {
                            private const string URLPATH = "~/Content/js/components/charts/google/other";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string candlestick_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/candlestick.min.js") ? Url("candlestick.min.js") : Url("candlestick.js");
                            public static readonly string diff_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/diff.min.js") ? Url("diff.min.js") : Url("diff.js");
                            public static readonly string geo_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/geo.min.js") ? Url("geo.min.js") : Url("geo.js");
                            public static readonly string guage_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/guage.min.js") ? Url("guage.min.js") : Url("guage.js");
                            public static readonly string sankey_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/sankey.min.js") ? Url("sankey.min.js") : Url("sankey.js");
                            public static readonly string sticks_interval_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/sticks-interval.min.js") ? Url("sticks-interval.min.js") : Url("sticks-interval.js");
                            public static readonly string treemap_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/treemap.min.js") ? Url("treemap.min.js") : Url("treemap.js");
                            public static readonly string trendlines_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/trendlines.min.js") ? Url("trendlines.min.js") : Url("trendlines.js");
                        }
                    
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class pie {
                            private const string URLPATH = "~/Content/js/components/charts/google/pie";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string _3d_pie_exploded_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/3d-pie-exploded.min.js") ? Url("3d-pie-exploded.min.js") : Url("3d-pie-exploded.js");
                            public static readonly string _3d_pie_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/3d-pie.min.js") ? Url("3d-pie.min.js") : Url("3d-pie.js");
                            public static readonly string donut_exploded_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/donut-exploded.min.js") ? Url("donut-exploded.min.js") : Url("donut-exploded.js");
                            public static readonly string donut_rotated_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/donut-rotated.min.js") ? Url("donut-rotated.min.js") : Url("donut-rotated.js");
                            public static readonly string donut_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/donut.min.js") ? Url("donut.min.js") : Url("donut.js");
                            public static readonly string pie_diff_border_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/pie-diff-border.min.js") ? Url("pie-diff-border.min.js") : Url("pie-diff-border.js");
                            public static readonly string pie_diff_invert_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/pie-diff-invert.min.js") ? Url("pie-diff-invert.min.js") : Url("pie-diff-invert.js");
                            public static readonly string pie_diff_opacity_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/pie-diff-opacity.min.js") ? Url("pie-diff-opacity.min.js") : Url("pie-diff-opacity.js");
                            public static readonly string pie_diff_radius_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/pie-diff-radius.min.js") ? Url("pie-diff-radius.min.js") : Url("pie-diff-radius.js");
                            public static readonly string pie_exploded_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/pie-exploded.min.js") ? Url("pie-exploded.min.js") : Url("pie-exploded.js");
                            public static readonly string pie_rotated_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/pie-rotated.min.js") ? Url("pie-rotated.min.js") : Url("pie-rotated.js");
                            public static readonly string pie_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/pie.min.js") ? Url("pie.min.js") : Url("pie.js");
                        }
                    
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class scatter {
                            private const string URLPATH = "~/Content/js/components/charts/google/scatter";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string point_interval_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/point-interval.min.js") ? Url("point-interval.min.js") : Url("point-interval.js");
                            public static readonly string scatter_diff_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/scatter-diff.min.js") ? Url("scatter-diff.min.js") : Url("scatter-diff.js");
                            public static readonly string scatter_material_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/scatter-material.min.js") ? Url("scatter-material.min.js") : Url("scatter-material.js");
                            public static readonly string scatter_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/scatter.min.js") ? Url("scatter.min.js") : Url("scatter.js");
                        }
                    
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class jqvmap {
                        private const string URLPATH = "~/Content/js/components/charts/jqvmap";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string jqvmap_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jqvmap.min.js") ? Url("jqvmap.min.js") : Url("jqvmap.js");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class jvector {
                        private const string URLPATH = "~/Content/js/components/charts/jvector";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string jvector_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jvector.min.js") ? Url("jvector.min.js") : Url("jvector.js");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class mapael {
                        private const string URLPATH = "~/Content/js/components/charts/mapael";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class advance {
                            private const string URLPATH = "~/Content/js/components/charts/mapael/advance";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string afterInit_extend_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/afterInit-extend.min.js") ? Url("afterInit-extend.min.js") : Url("afterInit-extend.js");
                            public static readonly string display_information_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/display-information.min.js") ? Url("display-information.min.js") : Url("display-information.js");
                            public static readonly string links_between_plotted_cities_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/links-between-plotted-cities.min.js") ? Url("links-between-plotted-cities.min.js") : Url("links-between-plotted-cities.js");
                            public static readonly string multiple_legends_plotted_cities_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/multiple-legends-plotted-cities.min.js") ? Url("multiple-legends-plotted-cities.min.js") : Url("multiple-legends-plotted-cities.js");
                            public static readonly string zoom_on_click_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/zoom-on-click.min.js") ? Url("zoom-on-click.min.js") : Url("zoom-on-click.js");
                        }
                    
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class basic {
                            private const string URLPATH = "~/Content/js/components/charts/mapael/basic";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string horizontal_legend_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/horizontal-legend.min.js") ? Url("horizontal-legend.min.js") : Url("horizontal-legend.js");
                            public static readonly string href_plotted_cities_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/href-plotted-cities.min.js") ? Url("href-plotted-cities.min.js") : Url("href-plotted-cities.js");
                            public static readonly string legend_images_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/legend-images.min.js") ? Url("legend-images.min.js") : Url("legend-images.js");
                            public static readonly string legend_plotted_cities_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/legend-plotted-cities.min.js") ? Url("legend-plotted-cities.min.js") : Url("legend-plotted-cities.js");
                            public static readonly string zoom_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/zoom.min.js") ? Url("zoom.min.js") : Url("zoom.js");
                        }
                    
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class morris {
                        private const string URLPATH = "~/Content/js/components/charts/morris";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string area_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/area.min.js") ? Url("area.min.js") : Url("area.js");
                        public static readonly string bar_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bar.min.js") ? Url("bar.min.js") : Url("bar.js");
                        public static readonly string donut_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/donut.min.js") ? Url("donut.min.js") : Url("donut.js");
                        public static readonly string line_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/line.min.js") ? Url("line.min.js") : Url("line.js");
                        public static readonly string smooth_area_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/smooth-area.min.js") ? Url("smooth-area.min.js") : Url("smooth-area.js");
                        public static readonly string smooth_line_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/smooth-line.min.js") ? Url("smooth-line.min.js") : Url("smooth-line.js");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class rickshaw {
                        private const string URLPATH = "~/Content/js/components/charts/rickshaw";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string area_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/area.min.js") ? Url("area.min.js") : Url("area.js");
                        public static readonly string bar_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bar.min.js") ? Url("bar.min.js") : Url("bar.js");
                        public static readonly string line_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/line.min.js") ? Url("line.min.js") : Url("line.js");
                        public static readonly string multiple_renderers_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/multiple-renderers.min.js") ? Url("multiple-renderers.min.js") : Url("multiple-renderers.js");
                        public static readonly string scatter_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/scatter.min.js") ? Url("scatter.min.js") : Url("scatter.js");
                    }
                
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class coming_soon {
                    private const string URLPATH = "~/Content/js/components/coming-soon";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string coming_soon_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/coming-soon.min.js") ? Url("coming-soon.min.js") : Url("coming-soon.js");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class dropdowns {
                    private const string URLPATH = "~/Content/js/components/dropdowns";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string dropdowns_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/dropdowns.min.js") ? Url("dropdowns.min.js") : Url("dropdowns.js");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class editors {
                    private const string URLPATH = "~/Content/js/components/editors";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string editor_ace_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editor-ace.min.js") ? Url("editor-ace.min.js") : Url("editor-ace.js");
                    public static readonly string editor_ckeditor_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editor-ckeditor.min.js") ? Url("editor-ckeditor.min.js") : Url("editor-ckeditor.js");
                    public static readonly string editor_codemirror_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editor-codemirror.min.js") ? Url("editor-codemirror.min.js") : Url("editor-codemirror.js");
                    public static readonly string editor_quill_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editor-quill.min.js") ? Url("editor-quill.min.js") : Url("editor-quill.js");
                    public static readonly string editor_summernote_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editor-summernote.min.js") ? Url("editor-summernote.min.js") : Url("editor-summernote.js");
                    public static readonly string editor_tinymce_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editor-tinymce.min.js") ? Url("editor-tinymce.min.js") : Url("editor-tinymce.js");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class extensions {
                    private const string URLPATH = "~/Content/js/components/extensions";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string block_ui_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/block-ui.min.js") ? Url("block-ui.min.js") : Url("block-ui.js");
                    public static readonly string clndr_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/clndr.min.js") ? Url("clndr.min.js") : Url("clndr.js");
                    public static readonly string context_menu_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/context-menu.min.js") ? Url("context-menu.min.js") : Url("context-menu.js");
                    public static readonly string date_time_dropper_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/date-time-dropper.min.js") ? Url("date-time-dropper.min.js") : Url("date-time-dropper.js");
                    public static readonly string drag_drop_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/drag-drop.min.js") ? Url("drag-drop.min.js") : Url("drag-drop.js");
                    public static readonly string dropzone_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/dropzone.min.js") ? Url("dropzone.min.js") : Url("dropzone.js");
                    public static readonly string fullcalendar_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/fullcalendar.min.js") ? Url("fullcalendar.min.js") : Url("fullcalendar.js");
                    public static readonly string image_cropper_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/image-cropper.min.js") ? Url("image-cropper.min.js") : Url("image-cropper.js");
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class internationalization {
                        private const string URLPATH = "~/Content/js/components/extensions/internationalization";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string after_init_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/after-init.min.js") ? Url("after-init.min.js") : Url("after-init.js");
                        public static readonly string fallback_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/fallback.min.js") ? Url("fallback.min.js") : Url("fallback.js");
                        public static readonly string on_init_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/on-init.min.js") ? Url("on-init.min.js") : Url("on-init.js");
                        public static readonly string query_string_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/query-string.min.js") ? Url("query-string.min.js") : Url("query-string.js");
                        public static readonly string resources_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/resources.min.js") ? Url("resources.min.js") : Url("resources.js");
                        public static readonly string xhr_backend_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/xhr-backend.min.js") ? Url("xhr-backend.min.js") : Url("xhr-backend.js");
                    }
                
                    public static readonly string jquery_file_upload_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery-file-upload.min.js") ? Url("jquery-file-upload.min.js") : Url("jquery-file-upload.js");
                    public static readonly string knob_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/knob.min.js") ? Url("knob.min.js") : Url("knob.js");
                    public static readonly string list_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/list.min.js") ? Url("list.min.js") : Url("list.js");
                    public static readonly string long_press_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/long-press.min.js") ? Url("long-press.min.js") : Url("long-press.js");
                    public static readonly string noui_slider_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/noui-slider.min.js") ? Url("noui-slider.min.js") : Url("noui-slider.js");
                    public static readonly string offline_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/offline.min.js") ? Url("offline.min.js") : Url("offline.js");
                    public static readonly string rating_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/rating.min.js") ? Url("rating.min.js") : Url("rating.js");
                    public static readonly string sweet_alerts_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/sweet-alerts.min.js") ? Url("sweet-alerts.min.js") : Url("sweet-alerts.js");
                    public static readonly string toastr_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/toastr.min.js") ? Url("toastr.min.js") : Url("toastr.js");
                    public static readonly string toolbar_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/toolbar.min.js") ? Url("toolbar.min.js") : Url("toolbar.js");
                    public static readonly string tree_view_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/tree-view.min.js") ? Url("tree-view.min.js") : Url("tree-view.js");
                    public static readonly string unslider_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/unslider.min.js") ? Url("unslider.min.js") : Url("unslider.js");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class forms {
                    private const string URLPATH = "~/Content/js/components/forms";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string checkbox_radio_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/checkbox-radio.min.js") ? Url("checkbox-radio.min.js") : Url("checkbox-radio.js");
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class extended {
                        private const string URLPATH = "~/Content/js/components/forms/extended";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string form_card_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/form-card.min.js") ? Url("form-card.min.js") : Url("form-card.js");
                        public static readonly string form_formatter_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/form-formatter.min.js") ? Url("form-formatter.min.js") : Url("form-formatter.js");
                        public static readonly string form_inputmask_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/form-inputmask.min.js") ? Url("form-inputmask.min.js") : Url("form-inputmask.js");
                        public static readonly string form_maxlength_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/form-maxlength.min.js") ? Url("form-maxlength.min.js") : Url("form-maxlength.js");
                        public static readonly string form_typeahead_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/form-typeahead.min.js") ? Url("form-typeahead.min.js") : Url("form-typeahead.js");
                    }
                
                    public static readonly string form_login_register_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/form-login-register.min.js") ? Url("form-login-register.min.js") : Url("form-login-register.js");
                    public static readonly string form_repeater_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/form-repeater.min.js") ? Url("form-repeater.min.js") : Url("form-repeater.js");
                    public static readonly string input_groups_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/input-groups.min.js") ? Url("input-groups.min.js") : Url("input-groups.js");
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class listbox {
                        private const string URLPATH = "~/Content/js/components/forms/listbox";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string form_duallistbox_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/form-duallistbox.min.js") ? Url("form-duallistbox.min.js") : Url("form-duallistbox.js");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class select {
                        private const string URLPATH = "~/Content/js/components/forms/select";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string form_select2_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/form-select2.min.js") ? Url("form-select2.min.js") : Url("form-select2.js");
                        public static readonly string form_selectBoxIt_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/form-selectBoxIt.min.js") ? Url("form-selectBoxIt.min.js") : Url("form-selectBoxIt.js");
                        public static readonly string form_selectivity_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/form-selectivity.min.js") ? Url("form-selectivity.min.js") : Url("form-selectivity.js");
                        public static readonly string form_selectize_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/form-selectize.min.js") ? Url("form-selectize.min.js") : Url("form-selectize.js");
                    }
                
                    public static readonly string switch_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/switch.min.js") ? Url("switch.min.js") : Url("switch.js");
                    public static readonly string switchery_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/switchery.min.js") ? Url("switchery.min.js") : Url("switchery.js");
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class tags {
                        private const string URLPATH = "~/Content/js/components/forms/tags";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string tagging_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/tagging.min.js") ? Url("tagging.min.js") : Url("tagging.js");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class validation {
                        private const string URLPATH = "~/Content/js/components/forms/validation";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string form_validation_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/form-validation.min.js") ? Url("form-validation.min.js") : Url("form-validation.js");
                    }
                
                    public static readonly string wizard_steps_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/wizard-steps.min.js") ? Url("wizard-steps.min.js") : Url("wizard-steps.js");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class gallery {
                    private const string URLPATH = "~/Content/js/components/gallery";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class photo_swipe {
                        private const string URLPATH = "~/Content/js/components/gallery/photo-swipe";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string photoswipe_script_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/photoswipe-script.min.js") ? Url("photoswipe-script.min.js") : Url("photoswipe-script.js");
                    }
                
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class modal {
                    private const string URLPATH = "~/Content/js/components/modal";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string components_modal_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/components-modal.min.js") ? Url("components-modal.min.js") : Url("components-modal.js");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class navs {
                    private const string URLPATH = "~/Content/js/components/navs";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string navs_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/navs.min.js") ? Url("navs.min.js") : Url("navs.js");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class pages {
                    private const string URLPATH = "~/Content/js/components/pages";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string content_sidebar_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/content-sidebar.min.js") ? Url("content-sidebar.min.js") : Url("content-sidebar.js");
                    public static readonly string dashboard_analytics_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/dashboard-analytics.min.js") ? Url("dashboard-analytics.min.js") : Url("dashboard-analytics.js");
                    public static readonly string dashboard_crm_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/dashboard-crm.min.js") ? Url("dashboard-crm.min.js") : Url("dashboard-crm.js");
                    public static readonly string dashboard_ecommerce_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/dashboard-ecommerce.min.js") ? Url("dashboard-ecommerce.min.js") : Url("dashboard-ecommerce.js");
                    public static readonly string dashboard_fitness_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/dashboard-fitness.min.js") ? Url("dashboard-fitness.min.js") : Url("dashboard-fitness.js");
                    public static readonly string dashboard_project_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/dashboard-project.min.js") ? Url("dashboard-project.min.js") : Url("dashboard-project.js");
                    public static readonly string invoice_sales_and_expenses_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/invoice-sales-and-expenses.min.js") ? Url("invoice-sales-and-expenses.min.js") : Url("invoice-sales-and-expenses.js");
                    public static readonly string invoice_top_expenses_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/invoice-top-expenses.min.js") ? Url("invoice-top-expenses.min.js") : Url("invoice-top-expenses.js");
                    public static readonly string invoice_total_recievables_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/invoice-total-recievables.min.js") ? Url("invoice-total-recievables.min.js") : Url("invoice-total-recievables.js");
                    public static readonly string invoices_list_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/invoices-list.min.js") ? Url("invoices-list.min.js") : Url("invoices-list.js");
                    public static readonly string project_bug_list_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/project-bug-list.min.js") ? Url("project-bug-list.min.js") : Url("project-bug-list.js");
                    public static readonly string project_summary_bug_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/project-summary-bug.min.js") ? Url("project-summary-bug.min.js") : Url("project-summary-bug.js");
                    public static readonly string project_summary_task_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/project-summary-task.min.js") ? Url("project-summary-task.min.js") : Url("project-summary-task.js");
                    public static readonly string project_task_list_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/project-task-list.min.js") ? Url("project-task-list.min.js") : Url("project-task-list.js");
                    public static readonly string scrumboard_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/scrumboard.min.js") ? Url("scrumboard.min.js") : Url("scrumboard.js");
                    public static readonly string sk_content_sidebar_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/sk-content-sidebar.min.js") ? Url("sk-content-sidebar.min.js") : Url("sk-content-sidebar.js");
                    public static readonly string timeline_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/timeline.min.js") ? Url("timeline.min.js") : Url("timeline.js");
                    public static readonly string users_contacts_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/users-contacts.min.js") ? Url("users-contacts.min.js") : Url("users-contacts.js");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class pagination {
                    private const string URLPATH = "~/Content/js/components/pagination";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string pagination_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/pagination.min.js") ? Url("pagination.min.js") : Url("pagination.js");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class pickers {
                    private const string URLPATH = "~/Content/js/components/pickers";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class colorpicker {
                        private const string URLPATH = "~/Content/js/components/pickers/colorpicker";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string picker_color_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/picker-color.min.js") ? Url("picker-color.min.js") : Url("picker-color.js");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class dateTime {
                        private const string URLPATH = "~/Content/js/components/pickers/dateTime";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string picker_date_time_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/picker-date-time.min.js") ? Url("picker-date-time.min.js") : Url("picker-date-time.js");
                    }
                
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class popover {
                    private const string URLPATH = "~/Content/js/components/popover";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string popover_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/popover.min.js") ? Url("popover.min.js") : Url("popover.js");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class tables {
                    private const string URLPATH = "~/Content/js/components/tables";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class components {
                        private const string URLPATH = "~/Content/js/components/tables/components";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string table_components_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/table-components.min.js") ? Url("table-components.min.js") : Url("table-components.js");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class datatables {
                        private const string URLPATH = "~/Content/js/components/tables/datatables";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string datatable_advanced_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/datatable-advanced.min.js") ? Url("datatable-advanced.min.js") : Url("datatable-advanced.js");
                        public static readonly string datatable_api_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/datatable-api.min.js") ? Url("datatable-api.min.js") : Url("datatable-api.js");
                        public static readonly string datatable_basic_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/datatable-basic.min.js") ? Url("datatable-basic.min.js") : Url("datatable-basic.js");
                        public static readonly string datatable_styling_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/datatable-styling.min.js") ? Url("datatable-styling.min.js") : Url("datatable-styling.js");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class datatables_extensions {
                        private const string URLPATH = "~/Content/js/components/tables/datatables-extensions";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string datatable_autofill_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/datatable-autofill.min.js") ? Url("datatable-autofill.min.js") : Url("datatable-autofill.js");
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class datatable_button {
                            private const string URLPATH = "~/Content/js/components/tables/datatables-extensions/datatable-button";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string datatable_button_basic_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/datatable-button-basic.min.js") ? Url("datatable-button-basic.min.js") : Url("datatable-button-basic.js");
                            public static readonly string datatable_extensions_api_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/datatable-extensions-api.min.js") ? Url("datatable-extensions-api.min.js") : Url("datatable-extensions-api.js");
                            public static readonly string datatable_flash_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/datatable-flash.min.js") ? Url("datatable-flash.min.js") : Url("datatable-flash.js");
                            public static readonly string datatable_html5_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/datatable-html5.min.js") ? Url("datatable-html5.min.js") : Url("datatable-html5.js");
                            public static readonly string datatable_print_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/datatable-print.min.js") ? Url("datatable-print.min.js") : Url("datatable-print.js");
                            public static readonly string datatable_visibility_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/datatable-visibility.min.js") ? Url("datatable-visibility.min.js") : Url("datatable-visibility.js");
                        }
                    
                        public static readonly string datatable_colvis_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/datatable-colvis.min.js") ? Url("datatable-colvis.min.js") : Url("datatable-colvis.js");
                        public static readonly string datatable_fixed_column_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/datatable-fixed-column.min.js") ? Url("datatable-fixed-column.min.js") : Url("datatable-fixed-column.js");
                        public static readonly string datatable_fixed_header_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/datatable-fixed-header.min.js") ? Url("datatable-fixed-header.min.js") : Url("datatable-fixed-header.js");
                        public static readonly string datatable_keytable_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/datatable-keytable.min.js") ? Url("datatable-keytable.min.js") : Url("datatable-keytable.js");
                        public static readonly string datatable_responsive_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/datatable-responsive.min.js") ? Url("datatable-responsive.min.js") : Url("datatable-responsive.js");
                        public static readonly string datatable_rowreorder_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/datatable-rowreorder.min.js") ? Url("datatable-rowreorder.min.js") : Url("datatable-rowreorder.js");
                        public static readonly string datatable_select_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/datatable-select.min.js") ? Url("datatable-select.min.js") : Url("datatable-select.js");
                        public static readonly string datatables_colreorder_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/datatables-colreorder.min.js") ? Url("datatables-colreorder.min.js") : Url("datatables-colreorder.js");
                        public static readonly string datatables_sources_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/datatables-sources.min.js") ? Url("datatables-sources.min.js") : Url("datatables-sources.js");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class handsontable {
                        private const string URLPATH = "~/Content/js/components/tables/handsontable";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string handsontable_appearance_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/handsontable-appearance.min.js") ? Url("handsontable-appearance.min.js") : Url("handsontable-appearance.js");
                        public static readonly string handsontable_cell_features_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/handsontable-cell-features.min.js") ? Url("handsontable-cell-features.min.js") : Url("handsontable-cell-features.js");
                        public static readonly string handsontable_cell_types_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/handsontable-cell-types.min.js") ? Url("handsontable-cell-types.min.js") : Url("handsontable-cell-types.js");
                        public static readonly string handsontable_columns_only_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/handsontable-columns-only.min.js") ? Url("handsontable-columns-only.min.js") : Url("handsontable-columns-only.js");
                        public static readonly string handsontable_data_operations_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/handsontable-data-operations.min.js") ? Url("handsontable-data-operations.min.js") : Url("handsontable-data-operations.js");
                        public static readonly string handsontable_integrations_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/handsontable-integrations.min.js") ? Url("handsontable-integrations.min.js") : Url("handsontable-integrations.js");
                        public static readonly string handsontable_rows_columns_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/handsontable-rows-columns.min.js") ? Url("handsontable-rows-columns.min.js") : Url("handsontable-rows-columns.js");
                        public static readonly string handsontable_rows_only_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/handsontable-rows-only.min.js") ? Url("handsontable-rows-only.min.js") : Url("handsontable-rows-only.js");
                        public static readonly string handsontable_utilities_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/handsontable-utilities.min.js") ? Url("handsontable-utilities.min.js") : Url("handsontable-utilities.js");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class jsgrid {
                        private const string URLPATH = "~/Content/js/components/tables/jsgrid";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string jsgrid_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jsgrid.min.js") ? Url("jsgrid.min.js") : Url("jsgrid.js");
                    }
                
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class tooltip {
                    private const string URLPATH = "~/Content/js/components/tooltip";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string tooltip_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/tooltip.min.js") ? Url("tooltip.min.js") : Url("tooltip.js");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class ui {
                    private const string URLPATH = "~/Content/js/components/ui";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string breadcrumbs_with_stats_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/breadcrumbs-with-stats.min.js") ? Url("breadcrumbs-with-stats.min.js") : Url("breadcrumbs-with-stats.js");
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class jquery_ui {
                        private const string URLPATH = "~/Content/js/components/ui/jquery-ui";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string autocomplete_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/autocomplete.min.js") ? Url("autocomplete.min.js") : Url("autocomplete.js");
                        public static readonly string buttons_selects_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/buttons-selects.min.js") ? Url("buttons-selects.min.js") : Url("buttons-selects.js");
                        public static readonly string date_pickers_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/date-pickers.min.js") ? Url("date-pickers.min.js") : Url("date-pickers.js");
                        public static readonly string dialog_tooltip_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/dialog-tooltip.min.js") ? Url("dialog-tooltip.min.js") : Url("dialog-tooltip.js");
                        public static readonly string interactions_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/interactions.min.js") ? Url("interactions.min.js") : Url("interactions.js");
                        public static readonly string navigations_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/navigations.min.js") ? Url("navigations.min.js") : Url("navigations.js");
                        public static readonly string slider_spinner_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/slider-spinner.min.js") ? Url("slider-spinner.min.js") : Url("slider-spinner.js");
                    }
                
                    public static readonly string scrollable_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/scrollable.min.js") ? Url("scrollable.min.js") : Url("scrollable.js");
                }
            
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class core {
                private const string URLPATH = "~/Content/js/core";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class libraries {
                    private const string URLPATH = "~/Content/js/core/libraries";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class jquery_ui {
                        private const string URLPATH = "~/Content/js/core/libraries/jquery_ui";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class globalize {
                            private const string URLPATH = "~/Content/js/core/libraries/jquery_ui/globalize";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                            public static class cultures {
                                private const string URLPATH = "~/Content/js/core/libraries/jquery_ui/globalize/cultures";
                                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                                public static readonly string globalize_culture_de_DE_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.de-DE.min.js") ? Url("globalize.culture.de-DE.min.js") : Url("globalize.culture.de-DE.js");
                                public static readonly string globalize_culture_ja_JP_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.ja-JP.min.js") ? Url("globalize.culture.ja-JP.min.js") : Url("globalize.culture.ja-JP.js");
                            }
                        
                            public static readonly string globalize_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.min.js") ? Url("globalize.min.js") : Url("globalize.js");
                        }
                    
                        public static readonly string jquery_ui_min_js = Url("jquery-ui.min.js");
                    }
                
                }
            
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class plugins {
                private const string URLPATH = "~/Content/js/plugins";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class animation {
                    private const string URLPATH = "~/Content/js/plugins/animation";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string jquery_appear_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.appear.min.js") ? Url("jquery.appear.min.js") : Url("jquery.appear.js");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class bgvideo {
                    private const string URLPATH = "~/Content/js/plugins/bgvideo";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string bigvideo_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bigvideo.min.js") ? Url("bigvideo.min.js") : Url("bigvideo.js");
                    public static readonly string imagesloaded_pkgd_min_js = Url("imagesloaded.pkgd.min.js");
                    public static readonly string jquery_tubular_1_0_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.tubular.1.0.min.js") ? Url("jquery.tubular.1.0.min.js") : Url("jquery.tubular.1.0.js");
                    public static readonly string video_min_js = Url("video.min.js");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class buttons {
                    private const string URLPATH = "~/Content/js/plugins/buttons";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string ladda_min_js = Url("ladda.min.js");
                    public static readonly string spin_min_js = Url("spin.min.js");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class charts {
                    private const string URLPATH = "~/Content/js/plugins/charts";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string c3_min_js = Url("c3.min.js");
                    public static readonly string chart_min_js = Url("chart.min.js");
                    public static readonly string chartist_plugin_tooltip_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/chartist-plugin-tooltip.min.js") ? Url("chartist-plugin-tooltip.min.js") : Url("chartist-plugin-tooltip.js");
                    public static readonly string chartist_min_js = Url("chartist.min.js");
                    public static readonly string d3_donut3D_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/d3-donut3D.min.js") ? Url("d3-donut3D.min.js") : Url("d3-donut3D.js");
                    public static readonly string d3_min_js = Url("d3.min.js");
                    public static readonly string d3_tip_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/d3.tip.min.js") ? Url("d3.tip.min.js") : Url("d3.tip.js");
                    public static readonly string dimple_min_js = Url("dimple.min.js");
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class echarts {
                        private const string URLPATH = "~/Content/js/plugins/charts/echarts";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string echarts_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/echarts.min.js") ? Url("echarts.min.js") : Url("echarts.js");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class flot {
                        private const string URLPATH = "~/Content/js/plugins/charts/flot";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string jquery_flot_categories_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.flot.categories.min.js") ? Url("jquery.flot.categories.min.js") : Url("jquery.flot.categories.js");
                        public static readonly string jquery_flot_errorbars_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.flot.errorbars.min.js") ? Url("jquery.flot.errorbars.min.js") : Url("jquery.flot.errorbars.js");
                        public static readonly string jquery_flot_min_js = Url("jquery.flot.min.js");
                        public static readonly string jquery_flot_navigate_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.flot.navigate.min.js") ? Url("jquery.flot.navigate.min.js") : Url("jquery.flot.navigate.js");
                        public static readonly string jquery_flot_pie_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.flot.pie.min.js") ? Url("jquery.flot.pie.min.js") : Url("jquery.flot.pie.js");
                        public static readonly string jquery_flot_resize_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.flot.resize.min.js") ? Url("jquery.flot.resize.min.js") : Url("jquery.flot.resize.js");
                        public static readonly string jquery_flot_selection_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.flot.selection.min.js") ? Url("jquery.flot.selection.min.js") : Url("jquery.flot.selection.js");
                        public static readonly string jquery_flot_stack_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.flot.stack.min.js") ? Url("jquery.flot.stack.min.js") : Url("jquery.flot.stack.js");
                        public static readonly string jquery_flot_symbol_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.flot.symbol.min.js") ? Url("jquery.flot.symbol.min.js") : Url("jquery.flot.symbol.js");
                        public static readonly string jquery_flot_threshold_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.flot.threshold.min.js") ? Url("jquery.flot.threshold.min.js") : Url("jquery.flot.threshold.js");
                        public static readonly string jquery_flot_time_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.flot.time.min.js") ? Url("jquery.flot.time.min.js") : Url("jquery.flot.time.js");
                    }
                
                    public static readonly string gantt_chart_d3_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/gantt-chart-d3.min.js") ? Url("gantt-chart-d3.min.js") : Url("gantt-chart-d3.js");
                    public static readonly string gmaps_min_js = Url("gmaps.min.js");
                    public static readonly string gradient_pie_d3_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/gradient-pie-d3.min.js") ? Url("gradient-pie-d3.min.js") : Url("gradient-pie-d3.js");
                    public static readonly string jquery_sparkline_min_js = Url("jquery.sparkline.min.js");
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class jqvmap {
                        private const string URLPATH = "~/Content/js/plugins/charts/jqvmap";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string jquery_vmap_min_js = Url("jquery.vmap.min.js");
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class maps {
                            private const string URLPATH = "~/Content/js/plugins/charts/jqvmap/maps";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                            public static class continents {
                                private const string URLPATH = "~/Content/js/plugins/charts/jqvmap/maps/continents";
                                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                                public static readonly string jquery_vmap_africa_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.vmap.africa.min.js") ? Url("jquery.vmap.africa.min.js") : Url("jquery.vmap.africa.js");
                                public static readonly string jquery_vmap_asia_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.vmap.asia.min.js") ? Url("jquery.vmap.asia.min.js") : Url("jquery.vmap.asia.js");
                                public static readonly string jquery_vmap_australia_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.vmap.australia.min.js") ? Url("jquery.vmap.australia.min.js") : Url("jquery.vmap.australia.js");
                                public static readonly string jquery_vmap_europe_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.vmap.europe.min.js") ? Url("jquery.vmap.europe.min.js") : Url("jquery.vmap.europe.js");
                                public static readonly string jquery_vmap_north_america_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.vmap.north-america.min.js") ? Url("jquery.vmap.north-america.min.js") : Url("jquery.vmap.north-america.js");
                                public static readonly string jquery_vmap_south_america_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.vmap.south-america.min.js") ? Url("jquery.vmap.south-america.min.js") : Url("jquery.vmap.south-america.js");
                            }
                        
                            public static readonly string jquery_vmap_usa_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.vmap.usa.min.js") ? Url("jquery.vmap.usa.min.js") : Url("jquery.vmap.usa.js");
                            public static readonly string jquery_vmap_world_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.vmap.world.min.js") ? Url("jquery.vmap.world.min.js") : Url("jquery.vmap.world.js");
                        }
                    
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class jvector {
                        private const string URLPATH = "~/Content/js/plugins/charts/jvector";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string jquery_jvectormap_2_0_3_min_js = Url("jquery-jvectormap-2.0.3.min.js");
                        public static readonly string jquery_jvectormap_de_merc_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery-jvectormap-de-merc.min.js") ? Url("jquery-jvectormap-de-merc.min.js") : Url("jquery-jvectormap-de-merc.js");
                        public static readonly string jquery_jvectormap_us_aea_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery-jvectormap-us-aea.min.js") ? Url("jquery-jvectormap-us-aea.min.js") : Url("jquery-jvectormap-us-aea.js");
                        public static readonly string jquery_jvectormap_us_lcc_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery-jvectormap-us-lcc.min.js") ? Url("jquery-jvectormap-us-lcc.min.js") : Url("jquery-jvectormap-us-lcc.js");
                        public static readonly string jquery_jvectormap_world_mill_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery-jvectormap-world-mill.min.js") ? Url("jquery-jvectormap-world-mill.min.js") : Url("jquery-jvectormap-world-mill.js");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class mapael {
                        private const string URLPATH = "~/Content/js/plugins/charts/mapael";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string jquery_mapael_min_js = Url("jquery.mapael.min.js");
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class maps {
                            private const string URLPATH = "~/Content/js/plugins/charts/mapael/maps";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string france_departments_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/france_departments.min.js") ? Url("france_departments.min.js") : Url("france_departments.js");
                            public static readonly string usa_states_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/usa_states.min.js") ? Url("usa_states.min.js") : Url("usa_states.js");
                            public static readonly string world_countries_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/world_countries.min.js") ? Url("world_countries.min.js") : Url("world_countries.js");
                        }
                    
                    }
                
                    public static readonly string morris_min_js = Url("morris.min.js");
                    public static readonly string raphael_min_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/raphael-min.min.js") ? Url("raphael-min.min.js") : Url("raphael-min.js");
                    public static readonly string rickshaw_min_js = Url("rickshaw.min.js");
                    public static readonly string sankey_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/sankey.min.js") ? Url("sankey.min.js") : Url("sankey.js");
                    public static readonly string venn_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/venn.min.js") ? Url("venn.min.js") : Url("venn.js");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class coming_soon {
                    private const string URLPATH = "~/Content/js/plugins/coming-soon";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string jquery_countdown_min_js = Url("jquery.countdown.min.js");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class editors {
                    private const string URLPATH = "~/Content/js/plugins/editors";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class ace {
                        private const string URLPATH = "~/Content/js/plugins/editors/ace";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string ace_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ace.min.js") ? Url("ace.min.js") : Url("ace.js");
                        public static readonly string ext_language_tools_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ext-language_tools.min.js") ? Url("ext-language_tools.min.js") : Url("ext-language_tools.js");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class ckeditor {
                        private const string URLPATH = "~/Content/js/plugins/editors/ckeditor";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string ckeditor_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ckeditor.min.js") ? Url("ckeditor.min.js") : Url("ckeditor.js");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class codemirror {
                        private const string URLPATH = "~/Content/js/plugins/editors/codemirror";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class addon {
                            private const string URLPATH = "~/Content/js/plugins/editors/codemirror/addon";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                            public static class comment {
                                private const string URLPATH = "~/Content/js/plugins/editors/codemirror/addon/comment";
                                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                                public static readonly string comment_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/comment.min.js") ? Url("comment.min.js") : Url("comment.js");
                            }
                        
                            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                            public static class dialog {
                                private const string URLPATH = "~/Content/js/plugins/editors/codemirror/addon/dialog";
                                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                                public static readonly string dialog_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/dialog.min.js") ? Url("dialog.min.js") : Url("dialog.js");
                            }
                        
                            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                            public static class display {
                                private const string URLPATH = "~/Content/js/plugins/editors/codemirror/addon/display";
                                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                                public static readonly string rulers_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/rulers.min.js") ? Url("rulers.min.js") : Url("rulers.js");
                            }
                        
                            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                            public static class edit {
                                private const string URLPATH = "~/Content/js/plugins/editors/codemirror/addon/edit";
                                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                                public static readonly string closebrackets_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/closebrackets.min.js") ? Url("closebrackets.min.js") : Url("closebrackets.js");
                                public static readonly string matchbrackets_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/matchbrackets.min.js") ? Url("matchbrackets.min.js") : Url("matchbrackets.js");
                            }
                        
                            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                            public static class fold {
                                private const string URLPATH = "~/Content/js/plugins/editors/codemirror/addon/fold";
                                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                                public static readonly string brace_fold_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/brace-fold.min.js") ? Url("brace-fold.min.js") : Url("brace-fold.js");
                                public static readonly string comment_fold_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/comment-fold.min.js") ? Url("comment-fold.min.js") : Url("comment-fold.js");
                                public static readonly string foldcode_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/foldcode.min.js") ? Url("foldcode.min.js") : Url("foldcode.js");
                                public static readonly string foldgutter_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/foldgutter.min.js") ? Url("foldgutter.min.js") : Url("foldgutter.js");
                                public static readonly string markdown_fold_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/markdown-fold.min.js") ? Url("markdown-fold.min.js") : Url("markdown-fold.js");
                                public static readonly string xml_fold_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/xml-fold.min.js") ? Url("xml-fold.min.js") : Url("xml-fold.js");
                            }
                        
                            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                            public static class mode {
                                private const string URLPATH = "~/Content/js/plugins/editors/codemirror/addon/mode";
                                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                                public static readonly string loadmode_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/loadmode.min.js") ? Url("loadmode.min.js") : Url("loadmode.js");
                                public static readonly string simple_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/simple.min.js") ? Url("simple.min.js") : Url("simple.js");
                            }
                        
                            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                            public static class scroll {
                                private const string URLPATH = "~/Content/js/plugins/editors/codemirror/addon/scroll";
                                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                                public static readonly string annotatescrollbar_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/annotatescrollbar.min.js") ? Url("annotatescrollbar.min.js") : Url("annotatescrollbar.js");
                            }
                        
                            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                            public static class search {
                                private const string URLPATH = "~/Content/js/plugins/editors/codemirror/addon/search";
                                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                                public static readonly string match_highlighter_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/match-highlighter.min.js") ? Url("match-highlighter.min.js") : Url("match-highlighter.js");
                                public static readonly string matchesonscrollbar_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/matchesonscrollbar.min.js") ? Url("matchesonscrollbar.min.js") : Url("matchesonscrollbar.js");
                                public static readonly string search_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/search.min.js") ? Url("search.min.js") : Url("search.js");
                                public static readonly string searchcursor_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/searchcursor.min.js") ? Url("searchcursor.min.js") : Url("searchcursor.js");
                            }
                        
                            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                            public static class selection {
                                private const string URLPATH = "~/Content/js/plugins/editors/codemirror/addon/selection";
                                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                                public static readonly string active_line_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/active-line.min.js") ? Url("active-line.min.js") : Url("active-line.js");
                                public static readonly string mark_selection_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/mark-selection.min.js") ? Url("mark-selection.min.js") : Url("mark-selection.js");
                            }
                        
                            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                            public static class wrap {
                                private const string URLPATH = "~/Content/js/plugins/editors/codemirror/addon/wrap";
                                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                                public static readonly string hardwrap_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/hardwrap.min.js") ? Url("hardwrap.min.js") : Url("hardwrap.js");
                            }
                        
                        }
                    
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class keymap {
                            private const string URLPATH = "~/Content/js/plugins/editors/codemirror/keymap";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string sublime_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/sublime.min.js") ? Url("sublime.min.js") : Url("sublime.js");
                        }
                    
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class lib {
                            private const string URLPATH = "~/Content/js/plugins/editors/codemirror/lib";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string codemirror_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/codemirror.min.js") ? Url("codemirror.min.js") : Url("codemirror.js");
                        }
                    
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class mode {
                            private const string URLPATH = "~/Content/js/plugins/editors/codemirror/mode";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                            public static class css {
                                private const string URLPATH = "~/Content/js/plugins/editors/codemirror/mode/css";
                                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                                public static readonly string css_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/css.min.js") ? Url("css.min.js") : Url("css.js");
                            }
                        
                            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                            public static class htmlmixed {
                                private const string URLPATH = "~/Content/js/plugins/editors/codemirror/mode/htmlmixed";
                                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                                public static readonly string htmlmixed_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/htmlmixed.min.js") ? Url("htmlmixed.min.js") : Url("htmlmixed.js");
                            }
                        
                            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                            public static class javascript {
                                private const string URLPATH = "~/Content/js/plugins/editors/codemirror/mode/javascript";
                                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                                public static readonly string javascript_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/javascript.min.js") ? Url("javascript.min.js") : Url("javascript.js");
                            }
                        
                            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                            public static class markdown {
                                private const string URLPATH = "~/Content/js/plugins/editors/codemirror/mode/markdown";
                                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                                public static readonly string markdown_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/markdown.min.js") ? Url("markdown.min.js") : Url("markdown.js");
                            }
                        
                            public static readonly string meta_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/meta.min.js") ? Url("meta.min.js") : Url("meta.js");
                            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                            public static class xml {
                                private const string URLPATH = "~/Content/js/plugins/editors/codemirror/mode/xml";
                                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                                public static readonly string xml_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/xml.min.js") ? Url("xml.min.js") : Url("xml.js");
                            }
                        
                        }
                    
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class quill {
                        private const string URLPATH = "~/Content/js/plugins/editors/quill";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string highlight_min_js = Url("highlight.min.js");
                        public static readonly string katex_min_js = Url("katex.min.js");
                        public static readonly string quill_min_js = Url("quill.min.js");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class summernote {
                        private const string URLPATH = "~/Content/js/plugins/editors/summernote";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string summernote_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/summernote.min.js") ? Url("summernote.min.js") : Url("summernote.js");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class tinymce {
                        private const string URLPATH = "~/Content/js/plugins/editors/tinymce";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string tinymce_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/tinymce.min.js") ? Url("tinymce.min.js") : Url("tinymce.js");
                    }
                
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class extensions {
                    private const string URLPATH = "~/Content/js/plugins/extensions";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string bootstrap_contextmenu_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap-contextmenu.min.js") ? Url("bootstrap-contextmenu.min.js") : Url("bootstrap-contextmenu.js");
                    public static readonly string bootstrap_treeview_min_js = Url("bootstrap-treeview.min.js");
                    public static readonly string clndr_min_js = Url("clndr.min.js");
                    public static readonly string cropper_min_js = Url("cropper.min.js");
                    public static readonly string datedropper_min_js = Url("datedropper.min.js");
                    public static readonly string dragula_min_js = Url("dragula.min.js");
                    public static readonly string dropzone_min_js = Url("dropzone.min.js");
                    public static readonly string fullcalendar_min_js = Url("fullcalendar.min.js");
                    public static readonly string gcal_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/gcal.min.js") ? Url("gcal.min.js") : Url("gcal.js");
                    public static readonly string i18next_min_js = Url("i18next.min.js");
                    public static readonly string i18nextBrowserLanguageDetector_min_js = Url("i18nextBrowserLanguageDetector.min.js");
                    public static readonly string i18nextXHRBackend_min_js = Url("i18nextXHRBackend.min.js");
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class jquery_file_upload {
                        private const string URLPATH = "~/Content/js/plugins/extensions/jquery-file-upload";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string jquery_fileupload_audio_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.fileupload-audio.min.js") ? Url("jquery.fileupload-audio.min.js") : Url("jquery.fileupload-audio.js");
                        public static readonly string jquery_fileupload_image_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.fileupload-image.min.js") ? Url("jquery.fileupload-image.min.js") : Url("jquery.fileupload-image.js");
                        public static readonly string jquery_fileupload_process_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.fileupload-process.min.js") ? Url("jquery.fileupload-process.min.js") : Url("jquery.fileupload-process.js");
                        public static readonly string jquery_fileupload_ui_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.fileupload-ui.min.js") ? Url("jquery.fileupload-ui.min.js") : Url("jquery.fileupload-ui.js");
                        public static readonly string jquery_fileupload_validate_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.fileupload-validate.min.js") ? Url("jquery.fileupload-validate.min.js") : Url("jquery.fileupload-validate.js");
                        public static readonly string jquery_fileupload_video_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.fileupload-video.min.js") ? Url("jquery.fileupload-video.min.js") : Url("jquery.fileupload-video.js");
                        public static readonly string jquery_fileupload_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.fileupload.min.js") ? Url("jquery.fileupload.min.js") : Url("jquery.fileupload.js");
                        public static readonly string jquery_iframe_transport_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.iframe-transport.min.js") ? Url("jquery.iframe-transport.min.js") : Url("jquery.iframe-transport.js");
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class vendor {
                            private const string URLPATH = "~/Content/js/plugins/extensions/jquery-file-upload/vendor";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string canvas_to_blob_min_js = Url("canvas-to-blob.min.js");
                            public static readonly string jquery_blueimp_gallery_min_js = Url("jquery.blueimp-gallery.min.js");
                            public static readonly string jquery_ui_widget_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.ui.widget.min.js") ? Url("jquery.ui.widget.min.js") : Url("jquery.ui.widget.js");
                            public static readonly string load_image_all_min_js = Url("load-image.all.min.js");
                            public static readonly string tmpl_min_js = Url("tmpl.min.js");
                        }
                    
                    }
                
                    public static readonly string jquery_i18next_min_js = Url("jquery-i18next.min.js");
                    public static readonly string jquery_knob_min_js = Url("jquery.knob.min.js");
                    public static readonly string jquery_mousewheel_min_js = Url("jquery.mousewheel.min.js");
                    public static readonly string jquery_raty_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.raty.min.js") ? Url("jquery.raty.min.js") : Url("jquery.raty.js");
                    public static readonly string jquery_steps_min_js = Url("jquery.steps.min.js");
                    public static readonly string jquery_toolbar_min_js = Url("jquery.toolbar.min.js");
                    public static readonly string lang_all_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/lang-all.min.js") ? Url("lang-all.min.js") : Url("lang-all.js");
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class listjs {
                        private const string URLPATH = "~/Content/js/plugins/extensions/listjs";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string list_fuzzysearch_min_js = Url("list.fuzzysearch.min.js");
                        public static readonly string list_min_js = Url("list.min.js");
                        public static readonly string list_pagination_min_js = Url("list.pagination.min.js");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class long_press {
                        private const string URLPATH = "~/Content/js/plugins/extensions/long-press";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string jquery_longpress_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.longpress.min.js") ? Url("jquery.longpress.min.js") : Url("jquery.longpress.js");
                        public static readonly string jquery_mousewheel_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.mousewheel.min.js") ? Url("jquery.mousewheel.min.js") : Url("jquery.mousewheel.js");
                        public static readonly string plugins_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/plugins.min.js") ? Url("plugins.min.js") : Url("plugins.js");
                    }
                
                    public static readonly string moment_min_js = Url("moment.min.js");
                    public static readonly string nouislider_min_js = Url("nouislider.min.js");
                    public static readonly string offline_min_js = Url("offline.min.js");
                    public static readonly string sweetalert_min_js = Url("sweetalert.min.js");
                    public static readonly string timedropper_min_js = Url("timedropper.min.js");
                    public static readonly string toastr_min_js = Url("toastr.min.js");
                    public static readonly string transition_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/transition.min.js") ? Url("transition.min.js") : Url("transition.js");
                    public static readonly string underscore_min_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/underscore-min.min.js") ? Url("underscore-min.min.js") : Url("underscore-min.js");
                    public static readonly string unslider_min_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/unslider-min.min.js") ? Url("unslider-min.min.js") : Url("unslider-min.js");
                    public static readonly string wNumb_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/wNumb.min.js") ? Url("wNumb.min.js") : Url("wNumb.js");
                    public static readonly string zoom_min_js = Url("zoom.min.js");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class forms {
                    private const string URLPATH = "~/Content/js/plugins/forms";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class extended {
                        private const string URLPATH = "~/Content/js/plugins/forms/extended";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class card {
                            private const string URLPATH = "~/Content/js/plugins/forms/extended/card";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string jquery_card_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.card.min.js") ? Url("jquery.card.min.js") : Url("jquery.card.js");
                        }
                    
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class formatter {
                            private const string URLPATH = "~/Content/js/plugins/forms/extended/formatter";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string formatter_min_js = Url("formatter.min.js");
                        }
                    
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class inputmask {
                            private const string URLPATH = "~/Content/js/plugins/forms/extended/inputmask";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string jquery_inputmask_bundle_min_js = Url("jquery.inputmask.bundle.min.js");
                        }
                    
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class maxlength {
                            private const string URLPATH = "~/Content/js/plugins/forms/extended/maxlength";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string bootstrap_maxlength_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap-maxlength.min.js") ? Url("bootstrap-maxlength.min.js") : Url("bootstrap-maxlength.js");
                        }
                    
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class typeahead {
                            private const string URLPATH = "~/Content/js/plugins/forms/extended/typeahead";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string bloodhound_min_js = Url("bloodhound.min.js");
                            public static readonly string handlebars_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/handlebars.min.js") ? Url("handlebars.min.js") : Url("handlebars.js");
                            public static readonly string typeahead_bundle_min_js = Url("typeahead.bundle.min.js");
                        }
                    
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class icheck {
                        private const string URLPATH = "~/Content/js/plugins/forms/icheck";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string icheck_min_js = Url("icheck.min.js");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class listbox {
                        private const string URLPATH = "~/Content/js/plugins/forms/listbox";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string jquery_bootstrap_duallistbox_min_js = Url("jquery.bootstrap-duallistbox.min.js");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class repeater {
                        private const string URLPATH = "~/Content/js/plugins/forms/repeater";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string jquery_repeater_min_js = Url("jquery.repeater.min.js");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class select {
                        private const string URLPATH = "~/Content/js/plugins/forms/select";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string jquery_selectBoxIt_min_js = Url("jquery.selectBoxIt.min.js");
                        public static readonly string select2_full_min_js = Url("select2.full.min.js");
                        public static readonly string select2_min_js = Url("select2.min.js");
                        public static readonly string selectivity_full_min_js = Url("selectivity-full.min.js");
                        public static readonly string selectize_min_js = Url("selectize.min.js");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class spinner {
                        private const string URLPATH = "~/Content/js/plugins/forms/spinner";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string jquery_bootstrap_touchspin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.bootstrap-touchspin.min.js") ? Url("jquery.bootstrap-touchspin.min.js") : Url("jquery.bootstrap-touchspin.js");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class tags {
                        private const string URLPATH = "~/Content/js/plugins/forms/tags";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string bootstrap_tagsinput_min_js = Url("bootstrap-tagsinput.min.js");
                        public static readonly string form_field_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/form-field.min.js") ? Url("form-field.min.js") : Url("form-field.js");
                        public static readonly string tagging_min_js = Url("tagging.min.js");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class toggle {
                        private const string URLPATH = "~/Content/js/plugins/forms/toggle";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string bootstrap_checkbox_min_js = Url("bootstrap-checkbox.min.js");
                        public static readonly string bootstrap_switch_min_js = Url("bootstrap-switch.min.js");
                        public static readonly string switchery_min_js = Url("switchery.min.js");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class validation {
                        private const string URLPATH = "~/Content/js/plugins/forms/validation";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string jqBootstrapValidation_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jqBootstrapValidation.min.js") ? Url("jqBootstrapValidation.min.js") : Url("jqBootstrapValidation.js");
                        public static readonly string jquery_validate_min_js = Url("jquery.validate.min.js");
                    }
                
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class gallery {
                    private const string URLPATH = "~/Content/js/plugins/gallery";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class masonry {
                        private const string URLPATH = "~/Content/js/plugins/gallery/masonry";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string masonry_pkgd_min_js = Url("masonry.pkgd.min.js");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class photo_swipe {
                        private const string URLPATH = "~/Content/js/plugins/gallery/photo-swipe";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class default_skin {
                            private const string URLPATH = "~/Content/js/plugins/gallery/photo-swipe/default-skin";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string default_skin_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/default-skin.min.css") ? Url("default-skin.min.css") : Url("default-skin.css");
                            public static readonly string default_skin_png = Url("default-skin.png");
                            public static readonly string default_skin_svg = Url("default-skin.svg");
                            public static readonly string preloader_gif = Url("preloader.gif");
                        }
                    
                        public static readonly string photoswipe_ui_default_min_js = Url("photoswipe-ui-default.min.js");
                        public static readonly string photoswipe_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/photoswipe.min.css") ? Url("photoswipe.min.css") : Url("photoswipe.css");
                        public static readonly string photoswipe_min_js = Url("photoswipe.min.js");
                    }
                
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class pages {
                    private const string URLPATH = "~/Content/js/plugins/pages";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class lobibox {
                        private const string URLPATH = "~/Content/js/plugins/pages/lobibox";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string lobibox_min_js = Url("lobibox.min.js");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class lobilist {
                        private const string URLPATH = "~/Content/js/plugins/pages/lobilist";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string lobilist_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/lobilist.min.js") ? Url("lobilist.min.js") : Url("lobilist.js");
                    }
                
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class pagination {
                    private const string URLPATH = "~/Content/js/plugins/pagination";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string bootstrap_datepaginator_min_js = Url("bootstrap-datepaginator.min.js");
                    public static readonly string datepicker_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/datepicker.min.js") ? Url("datepicker.min.js") : Url("datepicker.js");
                    public static readonly string jquery_bootpag_min_js = Url("jquery.bootpag.min.js");
                    public static readonly string jquery_twbsPagination_min_js = Url("jquery.twbsPagination.min.js");
                    public static readonly string moment_min_js = Url("moment.min.js");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class pickers {
                    private const string URLPATH = "~/Content/js/plugins/pickers";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class colorpicker {
                        private const string URLPATH = "~/Content/js/plugins/pickers/colorpicker";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string bootstrap_colorpicker_min_js = Url("bootstrap-colorpicker.min.js");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class daterange {
                        private const string URLPATH = "~/Content/js/plugins/pickers/daterange";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string daterangepicker_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/daterangepicker.min.js") ? Url("daterangepicker.min.js") : Url("daterangepicker.js");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class dateTime {
                        private const string URLPATH = "~/Content/js/plugins/pickers/dateTime";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string bootstrap_datetimepicker_min_js = Url("bootstrap-datetimepicker.min.js");
                        public static readonly string moment_with_locales_min_js = Url("moment-with-locales.min.js");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class miniColors {
                        private const string URLPATH = "~/Content/js/plugins/pickers/miniColors";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string jquery_minicolors_min_js = Url("jquery.minicolors.min.js");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class pickadate {
                        private const string URLPATH = "~/Content/js/plugins/pickers/pickadate";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string legacy_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/legacy.min.js") ? Url("legacy.min.js") : Url("legacy.js");
                        public static readonly string picker_date_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/picker.date.min.js") ? Url("picker.date.min.js") : Url("picker.date.js");
                        public static readonly string picker_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/picker.min.js") ? Url("picker.min.js") : Url("picker.js");
                        public static readonly string picker_time_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/picker.time.min.js") ? Url("picker.time.min.js") : Url("picker.time.js");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class spectrum {
                        private const string URLPATH = "~/Content/js/plugins/pickers/spectrum";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string spectrum_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/spectrum.min.js") ? Url("spectrum.min.js") : Url("spectrum.js");
                    }
                
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class tables {
                    private const string URLPATH = "~/Content/js/plugins/tables";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string buttons_colVis_min_js = Url("buttons.colVis.min.js");
                    public static readonly string buttons_flash_min_js = Url("buttons.flash.min.js");
                    public static readonly string buttons_html5_min_js = Url("buttons.html5.min.js");
                    public static readonly string buttons_print_min_js = Url("buttons.print.min.js");
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class datatable {
                        private const string URLPATH = "~/Content/js/plugins/tables/datatable";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string buttons_bootstrap4_min_js = Url("buttons.bootstrap4.min.js");
                        public static readonly string dataTables_autoFill_min_js = Url("dataTables.autoFill.min.js");
                        public static readonly string dataTables_bootstrap4_min_js = Url("dataTables.bootstrap4.min.js");
                        public static readonly string dataTables_buttons_min_js = Url("dataTables.buttons.min.js");
                        public static readonly string dataTables_colReorder_min_js = Url("dataTables.colReorder.min.js");
                        public static readonly string dataTables_colVis_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/dataTables.colVis.min.js") ? Url("dataTables.colVis.min.js") : Url("dataTables.colVis.js");
                        public static readonly string dataTables_fixedColumns_min_js = Url("dataTables.fixedColumns.min.js");
                        public static readonly string dataTables_fixedHeader_min_js = Url("dataTables.fixedHeader.min.js");
                        public static readonly string dataTables_keyTable_min_js = Url("dataTables.keyTable.min.js");
                        public static readonly string dataTables_persian_txt = Url("dataTables.persian.txt");
                        public static readonly string dataTables_responsive_min_js = Url("dataTables.responsive.min.js");
                        public static readonly string dataTables_rowReorder_min_js = Url("dataTables.rowReorder.min.js");
                        public static readonly string dataTables_select_min_js = Url("dataTables.select.min.js");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class handsontable {
                        private const string URLPATH = "~/Content/js/plugins/tables/handsontable";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string chroma_min_js = Url("chroma.min.js");
                        public static readonly string handsontable_full_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/handsontable.full.min.js") ? Url("handsontable.full.min.js") : Url("handsontable.full.js");
                        public static readonly string jsgrid_min_js = Url("jsgrid.min.js");
                        public static readonly string languages_min_js = Url("languages.min.js");
                    }
                
                    public static readonly string jquery_dataTables_min_js = Url("jquery.dataTables.min.js");
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class jsgrid {
                        private const string URLPATH = "~/Content/js/plugins/tables/jsgrid";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string griddata_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/griddata.min.js") ? Url("griddata.min.js") : Url("griddata.js");
                        public static readonly string jquery_validate_min_js = Url("jquery.validate.min.js");
                        public static readonly string jsgrid_min_js = Url("jsgrid.min.js");
                    }
                
                    public static readonly string jszip_min_js = Url("jszip.min.js");
                    public static readonly string pdfmake_min_js = Url("pdfmake.min.js");
                    public static readonly string vfs_fonts_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/vfs_fonts.min.js") ? Url("vfs_fonts.min.js") : Url("vfs_fonts.js");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class timeline {
                    private const string URLPATH = "~/Content/js/plugins/timeline";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string horizontal_timeline_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/horizontal-timeline.min.js") ? Url("horizontal-timeline.min.js") : Url("horizontal-timeline.js");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class ui {
                    private const string URLPATH = "~/Content/js/plugins/ui";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string headroom_min_js = Url("headroom.min.js");
                    public static readonly string jquery_ui_slider_pips_min_js = Url("jquery-ui-slider-pips.min.js");
                    public static readonly string jquery_sticky_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.sticky.min.js") ? Url("jquery.sticky.min.js") : Url("jquery.sticky.js");
                    public static readonly string prism_min_js = Url("prism.min.js");
                }
            
            }
        
            public static readonly string vendors_min_js = Url("vendors.min.js");
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class old {
            private const string URLPATH = "~/Content/old";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class css {
                private const string URLPATH = "~/Content/old/css";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string animate_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/animate.min.css") ? Url("animate.min.css") : Url("animate.css");
                public static readonly string bootstrap_select_min_css = Url("bootstrap-select.min.css");
                public static readonly string bootstrap_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap.min.css") ? Url("bootstrap.min.css") : Url("bootstrap.css");
                public static readonly string bootstrap_min_css = Url("bootstrap.min.css");
                public static readonly string bootstrap_rtl_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap.rtl.min.css") ? Url("bootstrap.rtl.min.css") : Url("bootstrap.rtl.css");
                public static readonly string bootstrap_rtl_min_css = Url("bootstrap.rtl.min.css");
                public static readonly string fileinput_min_css = Url("fileinput.min.css");
                public static readonly string PagedList_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/PagedList.min.css") ? Url("PagedList.min.css") : Url("PagedList.css");
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class patterns {
                    private const string URLPATH = "~/Content/old/css/patterns";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string header_profile_skin_1_png = Url("header-profile-skin-1.png");
                    public static readonly string header_profile_skin_2_png = Url("header-profile-skin-2.png");
                    public static readonly string header_profile_skin_3_png = Url("header-profile-skin-3.png");
                    public static readonly string header_profile_png = Url("header-profile.png");
                    public static readonly string shattered_png = Url("shattered.png");
                }
            
                public static readonly string PersianDatePicker_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/PersianDatePicker.min.css") ? Url("PersianDatePicker.min.css") : Url("PersianDatePicker.css");
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class plugins {
                    private const string URLPATH = "~/Content/old/css/plugins";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class awesome_bootstrap_checkbox {
                        private const string URLPATH = "~/Content/old/css/plugins/awesome-bootstrap-checkbox";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string awesome_bootstrap_checkbox_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/awesome-bootstrap-checkbox.min.css") ? Url("awesome-bootstrap-checkbox.min.css") : Url("awesome-bootstrap-checkbox.css");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class blueimp {
                        private const string URLPATH = "~/Content/old/css/plugins/blueimp";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class css {
                            private const string URLPATH = "~/Content/old/css/plugins/blueimp/css";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string blueimp_gallery_min_css = Url("blueimp-gallery.min.css");
                        }
                    
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class img {
                            private const string URLPATH = "~/Content/old/css/plugins/blueimp/img";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string error_png = Url("error.png");
                            public static readonly string error_svg = Url("error.svg");
                            public static readonly string loading_gif = Url("loading.gif");
                            public static readonly string play_pause_png = Url("play-pause.png");
                            public static readonly string play_pause_svg = Url("play-pause.svg");
                            public static readonly string video_play_png = Url("video-play.png");
                            public static readonly string video_play_svg = Url("video-play.svg");
                        }
                    
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class chartist {
                        private const string URLPATH = "~/Content/old/css/plugins/chartist";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string chartist_min_css = Url("chartist.min.css");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class chosen {
                        private const string URLPATH = "~/Content/old/css/plugins/chosen";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string chosen_sprite_png = Url("chosen-sprite.png");
                        public static readonly string chosen_sprite_2x_png = Url("chosen-sprite@2x.png");
                        public static readonly string chosen_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/chosen.min.css") ? Url("chosen.min.css") : Url("chosen.css");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class clockpicker {
                        private const string URLPATH = "~/Content/old/css/plugins/clockpicker";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string clockpicker_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/clockpicker.min.css") ? Url("clockpicker.min.css") : Url("clockpicker.css");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class codemirror {
                        private const string URLPATH = "~/Content/old/css/plugins/codemirror";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string ambiance_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ambiance.min.css") ? Url("ambiance.min.css") : Url("ambiance.css");
                        public static readonly string codemirror_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/codemirror.min.css") ? Url("codemirror.min.css") : Url("codemirror.css");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class colorpicker {
                        private const string URLPATH = "~/Content/old/css/plugins/colorpicker";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string bootstrap_colorpicker_min_css = Url("bootstrap-colorpicker.min.css");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class cropper {
                        private const string URLPATH = "~/Content/old/css/plugins/cropper";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string cropper_min_css = Url("cropper.min.css");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class dataTables {
                        private const string URLPATH = "~/Content/old/css/plugins/dataTables";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string dataTables_bootstrap_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/dataTables.bootstrap.min.css") ? Url("dataTables.bootstrap.min.css") : Url("dataTables.bootstrap.css");
                        public static readonly string dataTables_responsive_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/dataTables.responsive.min.css") ? Url("dataTables.responsive.min.css") : Url("dataTables.responsive.css");
                        public static readonly string dataTables_tableTools_min_css = Url("dataTables.tableTools.min.css");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class daterangepicker {
                        private const string URLPATH = "~/Content/old/css/plugins/daterangepicker";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string daterangepicker_bs3_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/daterangepicker-bs3.min.css") ? Url("daterangepicker-bs3.min.css") : Url("daterangepicker-bs3.css");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class dropzone {
                        private const string URLPATH = "~/Content/old/css/plugins/dropzone";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string basic_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/basic.min.css") ? Url("basic.min.css") : Url("basic.css");
                        public static readonly string dropzone_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/dropzone.min.css") ? Url("dropzone.min.css") : Url("dropzone.css");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class fonts {
                        private const string URLPATH = "~/Content/old/css/plugins/fonts";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string glyphicons_halflings_regular_2_html = Url("glyphicons-halflings-regular-2.html");
                        public static readonly string glyphicons_halflings_regular_3_html = Url("glyphicons-halflings-regular-3.html");
                        public static readonly string glyphicons_halflings_regular_4_html = Url("glyphicons-halflings-regular-4.html");
                        public static readonly string glyphicons_halflings_regular_html = Url("glyphicons-halflings-regular.html");
                        public static readonly string glyphicons_halflings_regulard41d_html = Url("glyphicons-halflings-regulard41d.html");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class footable {
                        private const string URLPATH = "~/Content/old/css/plugins/footable";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class fonts {
                            private const string URLPATH = "~/Content/old/css/plugins/footable/fonts";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string footable_eot = Url("footable.eot");
                            public static readonly string footable_svg = Url("footable.svg");
                            public static readonly string footable_ttf = Url("footable.ttf");
                            public static readonly string footable_woff = Url("footable.woff");
                            public static readonly string footabled41d_eot = Url("footabled41d.eot");
                        }
                    
                        public static readonly string footable_core_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/footable.core.min.css") ? Url("footable.core.min.css") : Url("footable.core.css");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class fullcalendar {
                        private const string URLPATH = "~/Content/old/css/plugins/fullcalendar";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string fullcalendar_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/fullcalendar.min.css") ? Url("fullcalendar.min.css") : Url("fullcalendar.css");
                        public static readonly string fullcalendar_print_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/fullcalendar.print.min.css") ? Url("fullcalendar.print.min.css") : Url("fullcalendar.print.css");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class iCheck {
                        private const string URLPATH = "~/Content/old/css/plugins/iCheck";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string custom_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/custom.min.css") ? Url("custom.min.css") : Url("custom.css");
                        public static readonly string green_png = Url("green.png");
                        public static readonly string green_2x_png = Url("green@2x.png");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class images {
                        private const string URLPATH = "~/Content/old/css/plugins/images";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string background_html = Url("background.html");
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class bootstrap_colorpicker {
                            private const string URLPATH = "~/Content/old/css/plugins/images/bootstrap-colorpicker";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string alpha_horizontal_png = Url("alpha-horizontal.png");
                            public static readonly string alpha_png = Url("alpha.png");
                            public static readonly string hue_horizontal_png = Url("hue-horizontal.png");
                            public static readonly string hue_png = Url("hue.png");
                            public static readonly string saturation_png = Url("saturation.png");
                        }
                    
                        public static readonly string collection_html = Url("collection.html");
                        public static readonly string collection_hover_html = Url("collection_hover.html");
                        public static readonly string sort_asc_png = Url("sort_asc.png");
                        public static readonly string sort_asc_disabled_html = Url("sort_asc_disabled.html");
                        public static readonly string sort_both_html = Url("sort_both.html");
                        public static readonly string sort_desc_png = Url("sort_desc.png");
                        public static readonly string sort_desc_disabled_html = Url("sort_desc_disabled.html");
                        public static readonly string sprite_skin_flat_png = Url("sprite-skin-flat.png");
                        public static readonly string spritemap_png = Url("spritemap.png");
                        public static readonly string spritemap_2x_png = Url("spritemap@2x.png");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class ionRangeSlider {
                        private const string URLPATH = "~/Content/old/css/plugins/ionRangeSlider";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string ion_rangeSlider_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ion.rangeSlider.min.css") ? Url("ion.rangeSlider.min.css") : Url("ion.rangeSlider.css");
                        public static readonly string ion_rangeSlider_skinFlat_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ion.rangeSlider.skinFlat.min.css") ? Url("ion.rangeSlider.skinFlat.min.css") : Url("ion.rangeSlider.skinFlat.css");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class jasny {
                        private const string URLPATH = "~/Content/old/css/plugins/jasny";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string jasny_bootstrap_min_css = Url("jasny-bootstrap.min.css");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class jqGrid {
                        private const string URLPATH = "~/Content/old/css/plugins/jqGrid";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string ui_jqgrid_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ui.jqgrid.min.css") ? Url("ui.jqgrid.min.css") : Url("ui.jqgrid.css");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class jQueryUI {
                        private const string URLPATH = "~/Content/old/css/plugins/jQueryUI";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class images {
                            private const string URLPATH = "~/Content/old/css/plugins/jQueryUI/images";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string ui_bg_flat_0_aaaaaa_40x100_png = Url("ui-bg_flat_0_aaaaaa_40x100.png");
                            public static readonly string ui_bg_flat_75_ffffff_40x100_png = Url("ui-bg_flat_75_ffffff_40x100.png");
                            public static readonly string ui_bg_glass_55_fbf9ee_1x400_png = Url("ui-bg_glass_55_fbf9ee_1x400.png");
                            public static readonly string ui_bg_glass_65_ffffff_1x400_png = Url("ui-bg_glass_65_ffffff_1x400.png");
                            public static readonly string ui_bg_glass_75_dadada_1x400_png = Url("ui-bg_glass_75_dadada_1x400.png");
                            public static readonly string ui_bg_glass_75_e6e6e6_1x400_png = Url("ui-bg_glass_75_e6e6e6_1x400.png");
                            public static readonly string ui_bg_glass_95_fef1ec_1x400_png = Url("ui-bg_glass_95_fef1ec_1x400.png");
                            public static readonly string ui_bg_highlight_soft_75_cccccc_1x100_png = Url("ui-bg_highlight-soft_75_cccccc_1x100.png");
                            public static readonly string ui_icons_222222_256x240_png = Url("ui-icons_222222_256x240.png");
                            public static readonly string ui_icons_2e83ff_256x240_png = Url("ui-icons_2e83ff_256x240.png");
                            public static readonly string ui_icons_454545_256x240_png = Url("ui-icons_454545_256x240.png");
                            public static readonly string ui_icons_888888_256x240_png = Url("ui-icons_888888_256x240.png");
                            public static readonly string ui_icons_cd0a0a_256x240_png = Url("ui-icons_cd0a0a_256x240.png");
                        }
                    
                        public static readonly string jquery_ui_1_10_4_custom_min_css = Url("jquery-ui-1.10.4.custom.min.css");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class jsTree {
                        private const string URLPATH = "~/Content/old/css/plugins/jsTree";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string style_min_css = Url("style.min.css");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class morris {
                        private const string URLPATH = "~/Content/old/css/plugins/morris";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string morris_0_4_3_min_css = Url("morris-0.4.3.min.css");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class nouslider {
                        private const string URLPATH = "~/Content/old/css/plugins/nouslider";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string jquery_nouislider_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.nouislider.min.css") ? Url("jquery.nouislider.min.css") : Url("jquery.nouislider.css");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class persian_datepicker {
                        private const string URLPATH = "~/Content/old/css/plugins/persian-datepicker";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string persian_datepicker_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/persian-datepicker.min.css") ? Url("persian-datepicker.min.css") : Url("persian-datepicker.css");
                        public static readonly string persian_datepicker_min_css = Url("persian-datepicker.min.css");
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class theme {
                            private const string URLPATH = "~/Content/old/css/plugins/persian-datepicker/theme";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string persian_datepicker_blue_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/persian-datepicker-blue.min.css") ? Url("persian-datepicker-blue.min.css") : Url("persian-datepicker-blue.css");
                            public static readonly string persian_datepicker_cheerup_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/persian-datepicker-cheerup.min.css") ? Url("persian-datepicker-cheerup.min.css") : Url("persian-datepicker-cheerup.css");
                            public static readonly string persian_datepicker_dark_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/persian-datepicker-dark.min.css") ? Url("persian-datepicker-dark.min.css") : Url("persian-datepicker-dark.css");
                            public static readonly string persian_datepicker_redblack_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/persian-datepicker-redblack.min.css") ? Url("persian-datepicker-redblack.min.css") : Url("persian-datepicker-redblack.css");
                        }
                    
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class steps {
                        private const string URLPATH = "~/Content/old/css/plugins/steps";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string jquery_steps_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.steps.min.css") ? Url("jquery.steps.min.css") : Url("jquery.steps.css");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class summernote {
                        private const string URLPATH = "~/Content/old/css/plugins/summernote";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string summernote_bs3_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/summernote-bs3.min.css") ? Url("summernote-bs3.min.css") : Url("summernote-bs3.css");
                        public static readonly string summernote_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/summernote.min.css") ? Url("summernote.min.css") : Url("summernote.css");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class sweetalert {
                        private const string URLPATH = "~/Content/old/css/plugins/sweetalert";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string sweetalert_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/sweetalert.min.css") ? Url("sweetalert.min.css") : Url("sweetalert.css");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class switchery {
                        private const string URLPATH = "~/Content/old/css/plugins/switchery";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string switchery_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/switchery.min.css") ? Url("switchery.min.css") : Url("switchery.css");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class toastr {
                        private const string URLPATH = "~/Content/old/css/plugins/toastr";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string toastr_min_css = Url("toastr.min.css");
                    }
                
                }
            
                public static readonly string style_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/style.min.css") ? Url("style.min.css") : Url("style.css");
                public static readonly string style_rtl_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/style.rtl.min.css") ? Url("style.rtl.min.css") : Url("style.rtl.css");
                public static readonly string sweet_alert_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/sweet-alert.min.css") ? Url("sweet-alert.min.css") : Url("sweet-alert.css");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class font_awesome {
                private const string URLPATH = "~/Content/old/font-awesome";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class css {
                    private const string URLPATH = "~/Content/old/font-awesome/css";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string font_awesome_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/font-awesome.min.css") ? Url("font-awesome.min.css") : Url("font-awesome.css");
                    public static readonly string font_awesome_min_css = Url("font-awesome.min.css");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class fonts {
                    private const string URLPATH = "~/Content/old/font-awesome/fonts";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string fontawesome_webfontd41d_eot = Url("fontawesome-webfontd41d.eot");
                    public static readonly string fontawesome_webfonte0a5_eot = Url("fontawesome-webfonte0a5.eot");
                    public static readonly string fontawesome_webfonte0a5_svg = Url("fontawesome-webfonte0a5.svg");
                    public static readonly string fontawesome_webfonte0a5_ttf = Url("fontawesome-webfonte0a5.ttf");
                    public static readonly string fontawesome_webfonte0a5_woff = Url("fontawesome-webfonte0a5.woff");
                    public static readonly string fontawesome_webfonte0a5_woff2 = Url("fontawesome-webfonte0a5.woff2");
                }
            
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class fonts {
                private const string URLPATH = "~/Content/old/fonts";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class BBCNasim {
                    private const string URLPATH = "~/Content/old/fonts/BBCNasim";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string BBCNasim_eot = Url("BBCNasim.eot");
                    public static readonly string BBCNasim_otf = Url("BBCNasim.otf");
                    public static readonly string BBCNasim_svg = Url("BBCNasim.svg");
                    public static readonly string BBCNasim_ttf = Url("BBCNasim.ttf");
                    public static readonly string BBCNasim_woff = Url("BBCNasim.woff");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class BKoodak {
                    private const string URLPATH = "~/Content/old/fonts/BKoodak";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string BKoodak_eot = Url("BKoodak.eot");
                    public static readonly string BKoodak_otf = Url("BKoodak.otf");
                    public static readonly string BKoodak_svg = Url("BKoodak.svg");
                    public static readonly string BKoodak_ttf = Url("BKoodak.ttf");
                    public static readonly string BKoodak_woff = Url("BKoodak.woff");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class BNazanin {
                    private const string URLPATH = "~/Content/old/fonts/BNazanin";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string BNazanin_eot = Url("BNazanin.eot");
                    public static readonly string BNazanin_otf = Url("BNazanin.otf");
                    public static readonly string BNazanin_svg = Url("BNazanin.svg");
                    public static readonly string BNazanin_ttf = Url("BNazanin.ttf");
                    public static readonly string BNazanin_woff = Url("BNazanin.woff");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class BYekan {
                    private const string URLPATH = "~/Content/old/fonts/BYekan";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string BYekan_eot = Url("BYekan.eot");
                    public static readonly string BYekan_otf = Url("BYekan.otf");
                    public static readonly string BYekan_svg = Url("BYekan.svg");
                    public static readonly string BYekan_ttf = Url("BYekan.ttf");
                    public static readonly string BYekan_woff = Url("BYekan.woff");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class DriodArabicNaskh {
                    private const string URLPATH = "~/Content/old/fonts/DriodArabicNaskh";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class Bold {
                        private const string URLPATH = "~/Content/old/fonts/DriodArabicNaskh/Bold";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string DroidNaskh_Bold_eot = Url("DroidNaskh-Bold.eot");
                        public static readonly string DroidNaskh_Bold_ttf = Url("DroidNaskh-Bold.ttf");
                        public static readonly string DroidNaskh_Bold_woff = Url("DroidNaskh-Bold.woff");
                        public static readonly string DroidNaskh_Bold_woff2 = Url("DroidNaskh-Bold.woff2");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class Regular {
                        private const string URLPATH = "~/Content/old/fonts/DriodArabicNaskh/Regular";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string DroidNaskh_Regular_eot = Url("DroidNaskh-Regular.eot");
                        public static readonly string DroidNaskh_Regular_ttf = Url("DroidNaskh-Regular.ttf");
                        public static readonly string DroidNaskh_Regular_woff = Url("DroidNaskh-Regular.woff");
                        public static readonly string DroidNaskh_Regular_woff2 = Url("DroidNaskh-Regular.woff2");
                    }
                
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class DroidArabicKufi {
                    private const string URLPATH = "~/Content/old/fonts/DroidArabicKufi";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class Bold {
                        private const string URLPATH = "~/Content/old/fonts/DroidArabicKufi/Bold";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string DroidKufi_Bold_eot = Url("DroidKufi-Bold.eot");
                        public static readonly string DroidKufi_Bold_ttf = Url("DroidKufi-Bold.ttf");
                        public static readonly string DroidKufi_Bold_woff = Url("DroidKufi-Bold.woff");
                        public static readonly string DroidKufi_Bold_woff2 = Url("DroidKufi-Bold.woff2");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class Regular {
                        private const string URLPATH = "~/Content/old/fonts/DroidArabicKufi/Regular";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string DroidKufi_Regular_eot = Url("DroidKufi-Regular.eot");
                        public static readonly string DroidKufi_Regular_ttf = Url("DroidKufi-Regular.ttf");
                        public static readonly string DroidKufi_Regular_woff = Url("DroidKufi-Regular.woff");
                        public static readonly string DroidKufi_Regular_woff2 = Url("DroidKufi-Regular.woff2");
                    }
                
                }
            
                public static readonly string glyphicons_halflings_regular_eot = Url("glyphicons-halflings-regular.eot");
                public static readonly string glyphicons_halflings_regular_svg = Url("glyphicons-halflings-regular.svg");
                public static readonly string glyphicons_halflings_regular_ttf = Url("glyphicons-halflings-regular.ttf");
                public static readonly string glyphicons_halflings_regular_woff = Url("glyphicons-halflings-regular.woff");
                public static readonly string glyphicons_halflings_regular_woff2 = Url("glyphicons-halflings-regular.woff2");
                public static readonly string glyphicons_halflings_regulard41d_eot = Url("glyphicons-halflings-regulard41d.eot");
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class IRANSansWeb {
                    private const string URLPATH = "~/Content/old/fonts/IRANSansWeb";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string IRANSansWeb_eot = Url("IRANSansWeb.eot");
                    public static readonly string IRANSansWeb_ttf = Url("IRANSansWeb.ttf");
                    public static readonly string IRANSansWeb_woff = Url("IRANSansWeb.woff");
                }
            
            }
        
            public static readonly string green_png = Url("green.png");
            public static readonly string green_2x_png = Url("green@2x.png");
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class img {
                private const string URLPATH = "~/Content/old/img";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string a1_jpg = Url("a1.jpg");
                public static readonly string a2_jpg = Url("a2.jpg");
                public static readonly string a3_jpg = Url("a3.jpg");
                public static readonly string a4_jpg = Url("a4.jpg");
                public static readonly string a5_jpg = Url("a5.jpg");
                public static readonly string a6_jpg = Url("a6.jpg");
                public static readonly string a7_jpg = Url("a7.jpg");
                public static readonly string a8_jpg = Url("a8.jpg");
                public static readonly string angular_logo_png = Url("angular_logo.png");
                public static readonly string dashbard4_1_jpg = Url("dashbard4_1.jpg");
                public static readonly string dashbard4_2_jpg = Url("dashbard4_2.jpg");
                public static readonly string email_1_jpg = Url("email_1.jpg");
                public static readonly string email_2_jpg = Url("email_2.jpg");
                public static readonly string email_3_jpg = Url("email_3.jpg");
                public static readonly string full_height_jpg = Url("full_height.jpg");
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class gallery {
                    private const string URLPATH = "~/Content/old/img/gallery";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string _1_jpg = Url("1.jpg");
                    public static readonly string _10_jpg = Url("10.jpg");
                    public static readonly string _10s_jpg = Url("10s.jpg");
                    public static readonly string _11_jpg = Url("11.jpg");
                    public static readonly string _11s_jpg = Url("11s.jpg");
                    public static readonly string _12_jpg = Url("12.jpg");
                    public static readonly string _12s_jpg = Url("12s.jpg");
                    public static readonly string _1s_jpg = Url("1s.jpg");
                    public static readonly string _2_jpg = Url("2.jpg");
                    public static readonly string _2s_jpg = Url("2s.jpg");
                    public static readonly string _3_jpg = Url("3.jpg");
                    public static readonly string _3s_jpg = Url("3s.jpg");
                    public static readonly string _4_jpg = Url("4.jpg");
                    public static readonly string _4s_jpg = Url("4s.jpg");
                    public static readonly string _5_jpg = Url("5.jpg");
                    public static readonly string _5s_jpg = Url("5s.jpg");
                    public static readonly string _6_jpg = Url("6.jpg");
                    public static readonly string _6s_jpg = Url("6s.jpg");
                    public static readonly string _7_jpg = Url("7.jpg");
                    public static readonly string _7s_jpg = Url("7s.jpg");
                    public static readonly string _8_jpg = Url("8.jpg");
                    public static readonly string _8s_jpg = Url("8s.jpg");
                    public static readonly string _9_jpg = Url("9.jpg");
                    public static readonly string _9s_jpg = Url("9s.jpg");
                }
            
                public static readonly string html_logo_png = Url("html_logo.png");
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class landing {
                    private const string URLPATH = "~/Content/old/img/landing";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string avatar_all_png = Url("avatar_all.png");
                    public static readonly string avatar1_jpg = Url("avatar1.jpg");
                    public static readonly string avatar2_jpg = Url("avatar2.jpg");
                    public static readonly string avatar3_jpg = Url("avatar3.jpg");
                    public static readonly string dashboard_png = Url("dashboard.png");
                    public static readonly string header_one_jpg = Url("header_one.jpg");
                    public static readonly string header_two_jpg = Url("header_two.jpg");
                    public static readonly string iphone_jpg = Url("iphone.jpg");
                    public static readonly string laptop_png = Url("laptop.png");
                    public static readonly string perspective_png = Url("perspective.png");
                    public static readonly string word_map_png = Url("word_map.png");
                }
            
                public static readonly string meteor_logo_png = Url("meteor_logo.png");
                public static readonly string mvc_logo_png = Url("mvc_logo.png");
                public static readonly string off_canvas_jpg = Url("off_canvas.jpg");
                public static readonly string p_big1_jpg = Url("p_big1.jpg");
                public static readonly string p_big2_jpg = Url("p_big2.jpg");
                public static readonly string p_big3_jpg = Url("p_big3.jpg");
                public static readonly string p1_jpg = Url("p1.jpg");
                public static readonly string p2_jpg = Url("p2.jpg");
                public static readonly string p3_jpg = Url("p3.jpg");
                public static readonly string profile_jpg = Url("profile.jpg");
                public static readonly string profile_big_jpg = Url("profile_big.jpg");
                public static readonly string profile_small_jpg = Url("profile_small.jpg");
                public static readonly string rails_logo_png = Url("rails_logo.png");
                public static readonly string zender_logo_png = Url("zender_logo.png");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class js {
                private const string URLPATH = "~/Content/old/js";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string bootstrap_select_min_js = Url("bootstrap-select.min.js");
                public static readonly string bootstrap_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap.min.js") ? Url("bootstrap.min.js") : Url("bootstrap.js");
                public static readonly string bootstrap_min_js = Url("bootstrap.min.js");
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class demo {
                    private const string URLPATH = "~/Content/old/js/demo";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string chartjs_demo_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/chartjs-demo.min.js") ? Url("chartjs-demo.min.js") : Url("chartjs-demo.js");
                    public static readonly string flot_demo_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/flot-demo.min.js") ? Url("flot-demo.min.js") : Url("flot-demo.js");
                    public static readonly string morris_demo_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/morris-demo.min.js") ? Url("morris-demo.min.js") : Url("morris-demo.js");
                    public static readonly string peity_demo_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/peity-demo.min.js") ? Url("peity-demo.min.js") : Url("peity-demo.js");
                    public static readonly string rickshaw_demo_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/rickshaw-demo.min.js") ? Url("rickshaw-demo.min.js") : Url("rickshaw-demo.js");
                    public static readonly string sparkline_demo_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/sparkline-demo.min.js") ? Url("sparkline-demo.min.js") : Url("sparkline-demo.js");
                }
            
                public static readonly string jquery_2_1_1_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery-2.1.1.min.js") ? Url("jquery-2.1.1.min.js") : Url("jquery-2.1.1.js");
                public static readonly string jquery_ui_1_10_4_min_js = Url("jquery-ui-1.10.4.min.js");
                public static readonly string jquery_ui_custom_min_js = Url("jquery-ui.custom.min.js");
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class plugins {
                    private const string URLPATH = "~/Content/old/js/plugins";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class blueimp {
                        private const string URLPATH = "~/Content/old/js/plugins/blueimp";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string jquery_blueimp_gallery_min_js = Url("jquery.blueimp-gallery.min.js");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class chartist {
                        private const string URLPATH = "~/Content/old/js/plugins/chartist";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string chartist_min_js = Url("chartist.min.js");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class chartJs {
                        private const string URLPATH = "~/Content/old/js/plugins/chartJs";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string Chart_min_js = Url("Chart.min.js");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class chosen {
                        private const string URLPATH = "~/Content/old/js/plugins/chosen";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string chosen_jquery_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/chosen.jquery.min.js") ? Url("chosen.jquery.min.js") : Url("chosen.jquery.js");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class clockpicker {
                        private const string URLPATH = "~/Content/old/js/plugins/clockpicker";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string clockpicker_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/clockpicker.min.js") ? Url("clockpicker.min.js") : Url("clockpicker.js");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class codemirror {
                        private const string URLPATH = "~/Content/old/js/plugins/codemirror";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string codemirror_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/codemirror.min.js") ? Url("codemirror.min.js") : Url("codemirror.js");
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class mode {
                            private const string URLPATH = "~/Content/old/js/plugins/codemirror/mode";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                            public static class javascript {
                                private const string URLPATH = "~/Content/old/js/plugins/codemirror/mode/javascript";
                                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                                public static readonly string javascript_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/javascript.min.js") ? Url("javascript.min.js") : Url("javascript.js");
                            }
                        
                        }
                    
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class colorpicker {
                        private const string URLPATH = "~/Content/old/js/plugins/colorpicker";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string bootstrap_colorpicker_min_js = Url("bootstrap-colorpicker.min.js");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class cropper {
                        private const string URLPATH = "~/Content/old/js/plugins/cropper";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string cropper_min_js = Url("cropper.min.js");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class dataTables {
                        private const string URLPATH = "~/Content/old/js/plugins/dataTables";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string dataTables_bootstrap_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/dataTables.bootstrap.min.js") ? Url("dataTables.bootstrap.min.js") : Url("dataTables.bootstrap.js");
                        public static readonly string dataTables_responsive_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/dataTables.responsive.min.js") ? Url("dataTables.responsive.min.js") : Url("dataTables.responsive.js");
                        public static readonly string dataTables_tableTools_min_js = Url("dataTables.tableTools.min.js");
                        public static readonly string jquery_dataTables_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.dataTables.min.js") ? Url("jquery.dataTables.min.js") : Url("jquery.dataTables.js");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class daterangepicker {
                        private const string URLPATH = "~/Content/old/js/plugins/daterangepicker";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string daterangepicker_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/daterangepicker.min.js") ? Url("daterangepicker.min.js") : Url("daterangepicker.js");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class diff_match_patch {
                        private const string URLPATH = "~/Content/old/js/plugins/diff_match_patch";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class javascript {
                            private const string URLPATH = "~/Content/old/js/plugins/diff_match_patch/javascript";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string diff_match_patch_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/diff_match_patch.min.js") ? Url("diff_match_patch.min.js") : Url("diff_match_patch.js");
                        }
                    
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class dropzone {
                        private const string URLPATH = "~/Content/old/js/plugins/dropzone";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string dropzone_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/dropzone.min.js") ? Url("dropzone.min.js") : Url("dropzone.js");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class easypiechart {
                        private const string URLPATH = "~/Content/old/js/plugins/easypiechart";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string jquery_easypiechart_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.easypiechart.min.js") ? Url("jquery.easypiechart.min.js") : Url("jquery.easypiechart.js");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class flot {
                        private const string URLPATH = "~/Content/old/js/plugins/flot";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string curvedLines_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/curvedLines.min.js") ? Url("curvedLines.min.js") : Url("curvedLines.js");
                        public static readonly string jquery_flot_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.flot.min.js") ? Url("jquery.flot.min.js") : Url("jquery.flot.js");
                        public static readonly string jquery_flot_pie_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.flot.pie.min.js") ? Url("jquery.flot.pie.min.js") : Url("jquery.flot.pie.js");
                        public static readonly string jquery_flot_resize_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.flot.resize.min.js") ? Url("jquery.flot.resize.min.js") : Url("jquery.flot.resize.js");
                        public static readonly string jquery_flot_spline_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.flot.spline.min.js") ? Url("jquery.flot.spline.min.js") : Url("jquery.flot.spline.js");
                        public static readonly string jquery_flot_symbol_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.flot.symbol.min.js") ? Url("jquery.flot.symbol.min.js") : Url("jquery.flot.symbol.js");
                        public static readonly string jquery_flot_time_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.flot.time.min.js") ? Url("jquery.flot.time.min.js") : Url("jquery.flot.time.js");
                        public static readonly string jquery_flot_tooltip_min_js = Url("jquery.flot.tooltip.min.js");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class footable {
                        private const string URLPATH = "~/Content/old/js/plugins/footable";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string footable_all_min_js = Url("footable.all.min.js");
                        public static readonly string footable_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/footable.min.js") ? Url("footable.min.js") : Url("footable.js");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class fullcalendar {
                        private const string URLPATH = "~/Content/old/js/plugins/fullcalendar";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string fullcalendar_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/fullcalendar.min.js") ? Url("fullcalendar.min.js") : Url("fullcalendar.js");
                        public static readonly string fullcalendar_min_js = Url("fullcalendar.min.js");
                        public static readonly string moment_min_js = Url("moment.min.js");
                        public static readonly string pwt_date_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/pwt-date.min.js") ? Url("pwt-date.min.js") : Url("pwt-date.js");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class gritter {
                        private const string URLPATH = "~/Content/old/js/plugins/gritter";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class images {
                            private const string URLPATH = "~/Content/old/js/plugins/gritter/images";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string gritter_light_png = Url("gritter-light.png");
                            public static readonly string gritter_png = Url("gritter.png");
                            public static readonly string ie_spacer_gif = Url("ie-spacer.gif");
                        }
                    
                        public static readonly string jquery_gritter_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.gritter.min.css") ? Url("jquery.gritter.min.css") : Url("jquery.gritter.css");
                        public static readonly string jquery_gritter_min_js = Url("jquery.gritter.min.js");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class iCheck {
                        private const string URLPATH = "~/Content/old/js/plugins/iCheck";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string icheck_min_js = Url("icheck.min.js");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class idle_timer {
                        private const string URLPATH = "~/Content/old/js/plugins/idle-timer";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string idle_timer_min_js = Url("idle-timer.min.js");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class ionRangeSlider {
                        private const string URLPATH = "~/Content/old/js/plugins/ionRangeSlider";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string ion_rangeSlider_min_js = Url("ion.rangeSlider.min.js");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class jasny {
                        private const string URLPATH = "~/Content/old/js/plugins/jasny";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string jasny_bootstrap_min_js = Url("jasny-bootstrap.min.js");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class jeditable {
                        private const string URLPATH = "~/Content/old/js/plugins/jeditable";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string jquery_jeditable_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.jeditable.min.js") ? Url("jquery.jeditable.min.js") : Url("jquery.jeditable.js");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class jqGrid {
                        private const string URLPATH = "~/Content/old/js/plugins/jqGrid";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class i18n {
                            private const string URLPATH = "~/Content/old/js/plugins/jqGrid/i18n";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string grid_locale_en_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/grid.locale-en.min.js") ? Url("grid.locale-en.min.js") : Url("grid.locale-en.js");
                        }
                    
                        public static readonly string jquery_jqGrid_min_js = Url("jquery.jqGrid.min.js");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class jquery_ui {
                        private const string URLPATH = "~/Content/old/js/plugins/jquery-ui";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string jquery_ui_min_js = Url("jquery-ui.min.js");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class jsKnob {
                        private const string URLPATH = "~/Content/old/js/plugins/jsKnob";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string jquery_knob_rtl_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.knob-rtl.min.js") ? Url("jquery.knob-rtl.min.js") : Url("jquery.knob-rtl.js");
                        public static readonly string jquery_knob_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.knob.min.js") ? Url("jquery.knob.min.js") : Url("jquery.knob.js");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class jsTree {
                        private const string URLPATH = "~/Content/old/js/plugins/jsTree";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string jstree_min_js = Url("jstree.min.js");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class jvectormap {
                        private const string URLPATH = "~/Content/old/js/plugins/jvectormap";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string jquery_jvectormap_2_0_2_min_js = Url("jquery-jvectormap-2.0.2.min.js");
                        public static readonly string jquery_jvectormap_world_mill_en_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery-jvectormap-world-mill-en.min.js") ? Url("jquery-jvectormap-world-mill-en.min.js") : Url("jquery-jvectormap-world-mill-en.js");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class metisMenu {
                        private const string URLPATH = "~/Content/old/js/plugins/metisMenu";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string jquery_metisMenu_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.metisMenu.min.js") ? Url("jquery.metisMenu.min.js") : Url("jquery.metisMenu.js");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class morris {
                        private const string URLPATH = "~/Content/old/js/plugins/morris";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string morris_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/morris.min.js") ? Url("morris.min.js") : Url("morris.js");
                        public static readonly string raphael_2_1_0_min_js = Url("raphael-2.1.0.min.js");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class nestable {
                        private const string URLPATH = "~/Content/old/js/plugins/nestable";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string jquery_nestable_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.nestable.min.js") ? Url("jquery.nestable.min.js") : Url("jquery.nestable.js");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class nouslider {
                        private const string URLPATH = "~/Content/old/js/plugins/nouslider";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string jquery_nouislider_min_js = Url("jquery.nouislider.min.js");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class pace {
                        private const string URLPATH = "~/Content/old/js/plugins/pace";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string pace_min_js = Url("pace.min.js");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class peity {
                        private const string URLPATH = "~/Content/old/js/plugins/peity";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string jquery_peity_min_js = Url("jquery.peity.min.js");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class persian_datepicker {
                        private const string URLPATH = "~/Content/old/js/plugins/persian-datepicker";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string persian_date_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/persian-date.min.js") ? Url("persian-date.min.js") : Url("persian-date.js");
                        public static readonly string persian_datepicker_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/persian-datepicker.min.js") ? Url("persian-datepicker.min.js") : Url("persian-datepicker.js");
                        public static readonly string persian_datepicker_min_js = Url("persian-datepicker.min.js");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class preetyTextDiff {
                        private const string URLPATH = "~/Content/old/js/plugins/preetyTextDiff";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string jquery_pretty_text_diff_min_js = Url("jquery.pretty-text-diff.min.js");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class rickshaw {
                        private const string URLPATH = "~/Content/old/js/plugins/rickshaw";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string rickshaw_min_js = Url("rickshaw.min.js");
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class vendor {
                            private const string URLPATH = "~/Content/old/js/plugins/rickshaw/vendor";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string d3_v3_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/d3.v3.min.js") ? Url("d3.v3.min.js") : Url("d3.v3.js");
                        }
                    
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class slimscroll {
                        private const string URLPATH = "~/Content/old/js/plugins/slimscroll";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string jquery_slimscroll_min_js = Url("jquery.slimscroll.min.js");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class sparkline {
                        private const string URLPATH = "~/Content/old/js/plugins/sparkline";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string jquery_sparkline_min_js = Url("jquery.sparkline.min.js");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class staps {
                        private const string URLPATH = "~/Content/old/js/plugins/staps";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string jquery_steps_min_js = Url("jquery.steps.min.js");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class summernote {
                        private const string URLPATH = "~/Content/old/js/plugins/summernote";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string summernote_min_js = Url("summernote.min.js");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class sweetalert {
                        private const string URLPATH = "~/Content/old/js/plugins/sweetalert";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string sweetalert_min_js = Url("sweetalert.min.js");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class switchery {
                        private const string URLPATH = "~/Content/old/js/plugins/switchery";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string switchery_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/switchery.min.js") ? Url("switchery.min.js") : Url("switchery.js");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class tinycon {
                        private const string URLPATH = "~/Content/old/js/plugins/tinycon";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string tinycon_min_js = Url("tinycon.min.js");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class toastr {
                        private const string URLPATH = "~/Content/old/js/plugins/toastr";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string toastr_min_js = Url("toastr.min.js");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class validate {
                        private const string URLPATH = "~/Content/old/js/plugins/validate";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string jquery_validate_min_js = Url("jquery.validate.min.js");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class video {
                        private const string URLPATH = "~/Content/old/js/plugins/video";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string responsible_video_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/responsible-video.min.js") ? Url("responsible-video.min.js") : Url("responsible-video.js");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class wow {
                        private const string URLPATH = "~/Content/old/js/plugins/wow";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string wow_min_js = Url("wow.min.js");
                    }
                
                }
            
                public static readonly string rada_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/rada.min.js") ? Url("rada.min.js") : Url("rada.js");
            }
        
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class scss {
            private const string URLPATH = "~/Content/scss";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class components {
                private const string URLPATH = "~/Content/scss/components";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class tables {
                    private const string URLPATH = "~/Content/scss/components/tables";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string handsontable_scss = Url("handsontable.scss");
                }
            
            }
        
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class Upload {
            private const string URLPATH = "~/Content/Upload";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class Image {
                private const string URLPATH = "~/Content/Upload/Image";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class Avatar {
                    private const string URLPATH = "~/Content/Upload/Image/Avatar";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string Default_png = Url("Default.png");
                }
            
            }
        
        }
    
    }

    
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public static partial class Bundles
    {
        public static partial class Scripts 
        {
            public static partial class i18n 
            {
                public static class Assets
                {
                    public const string grid_locale_ar_js = "~/Scripts/i18n/grid.locale-ar.js"; 
                    public const string grid_locale_bg_js = "~/Scripts/i18n/grid.locale-bg.js"; 
                    public const string grid_locale_bg1251_js = "~/Scripts/i18n/grid.locale-bg1251.js"; 
                    public const string grid_locale_cat_js = "~/Scripts/i18n/grid.locale-cat.js"; 
                    public const string grid_locale_cn_js = "~/Scripts/i18n/grid.locale-cn.js"; 
                    public const string grid_locale_cs_js = "~/Scripts/i18n/grid.locale-cs.js"; 
                    public const string grid_locale_da_js = "~/Scripts/i18n/grid.locale-da.js"; 
                    public const string grid_locale_de_js = "~/Scripts/i18n/grid.locale-de.js"; 
                    public const string grid_locale_dk_js = "~/Scripts/i18n/grid.locale-dk.js"; 
                    public const string grid_locale_el_js = "~/Scripts/i18n/grid.locale-el.js"; 
                    public const string grid_locale_en_js = "~/Scripts/i18n/grid.locale-en.js"; 
                    public const string grid_locale_es_js = "~/Scripts/i18n/grid.locale-es.js"; 
                    public const string grid_locale_fa_js = "~/Scripts/i18n/grid.locale-fa.js"; 
                    public const string grid_locale_fi_js = "~/Scripts/i18n/grid.locale-fi.js"; 
                    public const string grid_locale_fr_js = "~/Scripts/i18n/grid.locale-fr.js"; 
                    public const string grid_locale_gl_js = "~/Scripts/i18n/grid.locale-gl.js"; 
                    public const string grid_locale_he_js = "~/Scripts/i18n/grid.locale-he.js"; 
                    public const string grid_locale_hr_js = "~/Scripts/i18n/grid.locale-hr.js"; 
                    public const string grid_locale_hr1250_js = "~/Scripts/i18n/grid.locale-hr1250.js"; 
                    public const string grid_locale_hu_js = "~/Scripts/i18n/grid.locale-hu.js"; 
                    public const string grid_locale_id_js = "~/Scripts/i18n/grid.locale-id.js"; 
                    public const string grid_locale_is_js = "~/Scripts/i18n/grid.locale-is.js"; 
                    public const string grid_locale_it_js = "~/Scripts/i18n/grid.locale-it.js"; 
                    public const string grid_locale_ja_js = "~/Scripts/i18n/grid.locale-ja.js"; 
                    public const string grid_locale_kr_js = "~/Scripts/i18n/grid.locale-kr.js"; 
                    public const string grid_locale_lt_js = "~/Scripts/i18n/grid.locale-lt.js"; 
                    public const string grid_locale_mne_js = "~/Scripts/i18n/grid.locale-mne.js"; 
                    public const string grid_locale_nl_js = "~/Scripts/i18n/grid.locale-nl.js"; 
                    public const string grid_locale_no_js = "~/Scripts/i18n/grid.locale-no.js"; 
                    public const string grid_locale_pl_js = "~/Scripts/i18n/grid.locale-pl.js"; 
                    public const string grid_locale_pt_br_js = "~/Scripts/i18n/grid.locale-pt-br.js"; 
                    public const string grid_locale_pt_js = "~/Scripts/i18n/grid.locale-pt.js"; 
                    public const string grid_locale_ro_js = "~/Scripts/i18n/grid.locale-ro.js"; 
                    public const string grid_locale_ru_js = "~/Scripts/i18n/grid.locale-ru.js"; 
                    public const string grid_locale_sk_js = "~/Scripts/i18n/grid.locale-sk.js"; 
                    public const string grid_locale_sr_latin_js = "~/Scripts/i18n/grid.locale-sr-latin.js"; 
                    public const string grid_locale_sr_js = "~/Scripts/i18n/grid.locale-sr.js"; 
                    public const string grid_locale_sv_js = "~/Scripts/i18n/grid.locale-sv.js"; 
                    public const string grid_locale_th_js = "~/Scripts/i18n/grid.locale-th.js"; 
                    public const string grid_locale_tr_js = "~/Scripts/i18n/grid.locale-tr.js"; 
                    public const string grid_locale_tw_js = "~/Scripts/i18n/grid.locale-tw.js"; 
                    public const string grid_locale_ua_js = "~/Scripts/i18n/grid.locale-ua.js"; 
                    public const string grid_locale_vi_js = "~/Scripts/i18n/grid.locale-vi.js"; 
                }
            }
            public static class Assets
            {
                public const string _references_js = "~/Scripts/_references.js"; 
                public const string admin_js = "~/Scripts/admin.js"; 
                public const string ajaxfileupload_js = "~/Scripts/ajaxfileupload.js"; 
                public const string bootstrap_js = "~/Scripts/bootstrap.js"; 
                public const string bootstrap_min_js = "~/Scripts/bootstrap.min.js"; 
                public const string cloud_zoom_js = "~/Scripts/cloud-zoom.js"; 
                public const string Factor_js = "~/Scripts/Factor.js"; 
                public const string fileinput_min_js = "~/Scripts/fileinput.min.js"; 
                public const string jquery_1_10_2_intellisense_js = "~/Scripts/jquery-1.10.2.intellisense.js"; 
                public const string jquery_1_10_2_js = "~/Scripts/jquery-1.10.2.js"; 
                public const string jquery_1_10_2_min_js = "~/Scripts/jquery-1.10.2.min.js"; 
                public const string jquery_2_1_4_min_js = "~/Scripts/jquery-2.1.4.min.js"; 
                public const string jquery_MVC_RemoveRow_js = "~/Scripts/jquery-MVC-RemoveRow.js"; 
                public const string jquery_ui_1_11_4_min_js = "~/Scripts/jquery-ui-1.11.4.min.js"; 
                public const string jquery_ui_1_8_11_js = "~/Scripts/jquery-ui-1.8.11.js"; 
                public const string jquery_ui_1_8_11_min_js = "~/Scripts/jquery-ui-1.8.11.min.js"; 
                public const string jquery_autocomplete_js = "~/Scripts/jquery.autocomplete.js"; 
                public const string jquery_blockUI_min_js = "~/Scripts/jquery.blockUI.min.js"; 
                public const string jquery_jqGrid_min_js = "~/Scripts/jquery.jqGrid.min.js"; 
                public const string jquery_jqGrid_src_js = "~/Scripts/jquery.jqGrid.src.js"; 
                public const string jquery_unobtrusive_ajax_js = "~/Scripts/jquery.unobtrusive-ajax.js"; 
                public const string jquery_unobtrusive_ajax_min_js = "~/Scripts/jquery.unobtrusive-ajax.min.js"; 
                public const string jquery_validate_js = "~/Scripts/jquery.validate.js"; 
                public const string jquery_validate_unobtrusive_js = "~/Scripts/jquery.validate.unobtrusive.js"; 
                public const string jqueryval_default_js = "~/Scripts/jqueryval-default.js"; 
                public const string lazysizes_js = "~/Scripts/lazysizes.js"; 
                public const string modernizr_2_8_3_js = "~/Scripts/modernizr-2.8.3.js"; 
                public const string PersianDatePicker_js = "~/Scripts/PersianDatePicker.js"; 
                public const string respond_js = "~/Scripts/respond.js"; 
                public const string respond_matchmedia_addListener_js = "~/Scripts/respond.matchmedia.addListener.js"; 
                public const string respond_matchmedia_addListener_min_js = "~/Scripts/respond.matchmedia.addListener.min.js"; 
                public const string respond_min_js = "~/Scripts/respond.min.js"; 
                public const string sweet_alert_min_js = "~/Scripts/sweet-alert.min.js"; 
                public const string thumbelina_js = "~/Scripts/thumbelina.js"; 
            }
        }
        public static partial class Content 
        {
            public static partial class css 
            {
                public static partial class components 
                {
                    public static partial class buttons 
                    {
                        public static class Assets
                        {
                            public const string ladda_themeless_min_css = "~/Content/css/components/buttons/ladda-themeless.min.css";
                        }
                    }
                    public static partial class weather_icons 
                    {
                        public static class Assets
                        {
                            public const string climacons_min_css = "~/Content/css/components/weather-icons/climacons.min.css";
                        }
                    }
                    public static class Assets
                    {
                    }
                }
                public static partial class fonts 
                {
                    public static partial class tinymce 
                    {
                        public static class Assets
                        {
                        }
                    }
                    public static class Assets
                    {
                    }
                }
                public static partial class plugins 
                {
                    public static partial class calendars 
                    {
                        public static class Assets
                        {
                            public const string fullcalendar_min_css = "~/Content/css/plugins/calendars/fullcalendar.min.css";
                        }
                    }
                    public static partial class charts 
                    {
                        public static class Assets
                        {
                            public const string c3_css = "~/Content/css/plugins/charts/c3.css";
                            public const string chartist_plugin_tooltip_css = "~/Content/css/plugins/charts/chartist-plugin-tooltip.css";
                            public const string chartist_css = "~/Content/css/plugins/charts/chartist.css";
                            public const string d3_css = "~/Content/css/plugins/charts/d3.css";
                            public const string jquery_jvectormap_2_0_3_css = "~/Content/css/plugins/charts/jquery-jvectormap-2.0.3.css";
                            public const string jqvmap_css = "~/Content/css/plugins/charts/jqvmap.css";
                            public const string mapael_css = "~/Content/css/plugins/charts/mapael.css";
                            public const string morris_css = "~/Content/css/plugins/charts/morris.css";
                            public const string rickshaw_css = "~/Content/css/plugins/charts/rickshaw.css";
                        }
                    }
                    public static partial class editors 
                    {
                        public static partial class addon 
                        {
                            public static partial class dialog 
                            {
                                public static class Assets
                                {
                                    public const string dialog_css = "~/Content/css/plugins/editors/addon/dialog/dialog.css";
                                }
                            }
                            public static partial class fold 
                            {
                                public static class Assets
                                {
                                    public const string foldgutter_css = "~/Content/css/plugins/editors/addon/fold/foldgutter.css";
                                }
                            }
                            public static class Assets
                            {
                            }
                        }
                        public static partial class quill 
                        {
                            public static partial class fonts 
                            {
                                public static class Assets
                                {
                                }
                            }
                            public static class Assets
                            {
                                public const string katex_min_css = "~/Content/css/plugins/editors/quill/katex.min.css";
                                public const string monokai_sublime_min_css = "~/Content/css/plugins/editors/quill/monokai-sublime.min.css";
                                public const string quill_bubble_css = "~/Content/css/plugins/editors/quill/quill.bubble.css";
                                public const string quill_snow_css = "~/Content/css/plugins/editors/quill/quill.snow.css";
                            }
                        }
                        public static partial class theme 
                        {
                            public static class Assets
                            {
                                public const string _3024_day_css = "~/Content/css/plugins/editors/theme/3024-day.css";
                                public const string monokai_css = "~/Content/css/plugins/editors/theme/monokai.css";
                                public const string night_css = "~/Content/css/plugins/editors/theme/night.css";
                            }
                        }
                        public static partial class tinymce 
                        {
                            public static class Assets
                            {
                                public const string tinymce_min_css = "~/Content/css/plugins/editors/tinymce/tinymce.min.css";
                            }
                        }
                        public static class Assets
                        {
                            public const string codemirror_css = "~/Content/css/plugins/editors/codemirror.css";
                            public const string summernote_css = "~/Content/css/plugins/editors/summernote.css";
                        }
                    }
                    public static partial class extensions 
                    {
                        public static partial class bgvideo 
                        {
                            public static class Assets
                            {
                                public const string bigvideo_css = "~/Content/css/plugins/extensions/bgvideo/bigvideo.css";
                                public const string video_js_min_css = "~/Content/css/plugins/extensions/bgvideo/video-js.min.css";
                            }
                        }
                        public static partial class dd_icon 
                        {
                            public static class Assets
                            {
                            }
                        }
                        public static partial class offline 
                        {
                            public static partial class themes 
                            {
                                public static class Assets
                                {
                                    public const string offline_language_english_css = "~/Content/css/plugins/extensions/offline/themes/offline-language-english.css";
                                    public const string offline_theme_slide_css = "~/Content/css/plugins/extensions/offline/themes/offline-theme-slide.css";
                                }
                            }
                            public static class Assets
                            {
                            }
                        }
                        public static partial class raty 
                        {
                            public static partial class fonts 
                            {
                                public static class Assets
                                {
                                }
                            }
                            public static class Assets
                            {
                                public const string jquery_raty_css = "~/Content/css/plugins/extensions/raty/jquery.raty.css";
                            }
                        }
                        public static class Assets
                        {
                            public const string bootstrap_treeview_min_css = "~/Content/css/plugins/extensions/bootstrap-treeview.min.css";
                            public const string datedropper_min_css = "~/Content/css/plugins/extensions/datedropper.min.css";
                            public const string jquery_toolbar_css = "~/Content/css/plugins/extensions/jquery.toolbar.css";
                            public const string long_press_css = "~/Content/css/plugins/extensions/long-press.css";
                            public const string nouislider_min_css = "~/Content/css/plugins/extensions/nouislider.min.css";
                            public const string sweetalert_css = "~/Content/css/plugins/extensions/sweetalert.css";
                            public const string timedropper_min_css = "~/Content/css/plugins/extensions/timedropper.min.css";
                            public const string toastr_css = "~/Content/css/plugins/extensions/toastr.css";
                            public const string unslider_css = "~/Content/css/plugins/extensions/unslider.css";
                            public const string zoom_css = "~/Content/css/plugins/extensions/zoom.css";
                        }
                    }
                    public static partial class file_uploaders 
                    {
                        public static class Assets
                        {
                            public const string blueimp_gallery_min_css = "~/Content/css/plugins/file-uploaders/blueimp-gallery.min.css";
                            public const string dropzone_min_css = "~/Content/css/plugins/file-uploaders/dropzone.min.css";
                            public const string jquery_fileupload_ui_css = "~/Content/css/plugins/file-uploaders/jquery.fileupload-ui.css";
                            public const string jquery_fileupload_css = "~/Content/css/plugins/file-uploaders/jquery.fileupload.css";
                        }
                    }
                    public static partial class forms 
                    {
                        public static partial class icheck 
                        {
                            public static partial class flat 
                            {
                                public static class Assets
                                {
                                    public const string _all_css = "~/Content/css/plugins/forms/icheck/flat/_all.css";
                                }
                            }
                            public static partial class futurico 
                            {
                                public static class Assets
                                {
                                    public const string futurico_css = "~/Content/css/plugins/forms/icheck/futurico/futurico.css";
                                }
                            }
                            public static partial class line 
                            {
                                public static class Assets
                                {
                                    public const string _all_css = "~/Content/css/plugins/forms/icheck/line/_all.css";
                                }
                            }
                            public static partial class minimal 
                            {
                                public static class Assets
                                {
                                    public const string _all_css = "~/Content/css/plugins/forms/icheck/minimal/_all.css";
                                }
                            }
                            public static partial class polaris 
                            {
                                public static class Assets
                                {
                                    public const string polaris_css = "~/Content/css/plugins/forms/icheck/polaris/polaris.css";
                                }
                            }
                            public static partial class square 
                            {
                                public static class Assets
                                {
                                    public const string _all_css = "~/Content/css/plugins/forms/icheck/square/_all.css";
                                }
                            }
                            public static class Assets
                            {
                                public const string custom_css = "~/Content/css/plugins/forms/icheck/custom.css";
                                public const string icheck_css = "~/Content/css/plugins/forms/icheck/icheck.css";
                            }
                        }
                        public static partial class listbox 
                        {
                            public static class Assets
                            {
                                public const string bootstrap_duallistbox_min_css = "~/Content/css/plugins/forms/listbox/bootstrap-duallistbox.min.css";
                            }
                        }
                        public static partial class selects 
                        {
                            public static class Assets
                            {
                                public const string jquery_selectBoxIt_css = "~/Content/css/plugins/forms/selects/jquery.selectBoxIt.css";
                                public const string select2_min_css = "~/Content/css/plugins/forms/selects/select2.min.css";
                                public const string selectivity_full_min_css = "~/Content/css/plugins/forms/selects/selectivity-full.min.css";
                                public const string selectize_css = "~/Content/css/plugins/forms/selects/selectize.css";
                                public const string selectize_default_css = "~/Content/css/plugins/forms/selects/selectize.default.css";
                            }
                        }
                        public static partial class spinner 
                        {
                            public static class Assets
                            {
                                public const string jquery_bootstrap_touchspin_css = "~/Content/css/plugins/forms/spinner/jquery.bootstrap-touchspin.css";
                            }
                        }
                        public static partial class tags 
                        {
                            public static class Assets
                            {
                                public const string bootstrap_tagsinput_css = "~/Content/css/plugins/forms/tags/bootstrap-tagsinput.css";
                                public const string tagging_css = "~/Content/css/plugins/forms/tags/tagging.css";
                            }
                        }
                        public static partial class toggle 
                        {
                            public static class Assets
                            {
                                public const string bootstrap_switch_min_css = "~/Content/css/plugins/forms/toggle/bootstrap-switch.min.css";
                                public const string switchery_min_css = "~/Content/css/plugins/forms/toggle/switchery.min.css";
                            }
                        }
                        public static class Assets
                        {
                        }
                    }
                    public static partial class pages 
                    {
                        public static partial class lobilist 
                        {
                            public static class Assets
                            {
                                public const string lobilist_css = "~/Content/css/plugins/pages/lobilist/lobilist.css";
                            }
                        }
                        public static class Assets
                        {
                        }
                    }
                    public static partial class pagination 
                    {
                        public static class Assets
                        {
                            public const string bootstrap_datepaginator_min_css = "~/Content/css/plugins/pagination/bootstrap-datepaginator.min.css";
                        }
                    }
                    public static partial class pickers 
                    {
                        public static partial class colorpicker 
                        {
                            public static class Assets
                            {
                                public const string bootstrap_colorpicker_min_css = "~/Content/css/plugins/pickers/colorpicker/bootstrap-colorpicker.min.css";
                            }
                        }
                        public static partial class miniColors 
                        {
                            public static class Assets
                            {
                                public const string jquery_minicolors_css = "~/Content/css/plugins/pickers/miniColors/jquery.minicolors.css";
                            }
                        }
                        public static partial class pickadate 
                        {
                            public static class Assets
                            {
                                public const string pickadate_css = "~/Content/css/plugins/pickers/pickadate/pickadate.css";
                            }
                        }
                        public static partial class spectrum 
                        {
                            public static class Assets
                            {
                                public const string spectrum_css = "~/Content/css/plugins/pickers/spectrum/spectrum.css";
                            }
                        }
                        public static class Assets
                        {
                        }
                    }
                    public static partial class sliders 
                    {
                        public static partial class slick 
                        {
                            public static class Assets
                            {
                                public const string slick_css = "~/Content/css/plugins/sliders/slick/slick.css";
                            }
                        }
                        public static class Assets
                        {
                        }
                    }
                    public static partial class tables 
                    {
                        public static partial class datatable 
                        {
                            public static class Assets
                            {
                                public const string buttons_bootstrap4_min_css = "~/Content/css/plugins/tables/datatable/buttons.bootstrap4.min.css";
                                public const string dataTables_bootstrap4_min_css = "~/Content/css/plugins/tables/datatable/dataTables.bootstrap4.min.css";
                                public const string select_dataTables_min_css = "~/Content/css/plugins/tables/datatable/select.dataTables.min.css";
                            }
                        }
                        public static partial class extensions 
                        {
                            public static class Assets
                            {
                                public const string autoFill_dataTables_min_css = "~/Content/css/plugins/tables/extensions/autoFill.dataTables.min.css";
                                public const string buttons_dataTables_min_css = "~/Content/css/plugins/tables/extensions/buttons.dataTables.min.css";
                                public const string colReorder_dataTables_min_css = "~/Content/css/plugins/tables/extensions/colReorder.dataTables.min.css";
                                public const string dataTables_colVis_css = "~/Content/css/plugins/tables/extensions/dataTables.colVis.css";
                                public const string fixedColumns_dataTables_min_css = "~/Content/css/plugins/tables/extensions/fixedColumns.dataTables.min.css";
                                public const string fixedHeader_dataTables_min_css = "~/Content/css/plugins/tables/extensions/fixedHeader.dataTables.min.css";
                                public const string keyTable_dataTables_min_css = "~/Content/css/plugins/tables/extensions/keyTable.dataTables.min.css";
                                public const string responsive_dataTables_min_css = "~/Content/css/plugins/tables/extensions/responsive.dataTables.min.css";
                                public const string rowReorder_dataTables_min_css = "~/Content/css/plugins/tables/extensions/rowReorder.dataTables.min.css";
                            }
                        }
                        public static partial class handsontable 
                        {
                            public static class Assets
                            {
                                public const string handsontable_full_min_css = "~/Content/css/plugins/tables/handsontable/handsontable.full.min.css";
                                public const string jsgrid_theme_min_css = "~/Content/css/plugins/tables/handsontable/jsgrid-theme.min.css";
                                public const string jsgrid_min_css = "~/Content/css/plugins/tables/handsontable/jsgrid.min.css";
                            }
                        }
                        public static partial class jsgrid 
                        {
                            public static class Assets
                            {
                                public const string jsgrid_theme_min_css = "~/Content/css/plugins/tables/jsgrid/jsgrid-theme.min.css";
                                public const string jsgrid_min_css = "~/Content/css/plugins/tables/jsgrid/jsgrid.min.css";
                            }
                        }
                        public static class Assets
                        {
                        }
                    }
                    public static partial class ui 
                    {
                        public static partial class images 
                        {
                            public static class Assets
                            {
                            }
                        }
                        public static class Assets
                        {
                            public const string dragula_min_css = "~/Content/css/plugins/ui/dragula.min.css";
                            public const string jquery_ui_slider_pips_min_css = "~/Content/css/plugins/ui/jquery-ui-slider-pips.min.css";
                            public const string jquery_ui_min_css = "~/Content/css/plugins/ui/jquery-ui.min.css";
                            public const string prism_min_css = "~/Content/css/plugins/ui/prism.min.css";
                        }
                    }
                    public static class Assets
                    {
                    }
                }
                public static class Assets
                {
                    public const string app_min_css = "~/Content/css/app.min.css";
                    public const string my_style_css = "~/Content/css/my-style.css";
                    public const string vendors_min_css = "~/Content/css/vendors.min.css";
                }
            }
            public static partial class demo_data 
            {
                public static partial class jqvmaps 
                {
                    public static class Assets
                    {
                        public const string jquery_vmap_sampledata_js = "~/Content/demo-data/jqvmaps/jquery.vmap.sampledata.js"; 
                    }
                }
                public static partial class jvector 
                {
                    public static class Assets
                    {
                        public const string gdp_data_js = "~/Content/demo-data/jvector/gdp-data.js"; 
                        public const string visitor_data_js = "~/Content/demo-data/jvector/visitor-data.js"; 
                    }
                }
                public static class Assets
                {
                }
            }
            public static partial class fonts 
            {
                public static partial class flag_icon_css 
                {
                    public static partial class css 
                    {
                        public static class Assets
                        {
                            public const string flag_icon_min_css = "~/Content/fonts/flag-icon-css/css/flag-icon.min.css";
                        }
                    }
                    public static partial class flags 
                    {
                        public static partial class _1x1 
                        {
                            public static class Assets
                            {
                            }
                        }
                        public static partial class _4x3 
                        {
                            public static class Assets
                            {
                            }
                        }
                        public static class Assets
                        {
                        }
                    }
                    public static class Assets
                    {
                    }
                }
                public static partial class icomoon 
                {
                    public static class Assets
                    {
                    }
                }
                public static partial class IRANSansWeb 
                {
                    public static class Assets
                    {
                    }
                }
                public static partial class summernote 
                {
                    public static class Assets
                    {
                    }
                }
                public static class Assets
                {
                    public const string icomoon_css = "~/Content/fonts/icomoon.css";
                }
            }
            public static partial class ico 
            {
                public static class Assets
                {
                }
            }
            public static partial class images 
            {
                public static partial class backgrounds 
                {
                    public static class Assets
                    {
                    }
                }
                public static partial class bootstrap_colorpicker 
                {
                    public static class Assets
                    {
                    }
                }
                public static partial class datatables 
                {
                    public static partial class resources 
                    {
                        public static class Assets
                        {
                        }
                    }
                    public static class Assets
                    {
                    }
                }
                public static partial class icons 
                {
                    public static class Assets
                    {
                    }
                }
                public static partial class jqueryui 
                {
                    public static class Assets
                    {
                    }
                }
                public static partial class jvqmap 
                {
                    public static partial class marker 
                    {
                        public static class Assets
                        {
                        }
                    }
                    public static class Assets
                    {
                    }
                }
                public static partial class logo 
                {
                    public static class Assets
                    {
                    }
                }
                public static partial class svg 
                {
                    public static class Assets
                    {
                    }
                }
                public static class Assets
                {
                }
            }
            public static partial class jquery_jqGrid 
            {
                public static class Assets
                {
                    public const string ui_jqgrid_css = "~/Content/jquery.jqGrid/ui.jqgrid.css";
                }
            }
            public static partial class js 
            {
                public static partial class components 
                {
                    public static partial class animation 
                    {
                        public static class Assets
                        {
                            public const string animation_js = "~/Content/js/components/animation/animation.js"; 
                        }
                    }
                    public static partial class buttons 
                    {
                        public static class Assets
                        {
                            public const string button_ladda_js = "~/Content/js/components/buttons/button-ladda.js"; 
                        }
                    }
                    public static partial class cards 
                    {
                        public static class Assets
                        {
                            public const string advance_cards_js = "~/Content/js/components/cards/advance-cards.js"; 
                            public const string draggable_js = "~/Content/js/components/cards/draggable.js"; 
                        }
                    }
                    public static partial class charts 
                    {
                        public static partial class c3 
                        {
                            public static partial class axis 
                            {
                                public static class Assets
                                {
                                    public const string category_axis_js = "~/Content/js/components/charts/c3/axis/category-axis.js"; 
                                    public const string rotated_axis_js = "~/Content/js/components/charts/c3/axis/rotated-axis.js"; 
                                    public const string tick_culling_js = "~/Content/js/components/charts/c3/axis/tick-culling.js"; 
                                    public const string tick_fitting_js = "~/Content/js/components/charts/c3/axis/tick-fitting.js"; 
                                    public const string timezone_js = "~/Content/js/components/charts/c3/axis/timezone.js"; 
                                    public const string y_axis_range_js = "~/Content/js/components/charts/c3/axis/y-axis-range.js"; 
                                    public const string y_axis_js = "~/Content/js/components/charts/c3/axis/y-axis.js"; 
                                }
                            }
                            public static partial class bar_pie 
                            {
                                public static class Assets
                                {
                                    public const string bar_js = "~/Content/js/components/charts/c3/bar-pie/bar.js"; 
                                    public const string column_js = "~/Content/js/components/charts/c3/bar-pie/column.js"; 
                                    public const string donut_js = "~/Content/js/components/charts/c3/bar-pie/donut.js"; 
                                    public const string pie_js = "~/Content/js/components/charts/c3/bar-pie/pie.js"; 
                                    public const string stacked_bar_js = "~/Content/js/components/charts/c3/bar-pie/stacked-bar.js"; 
                                    public const string stacked_column_js = "~/Content/js/components/charts/c3/bar-pie/stacked-column.js"; 
                                }
                            }
                            public static partial class data 
                            {
                                public static class Assets
                                {
                                    public const string category_data_js = "~/Content/js/components/charts/c3/data/category-data.js"; 
                                    public const string column_oriented_js = "~/Content/js/components/charts/c3/data/column-oriented.js"; 
                                    public const string data_color_js = "~/Content/js/components/charts/c3/data/data-color.js"; 
                                    public const string data_from_url_js = "~/Content/js/components/charts/c3/data/data-from-url.js"; 
                                    public const string data_order_js = "~/Content/js/components/charts/c3/data/data-order.js"; 
                                    public const string row_oriented_js = "~/Content/js/components/charts/c3/data/row-oriented.js"; 
                                }
                            }
                            public static partial class grid 
                            {
                                public static class Assets
                                {
                                    public const string grid_lines_js = "~/Content/js/components/charts/c3/grid/grid-lines.js"; 
                                    public const string x_grid_lines_js = "~/Content/js/components/charts/c3/grid/x-grid-lines.js"; 
                                    public const string y_grid_lines_js = "~/Content/js/components/charts/c3/grid/y-grid-lines.js"; 
                                }
                            }
                            public static partial class line 
                            {
                                public static class Assets
                                {
                                    public const string area_js = "~/Content/js/components/charts/c3/line/area.js"; 
                                    public const string line_region_js = "~/Content/js/components/charts/c3/line/line-region.js"; 
                                    public const string line_js = "~/Content/js/components/charts/c3/line/line.js"; 
                                    public const string multiple_xy_js = "~/Content/js/components/charts/c3/line/multiple-xy.js"; 
                                    public const string simple_xy_js = "~/Content/js/components/charts/c3/line/simple-xy.js"; 
                                    public const string spline_js = "~/Content/js/components/charts/c3/line/spline.js"; 
                                    public const string step_js = "~/Content/js/components/charts/c3/line/step.js"; 
                                }
                            }
                            public static partial class other 
                            {
                                public static class Assets
                                {
                                    public const string combine_js = "~/Content/js/components/charts/c3/other/combine.js"; 
                                    public const string guage_js = "~/Content/js/components/charts/c3/other/guage.js"; 
                                    public const string scatter_plot_js = "~/Content/js/components/charts/c3/other/scatter-plot.js"; 
                                    public const string sub_js = "~/Content/js/components/charts/c3/other/sub.js"; 
                                    public const string timeseries_js = "~/Content/js/components/charts/c3/other/timeseries.js"; 
                                    public const string zoom_js = "~/Content/js/components/charts/c3/other/zoom.js"; 
                                }
                            }
                            public static partial class transform 
                            {
                                public static class Assets
                                {
                                    public const string to_area_js = "~/Content/js/components/charts/c3/transform/to-area.js"; 
                                    public const string to_bar_js = "~/Content/js/components/charts/c3/transform/to-bar.js"; 
                                    public const string to_line_js = "~/Content/js/components/charts/c3/transform/to-line.js"; 
                                    public const string to_pie_js = "~/Content/js/components/charts/c3/transform/to-pie.js"; 
                                    public const string to_scatter_plot_js = "~/Content/js/components/charts/c3/transform/to-scatter-plot.js"; 
                                }
                            }
                            public static class Assets
                            {
                            }
                        }
                        public static partial class chartist 
                        {
                            public static partial class bar 
                            {
                                public static class Assets
                                {
                                    public const string bi_polar_bar_js = "~/Content/js/components/charts/chartist/bar/bi-polar-bar.js"; 
                                    public const string distributed_series_js = "~/Content/js/components/charts/chartist/bar/distributed-series.js"; 
                                    public const string horizontal_bar_js = "~/Content/js/components/charts/chartist/bar/horizontal-bar.js"; 
                                    public const string multi_column_js = "~/Content/js/components/charts/chartist/bar/multi-column.js"; 
                                    public const string peak_circles_js = "~/Content/js/components/charts/chartist/bar/peak-circles.js"; 
                                    public const string stacked_bar_js = "~/Content/js/components/charts/chartist/bar/stacked-bar.js"; 
                                }
                            }
                            public static partial class line 
                            {
                                public static class Assets
                                {
                                    public const string area_js = "~/Content/js/components/charts/chartist/line/area.js"; 
                                    public const string bi_polar_area_js = "~/Content/js/components/charts/chartist/line/bi-polar-area.js"; 
                                    public const string holes_in_data_js = "~/Content/js/components/charts/chartist/line/holes-in-data.js"; 
                                    public const string line_scatter_js = "~/Content/js/components/charts/chartist/line/line-scatter.js"; 
                                    public const string line_js = "~/Content/js/components/charts/chartist/line/line.js"; 
                                    public const string series_overrides_js = "~/Content/js/components/charts/chartist/line/series-overrides.js"; 
                                    public const string whole_numbers_js = "~/Content/js/components/charts/chartist/line/whole-numbers.js"; 
                                }
                            }
                            public static partial class pie 
                            {
                                public static class Assets
                                {
                                    public const string custom_labels_js = "~/Content/js/components/charts/chartist/pie/custom-labels.js"; 
                                    public const string donut_js = "~/Content/js/components/charts/chartist/pie/donut.js"; 
                                    public const string gauge_js = "~/Content/js/components/charts/chartist/pie/gauge.js"; 
                                    public const string pie_js = "~/Content/js/components/charts/chartist/pie/pie.js"; 
                                }
                            }
                            public static class Assets
                            {
                            }
                        }
                        public static partial class chartjs 
                        {
                            public static partial class advance 
                            {
                                public static class Assets
                                {
                                    public const string bubble_js = "~/Content/js/components/charts/chartjs/advance/bubble.js"; 
                                    public const string combo_bar_line_data_label_js = "~/Content/js/components/charts/chartjs/advance/combo-bar-line-data-label.js"; 
                                    public const string combo_bar_line_js = "~/Content/js/components/charts/chartjs/advance/combo-bar-line.js"; 
                                    public const string different_point_sizes_js = "~/Content/js/components/charts/chartjs/advance/different-point-sizes.js"; 
                                }
                            }
                            public static partial class bar 
                            {
                                public static class Assets
                                {
                                    public const string bar_multi_axis_js = "~/Content/js/components/charts/chartjs/bar/bar-multi-axis.js"; 
                                    public const string bar_stacked_js = "~/Content/js/components/charts/chartjs/bar/bar-stacked.js"; 
                                    public const string bar_js = "~/Content/js/components/charts/chartjs/bar/bar.js"; 
                                    public const string column_multi_axis_js = "~/Content/js/components/charts/chartjs/bar/column-multi-axis.js"; 
                                    public const string column_stacked_js = "~/Content/js/components/charts/chartjs/bar/column-stacked.js"; 
                                    public const string column_js = "~/Content/js/components/charts/chartjs/bar/column.js"; 
                                }
                            }
                            public static partial class line 
                            {
                                public static class Assets
                                {
                                    public const string line_area_js = "~/Content/js/components/charts/chartjs/line/line-area.js"; 
                                    public const string line_logarithmic_js = "~/Content/js/components/charts/chartjs/line/line-logarithmic.js"; 
                                    public const string line_multi_axis_js = "~/Content/js/components/charts/chartjs/line/line-multi-axis.js"; 
                                    public const string line_skip_points_js = "~/Content/js/components/charts/chartjs/line/line-skip-points.js"; 
                                    public const string line_stacked_area_js = "~/Content/js/components/charts/chartjs/line/line-stacked-area.js"; 
                                    public const string line_js = "~/Content/js/components/charts/chartjs/line/line.js"; 
                                }
                            }
                            public static partial class pie_doughnut 
                            {
                                public static class Assets
                                {
                                    public const string doughnut_simple_js = "~/Content/js/components/charts/chartjs/pie-doughnut/doughnut-simple.js"; 
                                    public const string doughnut_js = "~/Content/js/components/charts/chartjs/pie-doughnut/doughnut.js"; 
                                    public const string pie_simple_js = "~/Content/js/components/charts/chartjs/pie-doughnut/pie-simple.js"; 
                                    public const string pie_js = "~/Content/js/components/charts/chartjs/pie-doughnut/pie.js"; 
                                }
                            }
                            public static partial class polar_radar 
                            {
                                public static class Assets
                                {
                                    public const string polar_skip_points_js = "~/Content/js/components/charts/chartjs/polar-radar/polar-skip-points.js"; 
                                    public const string polar_js = "~/Content/js/components/charts/chartjs/polar-radar/polar.js"; 
                                    public const string radar_skip_points_js = "~/Content/js/components/charts/chartjs/polar-radar/radar-skip-points.js"; 
                                    public const string radar_js = "~/Content/js/components/charts/chartjs/polar-radar/radar.js"; 
                                }
                            }
                            public static partial class scatter 
                            {
                                public static class Assets
                                {
                                    public const string scatter_logX_js = "~/Content/js/components/charts/chartjs/scatter/scatter-logX.js"; 
                                    public const string scatter_multi_axis_js = "~/Content/js/components/charts/chartjs/scatter/scatter-multi-axis.js"; 
                                    public const string scatter_js = "~/Content/js/components/charts/chartjs/scatter/scatter.js"; 
                                }
                            }
                            public static class Assets
                            {
                            }
                        }
                        public static partial class d3 
                        {
                            public static partial class bar 
                            {
                                public static class Assets
                                {
                                    public const string bar_negative_js = "~/Content/js/components/charts/d3/bar/bar-negative.js"; 
                                    public const string bar_js = "~/Content/js/components/charts/d3/bar/bar.js"; 
                                    public const string grouped_bar_js = "~/Content/js/components/charts/d3/bar/grouped-bar.js"; 
                                    public const string normalized_stacked_bar_js = "~/Content/js/components/charts/d3/bar/normalized-stacked-bar.js"; 
                                    public const string stacked_bar_js = "~/Content/js/components/charts/d3/bar/stacked-bar.js"; 
                                    public const string stacked_to_grouped_js = "~/Content/js/components/charts/d3/bar/stacked-to-grouped.js"; 
                                    public const string stacked_to_multiples_js = "~/Content/js/components/charts/d3/bar/stacked-to-multiples.js"; 
                                    public const string waterfall_js = "~/Content/js/components/charts/d3/bar/waterfall.js"; 
                                }
                            }
                            public static partial class circle 
                            {
                                public static class Assets
                                {
                                    public const string interactive_venn_js = "~/Content/js/components/charts/d3/circle/interactive-venn.js"; 
                                    public const string intersection_tooltip_venn_js = "~/Content/js/components/charts/d3/circle/intersection-tooltip-venn.js"; 
                                    public const string medical_venn_js = "~/Content/js/components/charts/d3/circle/medical-venn.js"; 
                                    public const string sequences_sunburst_js = "~/Content/js/components/charts/d3/circle/sequences-sunburst.js"; 
                                    public const string styled_venn_js = "~/Content/js/components/charts/d3/circle/styled-venn.js"; 
                                    public const string sunburst_distortion_js = "~/Content/js/components/charts/d3/circle/sunburst-distortion.js"; 
                                    public const string sunburst_partition_js = "~/Content/js/components/charts/d3/circle/sunburst-partition.js"; 
                                    public const string venn_venn_js = "~/Content/js/components/charts/d3/circle/venn-venn.js"; 
                                    public const string weighted_venn_js = "~/Content/js/components/charts/d3/circle/weighted-venn.js"; 
                                    public const string zoomable_sunburst_js = "~/Content/js/components/charts/d3/circle/zoomable-sunburst.js"; 
                                }
                            }
                            public static partial class line 
                            {
                                public static class Assets
                                {
                                    public const string area_js = "~/Content/js/components/charts/d3/line/area.js"; 
                                    public const string bivariate_js = "~/Content/js/components/charts/d3/line/bivariate.js"; 
                                    public const string difference_js = "~/Content/js/components/charts/d3/line/difference.js"; 
                                    public const string focus_context_js = "~/Content/js/components/charts/d3/line/focus-context.js"; 
                                    public const string line_tension_js = "~/Content/js/components/charts/d3/line/line-tension.js"; 
                                    public const string line_js = "~/Content/js/components/charts/d3/line/line.js"; 
                                    public const string multi_series_line_js = "~/Content/js/components/charts/d3/line/multi-series-line.js"; 
                                    public const string stacked_area_js = "~/Content/js/components/charts/d3/line/stacked-area.js"; 
                                }
                            }
                            public static partial class other 
                            {
                                public static class Assets
                                {
                                    public const string bubble_js = "~/Content/js/components/charts/d3/other/bubble.js"; 
                                    public const string chord_diagram_new_js = "~/Content/js/components/charts/d3/other/chord-diagram-new.js"; 
                                    public const string gantt_chart_js = "~/Content/js/components/charts/d3/other/gantt-chart.js"; 
                                    public const string streamgraph_js = "~/Content/js/components/charts/d3/other/streamgraph.js"; 
                                    public const string treemap_js = "~/Content/js/components/charts/d3/other/treemap.js"; 
                                    public const string vertical_sankey_js = "~/Content/js/components/charts/d3/other/vertical-sankey.js"; 
                                }
                            }
                            public static partial class pie 
                            {
                                public static class Assets
                                {
                                    public const string _3d_pie_donut_js = "~/Content/js/components/charts/d3/pie/3d-pie-donut.js"; 
                                    public const string dispatch_events_js = "~/Content/js/components/charts/d3/pie/dispatch-events.js"; 
                                    public const string donut_multiples_nesting_js = "~/Content/js/components/charts/d3/pie/donut-multiples-nesting.js"; 
                                    public const string donut_multiples_js = "~/Content/js/components/charts/d3/pie/donut-multiples.js"; 
                                    public const string donut_js = "~/Content/js/components/charts/d3/pie/donut.js"; 
                                    public const string gradient_pie_js = "~/Content/js/components/charts/d3/pie/gradient-pie.js"; 
                                    public const string pie_calendar_js = "~/Content/js/components/charts/d3/pie/pie-calendar.js"; 
                                    public const string pie_multiples_nesting_js = "~/Content/js/components/charts/d3/pie/pie-multiples-nesting.js"; 
                                    public const string pie_multiples_js = "~/Content/js/components/charts/d3/pie/pie-multiples.js"; 
                                    public const string pie_js = "~/Content/js/components/charts/d3/pie/pie.js"; 
                                }
                            }
                            public static partial class tree 
                            {
                                public static class Assets
                                {
                                    public const string bracket_js = "~/Content/js/components/charts/d3/tree/bracket.js"; 
                                    public const string collapsible_js = "~/Content/js/components/charts/d3/tree/collapsible.js"; 
                                    public const string dendrogram_js = "~/Content/js/components/charts/d3/tree/dendrogram.js"; 
                                    public const string radial_js = "~/Content/js/components/charts/d3/tree/radial.js"; 
                                    public const string tree_js = "~/Content/js/components/charts/d3/tree/tree.js"; 
                                }
                            }
                            public static class Assets
                            {
                            }
                        }
                        public static partial class dimple 
                        {
                            public static class Assets
                            {
                                public const string bar_column_js = "~/Content/js/components/charts/dimple/bar-column.js"; 
                                public const string bubble_js = "~/Content/js/components/charts/dimple/bubble.js"; 
                                public const string line_area_js = "~/Content/js/components/charts/dimple/line-area.js"; 
                                public const string pie_ring_js = "~/Content/js/components/charts/dimple/pie-ring.js"; 
                                public const string scatter_js = "~/Content/js/components/charts/dimple/scatter.js"; 
                                public const string step_js = "~/Content/js/components/charts/dimple/step.js"; 
                            }
                        }
                        public static partial class echarts 
                        {
                            public static partial class advance 
                            {
                                public static class Assets
                                {
                                    public const string candlestick_multi_level_control_js = "~/Content/js/components/charts/echarts/advance/candlestick-multi-level-control.js"; 
                                    public const string dynamic_data_js = "~/Content/js/components/charts/echarts/advance/dynamic-data.js"; 
                                    public const string event_river_js = "~/Content/js/components/charts/echarts/advance/event-river.js"; 
                                    public const string eventRiver2_data_js = "~/Content/js/components/charts/echarts/advance/eventRiver2-data.js"; 
                                    public const string multiple_series_rainbow_js = "~/Content/js/components/charts/echarts/advance/multiple-series-rainbow.js"; 
                                    public const string time_data_js = "~/Content/js/components/charts/echarts/advance/time-data.js"; 
                                    public const string timeline_options_js = "~/Content/js/components/charts/echarts/advance/timeline-options.js"; 
                                    public const string timeline_js = "~/Content/js/components/charts/echarts/advance/timeline.js"; 
                                    public const string tornado_js = "~/Content/js/components/charts/echarts/advance/tornado.js"; 
                                    public const string treemap_js = "~/Content/js/components/charts/echarts/advance/treemap.js"; 
                                    public const string word_cloud_js = "~/Content/js/components/charts/echarts/advance/word-cloud.js"; 
                                }
                            }
                            public static partial class bar_column 
                            {
                                public static class Assets
                                {
                                    public const string basic_bar_js = "~/Content/js/components/charts/echarts/bar-column/basic-bar.js"; 
                                    public const string basic_column_js = "~/Content/js/components/charts/echarts/bar-column/basic-column.js"; 
                                    public const string change_waterfall_js = "~/Content/js/components/charts/echarts/bar-column/change-waterfall.js"; 
                                    public const string column_multi_level_control_js = "~/Content/js/components/charts/echarts/bar-column/column-multi-level-control.js"; 
                                    public const string irregular_bar_js = "~/Content/js/components/charts/echarts/bar-column/irregular-bar.js"; 
                                    public const string stacked_bar_js = "~/Content/js/components/charts/echarts/bar-column/stacked-bar.js"; 
                                    public const string stacked_clustered_column_js = "~/Content/js/components/charts/echarts/bar-column/stacked-clustered-column.js"; 
                                    public const string stacked_column_js = "~/Content/js/components/charts/echarts/bar-column/stacked-column.js"; 
                                    public const string stacked_floating_bar_js = "~/Content/js/components/charts/echarts/bar-column/stacked-floating-bar.js"; 
                                    public const string thermometer_js = "~/Content/js/components/charts/echarts/bar-column/thermometer.js"; 
                                }
                            }
                            public static partial class combination 
                            {
                                public static class Assets
                                {
                                    public const string column_line_js = "~/Content/js/components/charts/echarts/combination/column-line.js"; 
                                    public const string column_pie_js = "~/Content/js/components/charts/echarts/combination/column-pie.js"; 
                                    public const string multiple_combination_js = "~/Content/js/components/charts/echarts/combination/multiple-combination.js"; 
                                    public const string scatter_line_js = "~/Content/js/components/charts/echarts/combination/scatter-line.js"; 
                                    public const string scatter_pie_js = "~/Content/js/components/charts/echarts/combination/scatter-pie.js"; 
                                }
                            }
                            public static partial class funnel_gauges 
                            {
                                public static class Assets
                                {
                                    public const string angular_gauge_js = "~/Content/js/components/charts/echarts/funnel-gauges/angular-gauge.js"; 
                                    public const string basic_gauge_js = "~/Content/js/components/charts/echarts/funnel-gauges/basic-gauge.js"; 
                                    public const string customized_gauge_js = "~/Content/js/components/charts/echarts/funnel-gauges/customized-gauge.js"; 
                                    public const string funnel_plot_js = "~/Content/js/components/charts/echarts/funnel-gauges/funnel-plot.js"; 
                                    public const string funnel_pyramid_js = "~/Content/js/components/charts/echarts/funnel-gauges/funnel-pyramid.js"; 
                                    public const string left_align_funnel_js = "~/Content/js/components/charts/echarts/funnel-gauges/left-align-funnel.js"; 
                                    public const string multiple_funnel1_js = "~/Content/js/components/charts/echarts/funnel-gauges/multiple-funnel1.js"; 
                                    public const string multiple_funnel2_js = "~/Content/js/components/charts/echarts/funnel-gauges/multiple-funnel2.js"; 
                                    public const string multiple_gauges_js = "~/Content/js/components/charts/echarts/funnel-gauges/multiple-gauges.js"; 
                                    public const string right_align_funnel_js = "~/Content/js/components/charts/echarts/funnel-gauges/right-align-funnel.js"; 
                                }
                            }
                            public static partial class line_area 
                            {
                                public static class Assets
                                {
                                    public const string basic_area_js = "~/Content/js/components/charts/echarts/line-area/basic-area.js"; 
                                    public const string basic_line_js = "~/Content/js/components/charts/echarts/line-area/basic-line.js"; 
                                    public const string irregular_line_time_axis_js = "~/Content/js/components/charts/echarts/line-area/irregular-line-time-axis.js"; 
                                    public const string irregular_line_two_value_axis_js = "~/Content/js/components/charts/echarts/line-area/irregular-line-two-value-axis.js"; 
                                    public const string line_multilevel_control_js = "~/Content/js/components/charts/echarts/line-area/line-multilevel-control.js"; 
                                    public const string stacked_area_js = "~/Content/js/components/charts/echarts/line-area/stacked-area.js"; 
                                    public const string stacked_line_js = "~/Content/js/components/charts/echarts/line-area/stacked-line.js"; 
                                }
                            }
                            public static partial class pie_doughnut 
                            {
                                public static class Assets
                                {
                                    public const string basic_pie_js = "~/Content/js/components/charts/echarts/pie-doughnut/basic-pie.js"; 
                                    public const string doughnut_infographic_js = "~/Content/js/components/charts/echarts/pie-doughnut/doughnut-infographic.js"; 
                                    public const string doughnut_js = "~/Content/js/components/charts/echarts/pie-doughnut/doughnut.js"; 
                                    public const string lasagna_js = "~/Content/js/components/charts/echarts/pie-doughnut/lasagna.js"; 
                                    public const string multiple_doughnut_js = "~/Content/js/components/charts/echarts/pie-doughnut/multiple-doughnut.js"; 
                                    public const string nested_pie_js = "~/Content/js/components/charts/echarts/pie-doughnut/nested-pie.js"; 
                                    public const string nightingale_rose_labels_js = "~/Content/js/components/charts/echarts/pie-doughnut/nightingale-rose-labels.js"; 
                                    public const string nightingale_rose_js = "~/Content/js/components/charts/echarts/pie-doughnut/nightingale-rose.js"; 
                                    public const string timeline_js = "~/Content/js/components/charts/echarts/pie-doughnut/timeline.js"; 
                                }
                            }
                            public static partial class radar_chord 
                            {
                                public static class Assets
                                {
                                    public const string basic_chord_js = "~/Content/js/components/charts/echarts/radar-chord/basic-chord.js"; 
                                    public const string basic_filled_radar_js = "~/Content/js/components/charts/echarts/radar-chord/basic-filled-radar.js"; 
                                    public const string basic_radar_js = "~/Content/js/components/charts/echarts/radar-chord/basic-radar.js"; 
                                    public const string chord_sorting_js = "~/Content/js/components/charts/echarts/radar-chord/chord-sorting.js"; 
                                    public const string multiple_dimensions_chord_js = "~/Content/js/components/charts/echarts/radar-chord/multiple-dimensions-chord.js"; 
                                    public const string multiple_radars_js = "~/Content/js/components/charts/echarts/radar-chord/multiple-radars.js"; 
                                    public const string non_ribbon_chord_js = "~/Content/js/components/charts/echarts/radar-chord/non-ribbon-chord.js"; 
                                    public const string radar_multi_level_control_js = "~/Content/js/components/charts/echarts/radar-chord/radar-multi-level-control.js"; 
                                    public const string wormhole_js = "~/Content/js/components/charts/echarts/radar-chord/wormhole.js"; 
                                }
                            }
                            public static partial class scatter 
                            {
                                public static class Assets
                                {
                                    public const string basic_bubble_js = "~/Content/js/components/charts/echarts/scatter/basic-bubble.js"; 
                                    public const string basic_scatter_js = "~/Content/js/components/charts/echarts/scatter/basic-scatter.js"; 
                                    public const string category_scatter_js = "~/Content/js/components/charts/echarts/scatter/category-scatter.js"; 
                                    public const string large_scale_scatter_js = "~/Content/js/components/charts/echarts/scatter/large-scale-scatter.js"; 
                                    public const string scatter_multi_level_control_js = "~/Content/js/components/charts/echarts/scatter/scatter-multi-level-control.js"; 
                                }
                            }
                            public static class Assets
                            {
                            }
                        }
                        public static partial class flot 
                        {
                            public static partial class bar 
                            {
                                public static class Assets
                                {
                                    public const string annotations_js = "~/Content/js/components/charts/flot/bar/annotations.js"; 
                                    public const string bar_js = "~/Content/js/components/charts/flot/bar/bar.js"; 
                                    public const string error_bars_js = "~/Content/js/components/charts/flot/bar/error-bars.js"; 
                                    public const string stacked_bar_js = "~/Content/js/components/charts/flot/bar/stacked-bar.js"; 
                                    public const string thresholds_js = "~/Content/js/components/charts/flot/bar/thresholds.js"; 
                                }
                            }
                            public static partial class line 
                            {
                                public static class Assets
                                {
                                    public const string line_js = "~/Content/js/components/charts/flot/line/line.js"; 
                                    public const string realtime_js = "~/Content/js/components/charts/flot/line/realtime.js"; 
                                    public const string series_types_js = "~/Content/js/components/charts/flot/line/series-types.js"; 
                                    public const string symbols_js = "~/Content/js/components/charts/flot/line/symbols.js"; 
                                    public const string tracking_js = "~/Content/js/components/charts/flot/line/tracking.js"; 
                                    public const string visitors_js = "~/Content/js/components/charts/flot/line/visitors.js"; 
                                }
                            }
                            public static partial class pie 
                            {
                                public static class Assets
                                {
                                    public const string donut_hole_js = "~/Content/js/components/charts/flot/pie/donut-hole.js"; 
                                    public const string interactive_pie_js = "~/Content/js/components/charts/flot/pie/interactive-pie.js"; 
                                    public const string label_formatter_js = "~/Content/js/components/charts/flot/pie/label-formatter.js"; 
                                    public const string pie_js = "~/Content/js/components/charts/flot/pie/pie.js"; 
                                    public const string rectangular_pie_js = "~/Content/js/components/charts/flot/pie/rectangular-pie.js"; 
                                    public const string tilted_pie_js = "~/Content/js/components/charts/flot/pie/tilted-pie.js"; 
                                }
                            }
                            public static class Assets
                            {
                            }
                        }
                        public static partial class gmaps 
                        {
                            public static class Assets
                            {
                                public const string maps_js = "~/Content/js/components/charts/gmaps/maps.js"; 
                                public const string overlays_js = "~/Content/js/components/charts/gmaps/overlays.js"; 
                                public const string routes_js = "~/Content/js/components/charts/gmaps/routes.js"; 
                                public const string services_js = "~/Content/js/components/charts/gmaps/services.js"; 
                                public const string static_maps_js = "~/Content/js/components/charts/gmaps/static-maps.js"; 
                                public const string utils_js = "~/Content/js/components/charts/gmaps/utils.js"; 
                            }
                        }
                        public static partial class google 
                        {
                            public static partial class bar 
                            {
                                public static class Assets
                                {
                                    public const string bar_intervals_js = "~/Content/js/components/charts/google/bar/bar-intervals.js"; 
                                    public const string bar_stacked_js = "~/Content/js/components/charts/google/bar/bar-stacked.js"; 
                                    public const string bar_js = "~/Content/js/components/charts/google/bar/bar.js"; 
                                    public const string column_js = "~/Content/js/components/charts/google/bar/column.js"; 
                                    public const string combo_js = "~/Content/js/components/charts/google/bar/combo.js"; 
                                    public const string histogram_js = "~/Content/js/components/charts/google/bar/histogram.js"; 
                                    public const string stacked_column_js = "~/Content/js/components/charts/google/bar/stacked-column.js"; 
                                }
                            }
                            public static partial class bubble 
                            {
                                public static class Assets
                                {
                                    public const string bubble_color_js = "~/Content/js/components/charts/google/bubble/bubble-color.js"; 
                                    public const string bubble_js = "~/Content/js/components/charts/google/bubble/bubble.js"; 
                                }
                            }
                            public static partial class line 
                            {
                                public static class Assets
                                {
                                    public const string area_interval_js = "~/Content/js/components/charts/google/line/area-interval.js"; 
                                    public const string area_stacked_stepped_js = "~/Content/js/components/charts/google/line/area-stacked-stepped.js"; 
                                    public const string area_stacked_js = "~/Content/js/components/charts/google/line/area-stacked.js"; 
                                    public const string area_stepped_js = "~/Content/js/components/charts/google/line/area-stepped.js"; 
                                    public const string area_js = "~/Content/js/components/charts/google/line/area.js"; 
                                    public const string line_interval_js = "~/Content/js/components/charts/google/line/line-interval.js"; 
                                    public const string line_js = "~/Content/js/components/charts/google/line/line.js"; 
                                }
                            }
                            public static partial class other 
                            {
                                public static class Assets
                                {
                                    public const string candlestick_js = "~/Content/js/components/charts/google/other/candlestick.js"; 
                                    public const string diff_js = "~/Content/js/components/charts/google/other/diff.js"; 
                                    public const string geo_js = "~/Content/js/components/charts/google/other/geo.js"; 
                                    public const string guage_js = "~/Content/js/components/charts/google/other/guage.js"; 
                                    public const string sankey_js = "~/Content/js/components/charts/google/other/sankey.js"; 
                                    public const string sticks_interval_js = "~/Content/js/components/charts/google/other/sticks-interval.js"; 
                                    public const string treemap_js = "~/Content/js/components/charts/google/other/treemap.js"; 
                                    public const string trendlines_js = "~/Content/js/components/charts/google/other/trendlines.js"; 
                                }
                            }
                            public static partial class pie 
                            {
                                public static class Assets
                                {
                                    public const string _3d_pie_exploded_js = "~/Content/js/components/charts/google/pie/3d-pie-exploded.js"; 
                                    public const string _3d_pie_js = "~/Content/js/components/charts/google/pie/3d-pie.js"; 
                                    public const string donut_exploded_js = "~/Content/js/components/charts/google/pie/donut-exploded.js"; 
                                    public const string donut_rotated_js = "~/Content/js/components/charts/google/pie/donut-rotated.js"; 
                                    public const string donut_js = "~/Content/js/components/charts/google/pie/donut.js"; 
                                    public const string pie_diff_border_js = "~/Content/js/components/charts/google/pie/pie-diff-border.js"; 
                                    public const string pie_diff_invert_js = "~/Content/js/components/charts/google/pie/pie-diff-invert.js"; 
                                    public const string pie_diff_opacity_js = "~/Content/js/components/charts/google/pie/pie-diff-opacity.js"; 
                                    public const string pie_diff_radius_js = "~/Content/js/components/charts/google/pie/pie-diff-radius.js"; 
                                    public const string pie_exploded_js = "~/Content/js/components/charts/google/pie/pie-exploded.js"; 
                                    public const string pie_rotated_js = "~/Content/js/components/charts/google/pie/pie-rotated.js"; 
                                    public const string pie_js = "~/Content/js/components/charts/google/pie/pie.js"; 
                                }
                            }
                            public static partial class scatter 
                            {
                                public static class Assets
                                {
                                    public const string point_interval_js = "~/Content/js/components/charts/google/scatter/point-interval.js"; 
                                    public const string scatter_diff_js = "~/Content/js/components/charts/google/scatter/scatter-diff.js"; 
                                    public const string scatter_material_js = "~/Content/js/components/charts/google/scatter/scatter-material.js"; 
                                    public const string scatter_js = "~/Content/js/components/charts/google/scatter/scatter.js"; 
                                }
                            }
                            public static class Assets
                            {
                            }
                        }
                        public static partial class jqvmap 
                        {
                            public static class Assets
                            {
                                public const string jqvmap_js = "~/Content/js/components/charts/jqvmap/jqvmap.js"; 
                            }
                        }
                        public static partial class jvector 
                        {
                            public static class Assets
                            {
                                public const string jvector_js = "~/Content/js/components/charts/jvector/jvector.js"; 
                            }
                        }
                        public static partial class mapael 
                        {
                            public static partial class advance 
                            {
                                public static class Assets
                                {
                                    public const string afterInit_extend_js = "~/Content/js/components/charts/mapael/advance/afterInit-extend.js"; 
                                    public const string display_information_js = "~/Content/js/components/charts/mapael/advance/display-information.js"; 
                                    public const string links_between_plotted_cities_js = "~/Content/js/components/charts/mapael/advance/links-between-plotted-cities.js"; 
                                    public const string multiple_legends_plotted_cities_js = "~/Content/js/components/charts/mapael/advance/multiple-legends-plotted-cities.js"; 
                                    public const string zoom_on_click_js = "~/Content/js/components/charts/mapael/advance/zoom-on-click.js"; 
                                }
                            }
                            public static partial class basic 
                            {
                                public static class Assets
                                {
                                    public const string horizontal_legend_js = "~/Content/js/components/charts/mapael/basic/horizontal-legend.js"; 
                                    public const string href_plotted_cities_js = "~/Content/js/components/charts/mapael/basic/href-plotted-cities.js"; 
                                    public const string legend_images_js = "~/Content/js/components/charts/mapael/basic/legend-images.js"; 
                                    public const string legend_plotted_cities_js = "~/Content/js/components/charts/mapael/basic/legend-plotted-cities.js"; 
                                    public const string zoom_js = "~/Content/js/components/charts/mapael/basic/zoom.js"; 
                                }
                            }
                            public static class Assets
                            {
                            }
                        }
                        public static partial class morris 
                        {
                            public static class Assets
                            {
                                public const string area_js = "~/Content/js/components/charts/morris/area.js"; 
                                public const string bar_js = "~/Content/js/components/charts/morris/bar.js"; 
                                public const string donut_js = "~/Content/js/components/charts/morris/donut.js"; 
                                public const string line_js = "~/Content/js/components/charts/morris/line.js"; 
                                public const string smooth_area_js = "~/Content/js/components/charts/morris/smooth-area.js"; 
                                public const string smooth_line_js = "~/Content/js/components/charts/morris/smooth-line.js"; 
                            }
                        }
                        public static partial class rickshaw 
                        {
                            public static class Assets
                            {
                                public const string area_js = "~/Content/js/components/charts/rickshaw/area.js"; 
                                public const string bar_js = "~/Content/js/components/charts/rickshaw/bar.js"; 
                                public const string line_js = "~/Content/js/components/charts/rickshaw/line.js"; 
                                public const string multiple_renderers_js = "~/Content/js/components/charts/rickshaw/multiple-renderers.js"; 
                                public const string scatter_js = "~/Content/js/components/charts/rickshaw/scatter.js"; 
                            }
                        }
                        public static class Assets
                        {
                        }
                    }
                    public static partial class coming_soon 
                    {
                        public static class Assets
                        {
                            public const string coming_soon_js = "~/Content/js/components/coming-soon/coming-soon.js"; 
                        }
                    }
                    public static partial class dropdowns 
                    {
                        public static class Assets
                        {
                            public const string dropdowns_js = "~/Content/js/components/dropdowns/dropdowns.js"; 
                        }
                    }
                    public static partial class editors 
                    {
                        public static class Assets
                        {
                            public const string editor_ace_js = "~/Content/js/components/editors/editor-ace.js"; 
                            public const string editor_ckeditor_js = "~/Content/js/components/editors/editor-ckeditor.js"; 
                            public const string editor_codemirror_js = "~/Content/js/components/editors/editor-codemirror.js"; 
                            public const string editor_quill_js = "~/Content/js/components/editors/editor-quill.js"; 
                            public const string editor_summernote_js = "~/Content/js/components/editors/editor-summernote.js"; 
                            public const string editor_tinymce_js = "~/Content/js/components/editors/editor-tinymce.js"; 
                        }
                    }
                    public static partial class extensions 
                    {
                        public static partial class internationalization 
                        {
                            public static class Assets
                            {
                                public const string after_init_js = "~/Content/js/components/extensions/internationalization/after-init.js"; 
                                public const string fallback_js = "~/Content/js/components/extensions/internationalization/fallback.js"; 
                                public const string on_init_js = "~/Content/js/components/extensions/internationalization/on-init.js"; 
                                public const string query_string_js = "~/Content/js/components/extensions/internationalization/query-string.js"; 
                                public const string resources_js = "~/Content/js/components/extensions/internationalization/resources.js"; 
                                public const string xhr_backend_js = "~/Content/js/components/extensions/internationalization/xhr-backend.js"; 
                            }
                        }
                        public static class Assets
                        {
                            public const string block_ui_js = "~/Content/js/components/extensions/block-ui.js"; 
                            public const string clndr_js = "~/Content/js/components/extensions/clndr.js"; 
                            public const string context_menu_js = "~/Content/js/components/extensions/context-menu.js"; 
                            public const string date_time_dropper_js = "~/Content/js/components/extensions/date-time-dropper.js"; 
                            public const string drag_drop_js = "~/Content/js/components/extensions/drag-drop.js"; 
                            public const string dropzone_js = "~/Content/js/components/extensions/dropzone.js"; 
                            public const string fullcalendar_js = "~/Content/js/components/extensions/fullcalendar.js"; 
                            public const string image_cropper_js = "~/Content/js/components/extensions/image-cropper.js"; 
                            public const string jquery_file_upload_js = "~/Content/js/components/extensions/jquery-file-upload.js"; 
                            public const string knob_js = "~/Content/js/components/extensions/knob.js"; 
                            public const string list_js = "~/Content/js/components/extensions/list.js"; 
                            public const string long_press_js = "~/Content/js/components/extensions/long-press.js"; 
                            public const string noui_slider_js = "~/Content/js/components/extensions/noui-slider.js"; 
                            public const string offline_js = "~/Content/js/components/extensions/offline.js"; 
                            public const string rating_js = "~/Content/js/components/extensions/rating.js"; 
                            public const string sweet_alerts_js = "~/Content/js/components/extensions/sweet-alerts.js"; 
                            public const string toastr_js = "~/Content/js/components/extensions/toastr.js"; 
                            public const string toolbar_js = "~/Content/js/components/extensions/toolbar.js"; 
                            public const string tree_view_js = "~/Content/js/components/extensions/tree-view.js"; 
                            public const string unslider_js = "~/Content/js/components/extensions/unslider.js"; 
                        }
                    }
                    public static partial class forms 
                    {
                        public static partial class extended 
                        {
                            public static class Assets
                            {
                                public const string form_card_js = "~/Content/js/components/forms/extended/form-card.js"; 
                                public const string form_formatter_js = "~/Content/js/components/forms/extended/form-formatter.js"; 
                                public const string form_inputmask_js = "~/Content/js/components/forms/extended/form-inputmask.js"; 
                                public const string form_maxlength_js = "~/Content/js/components/forms/extended/form-maxlength.js"; 
                                public const string form_typeahead_js = "~/Content/js/components/forms/extended/form-typeahead.js"; 
                            }
                        }
                        public static partial class listbox 
                        {
                            public static class Assets
                            {
                                public const string form_duallistbox_js = "~/Content/js/components/forms/listbox/form-duallistbox.js"; 
                            }
                        }
                        public static partial class select 
                        {
                            public static class Assets
                            {
                                public const string form_select2_js = "~/Content/js/components/forms/select/form-select2.js"; 
                                public const string form_selectBoxIt_js = "~/Content/js/components/forms/select/form-selectBoxIt.js"; 
                                public const string form_selectivity_js = "~/Content/js/components/forms/select/form-selectivity.js"; 
                                public const string form_selectize_js = "~/Content/js/components/forms/select/form-selectize.js"; 
                            }
                        }
                        public static partial class tags 
                        {
                            public static class Assets
                            {
                                public const string tagging_js = "~/Content/js/components/forms/tags/tagging.js"; 
                            }
                        }
                        public static partial class validation 
                        {
                            public static class Assets
                            {
                                public const string form_validation_js = "~/Content/js/components/forms/validation/form-validation.js"; 
                            }
                        }
                        public static class Assets
                        {
                            public const string checkbox_radio_js = "~/Content/js/components/forms/checkbox-radio.js"; 
                            public const string form_login_register_js = "~/Content/js/components/forms/form-login-register.js"; 
                            public const string form_repeater_js = "~/Content/js/components/forms/form-repeater.js"; 
                            public const string input_groups_js = "~/Content/js/components/forms/input-groups.js"; 
                            public const string switch_js = "~/Content/js/components/forms/switch.js"; 
                            public const string switchery_js = "~/Content/js/components/forms/switchery.js"; 
                            public const string wizard_steps_js = "~/Content/js/components/forms/wizard-steps.js"; 
                        }
                    }
                    public static partial class gallery 
                    {
                        public static partial class photo_swipe 
                        {
                            public static class Assets
                            {
                                public const string photoswipe_script_js = "~/Content/js/components/gallery/photo-swipe/photoswipe-script.js"; 
                            }
                        }
                        public static class Assets
                        {
                        }
                    }
                    public static partial class modal 
                    {
                        public static class Assets
                        {
                            public const string components_modal_js = "~/Content/js/components/modal/components-modal.js"; 
                        }
                    }
                    public static partial class navs 
                    {
                        public static class Assets
                        {
                            public const string navs_js = "~/Content/js/components/navs/navs.js"; 
                        }
                    }
                    public static partial class pages 
                    {
                        public static class Assets
                        {
                            public const string content_sidebar_js = "~/Content/js/components/pages/content-sidebar.js"; 
                            public const string dashboard_analytics_js = "~/Content/js/components/pages/dashboard-analytics.js"; 
                            public const string dashboard_crm_js = "~/Content/js/components/pages/dashboard-crm.js"; 
                            public const string dashboard_ecommerce_js = "~/Content/js/components/pages/dashboard-ecommerce.js"; 
                            public const string dashboard_fitness_js = "~/Content/js/components/pages/dashboard-fitness.js"; 
                            public const string dashboard_project_js = "~/Content/js/components/pages/dashboard-project.js"; 
                            public const string invoice_sales_and_expenses_js = "~/Content/js/components/pages/invoice-sales-and-expenses.js"; 
                            public const string invoice_top_expenses_js = "~/Content/js/components/pages/invoice-top-expenses.js"; 
                            public const string invoice_total_recievables_js = "~/Content/js/components/pages/invoice-total-recievables.js"; 
                            public const string invoices_list_js = "~/Content/js/components/pages/invoices-list.js"; 
                            public const string project_bug_list_js = "~/Content/js/components/pages/project-bug-list.js"; 
                            public const string project_summary_bug_js = "~/Content/js/components/pages/project-summary-bug.js"; 
                            public const string project_summary_task_js = "~/Content/js/components/pages/project-summary-task.js"; 
                            public const string project_task_list_js = "~/Content/js/components/pages/project-task-list.js"; 
                            public const string scrumboard_js = "~/Content/js/components/pages/scrumboard.js"; 
                            public const string sk_content_sidebar_js = "~/Content/js/components/pages/sk-content-sidebar.js"; 
                            public const string timeline_js = "~/Content/js/components/pages/timeline.js"; 
                            public const string users_contacts_js = "~/Content/js/components/pages/users-contacts.js"; 
                        }
                    }
                    public static partial class pagination 
                    {
                        public static class Assets
                        {
                            public const string pagination_js = "~/Content/js/components/pagination/pagination.js"; 
                        }
                    }
                    public static partial class pickers 
                    {
                        public static partial class colorpicker 
                        {
                            public static class Assets
                            {
                                public const string picker_color_js = "~/Content/js/components/pickers/colorpicker/picker-color.js"; 
                            }
                        }
                        public static partial class dateTime 
                        {
                            public static class Assets
                            {
                                public const string picker_date_time_js = "~/Content/js/components/pickers/dateTime/picker-date-time.js"; 
                            }
                        }
                        public static class Assets
                        {
                        }
                    }
                    public static partial class popover 
                    {
                        public static class Assets
                        {
                            public const string popover_js = "~/Content/js/components/popover/popover.js"; 
                        }
                    }
                    public static partial class tables 
                    {
                        public static partial class components 
                        {
                            public static class Assets
                            {
                                public const string table_components_js = "~/Content/js/components/tables/components/table-components.js"; 
                            }
                        }
                        public static partial class datatables 
                        {
                            public static class Assets
                            {
                                public const string datatable_advanced_js = "~/Content/js/components/tables/datatables/datatable-advanced.js"; 
                                public const string datatable_api_js = "~/Content/js/components/tables/datatables/datatable-api.js"; 
                                public const string datatable_basic_js = "~/Content/js/components/tables/datatables/datatable-basic.js"; 
                                public const string datatable_styling_js = "~/Content/js/components/tables/datatables/datatable-styling.js"; 
                            }
                        }
                        public static partial class datatables_extensions 
                        {
                            public static partial class datatable_button 
                            {
                                public static class Assets
                                {
                                    public const string datatable_button_basic_js = "~/Content/js/components/tables/datatables-extensions/datatable-button/datatable-button-basic.js"; 
                                    public const string datatable_extensions_api_js = "~/Content/js/components/tables/datatables-extensions/datatable-button/datatable-extensions-api.js"; 
                                    public const string datatable_flash_js = "~/Content/js/components/tables/datatables-extensions/datatable-button/datatable-flash.js"; 
                                    public const string datatable_html5_js = "~/Content/js/components/tables/datatables-extensions/datatable-button/datatable-html5.js"; 
                                    public const string datatable_print_js = "~/Content/js/components/tables/datatables-extensions/datatable-button/datatable-print.js"; 
                                    public const string datatable_visibility_js = "~/Content/js/components/tables/datatables-extensions/datatable-button/datatable-visibility.js"; 
                                }
                            }
                            public static class Assets
                            {
                                public const string datatable_autofill_js = "~/Content/js/components/tables/datatables-extensions/datatable-autofill.js"; 
                                public const string datatable_colvis_js = "~/Content/js/components/tables/datatables-extensions/datatable-colvis.js"; 
                                public const string datatable_fixed_column_js = "~/Content/js/components/tables/datatables-extensions/datatable-fixed-column.js"; 
                                public const string datatable_fixed_header_js = "~/Content/js/components/tables/datatables-extensions/datatable-fixed-header.js"; 
                                public const string datatable_keytable_js = "~/Content/js/components/tables/datatables-extensions/datatable-keytable.js"; 
                                public const string datatable_responsive_js = "~/Content/js/components/tables/datatables-extensions/datatable-responsive.js"; 
                                public const string datatable_rowreorder_js = "~/Content/js/components/tables/datatables-extensions/datatable-rowreorder.js"; 
                                public const string datatable_select_js = "~/Content/js/components/tables/datatables-extensions/datatable-select.js"; 
                                public const string datatables_colreorder_js = "~/Content/js/components/tables/datatables-extensions/datatables-colreorder.js"; 
                                public const string datatables_sources_js = "~/Content/js/components/tables/datatables-extensions/datatables-sources.js"; 
                            }
                        }
                        public static partial class handsontable 
                        {
                            public static class Assets
                            {
                                public const string handsontable_appearance_js = "~/Content/js/components/tables/handsontable/handsontable-appearance.js"; 
                                public const string handsontable_cell_features_js = "~/Content/js/components/tables/handsontable/handsontable-cell-features.js"; 
                                public const string handsontable_cell_types_js = "~/Content/js/components/tables/handsontable/handsontable-cell-types.js"; 
                                public const string handsontable_columns_only_js = "~/Content/js/components/tables/handsontable/handsontable-columns-only.js"; 
                                public const string handsontable_data_operations_js = "~/Content/js/components/tables/handsontable/handsontable-data-operations.js"; 
                                public const string handsontable_integrations_js = "~/Content/js/components/tables/handsontable/handsontable-integrations.js"; 
                                public const string handsontable_rows_columns_js = "~/Content/js/components/tables/handsontable/handsontable-rows-columns.js"; 
                                public const string handsontable_rows_only_js = "~/Content/js/components/tables/handsontable/handsontable-rows-only.js"; 
                                public const string handsontable_utilities_js = "~/Content/js/components/tables/handsontable/handsontable-utilities.js"; 
                            }
                        }
                        public static partial class jsgrid 
                        {
                            public static class Assets
                            {
                                public const string jsgrid_js = "~/Content/js/components/tables/jsgrid/jsgrid.js"; 
                            }
                        }
                        public static class Assets
                        {
                        }
                    }
                    public static partial class tooltip 
                    {
                        public static class Assets
                        {
                            public const string tooltip_js = "~/Content/js/components/tooltip/tooltip.js"; 
                        }
                    }
                    public static partial class ui 
                    {
                        public static partial class jquery_ui 
                        {
                            public static class Assets
                            {
                                public const string autocomplete_js = "~/Content/js/components/ui/jquery-ui/autocomplete.js"; 
                                public const string buttons_selects_js = "~/Content/js/components/ui/jquery-ui/buttons-selects.js"; 
                                public const string date_pickers_js = "~/Content/js/components/ui/jquery-ui/date-pickers.js"; 
                                public const string dialog_tooltip_js = "~/Content/js/components/ui/jquery-ui/dialog-tooltip.js"; 
                                public const string interactions_js = "~/Content/js/components/ui/jquery-ui/interactions.js"; 
                                public const string navigations_js = "~/Content/js/components/ui/jquery-ui/navigations.js"; 
                                public const string slider_spinner_js = "~/Content/js/components/ui/jquery-ui/slider-spinner.js"; 
                            }
                        }
                        public static class Assets
                        {
                            public const string breadcrumbs_with_stats_js = "~/Content/js/components/ui/breadcrumbs-with-stats.js"; 
                            public const string scrollable_js = "~/Content/js/components/ui/scrollable.js"; 
                        }
                    }
                    public static class Assets
                    {
                    }
                }
                public static partial class core 
                {
                    public static partial class libraries 
                    {
                        public static partial class jquery_ui 
                        {
                            public static partial class globalize 
                            {
                                public static partial class cultures 
                                {
                                    public static class Assets
                                    {
                                        public const string globalize_culture_de_DE_js = "~/Content/js/core/libraries/jquery_ui/globalize/cultures/globalize.culture.de-DE.js"; 
                                        public const string globalize_culture_ja_JP_js = "~/Content/js/core/libraries/jquery_ui/globalize/cultures/globalize.culture.ja-JP.js"; 
                                    }
                                }
                                public static class Assets
                                {
                                    public const string globalize_js = "~/Content/js/core/libraries/jquery_ui/globalize/globalize.js"; 
                                }
                            }
                            public static class Assets
                            {
                                public const string jquery_ui_min_js = "~/Content/js/core/libraries/jquery_ui/jquery-ui.min.js"; 
                            }
                        }
                        public static class Assets
                        {
                        }
                    }
                    public static class Assets
                    {
                    }
                }
                public static partial class plugins 
                {
                    public static partial class animation 
                    {
                        public static class Assets
                        {
                            public const string jquery_appear_js = "~/Content/js/plugins/animation/jquery.appear.js"; 
                        }
                    }
                    public static partial class bgvideo 
                    {
                        public static class Assets
                        {
                            public const string bigvideo_js = "~/Content/js/plugins/bgvideo/bigvideo.js"; 
                            public const string imagesloaded_pkgd_min_js = "~/Content/js/plugins/bgvideo/imagesloaded.pkgd.min.js"; 
                            public const string jquery_tubular_1_0_js = "~/Content/js/plugins/bgvideo/jquery.tubular.1.0.js"; 
                            public const string video_min_js = "~/Content/js/plugins/bgvideo/video.min.js"; 
                        }
                    }
                    public static partial class buttons 
                    {
                        public static class Assets
                        {
                            public const string ladda_min_js = "~/Content/js/plugins/buttons/ladda.min.js"; 
                            public const string spin_min_js = "~/Content/js/plugins/buttons/spin.min.js"; 
                        }
                    }
                    public static partial class charts 
                    {
                        public static partial class echarts 
                        {
                            public static class Assets
                            {
                                public const string echarts_js = "~/Content/js/plugins/charts/echarts/echarts.js"; 
                            }
                        }
                        public static partial class flot 
                        {
                            public static class Assets
                            {
                                public const string jquery_flot_categories_js = "~/Content/js/plugins/charts/flot/jquery.flot.categories.js"; 
                                public const string jquery_flot_errorbars_js = "~/Content/js/plugins/charts/flot/jquery.flot.errorbars.js"; 
                                public const string jquery_flot_min_js = "~/Content/js/plugins/charts/flot/jquery.flot.min.js"; 
                                public const string jquery_flot_navigate_js = "~/Content/js/plugins/charts/flot/jquery.flot.navigate.js"; 
                                public const string jquery_flot_pie_js = "~/Content/js/plugins/charts/flot/jquery.flot.pie.js"; 
                                public const string jquery_flot_resize_js = "~/Content/js/plugins/charts/flot/jquery.flot.resize.js"; 
                                public const string jquery_flot_selection_js = "~/Content/js/plugins/charts/flot/jquery.flot.selection.js"; 
                                public const string jquery_flot_stack_js = "~/Content/js/plugins/charts/flot/jquery.flot.stack.js"; 
                                public const string jquery_flot_symbol_js = "~/Content/js/plugins/charts/flot/jquery.flot.symbol.js"; 
                                public const string jquery_flot_threshold_js = "~/Content/js/plugins/charts/flot/jquery.flot.threshold.js"; 
                                public const string jquery_flot_time_js = "~/Content/js/plugins/charts/flot/jquery.flot.time.js"; 
                            }
                        }
                        public static partial class jqvmap 
                        {
                            public static partial class maps 
                            {
                                public static partial class continents 
                                {
                                    public static class Assets
                                    {
                                        public const string jquery_vmap_africa_js = "~/Content/js/plugins/charts/jqvmap/maps/continents/jquery.vmap.africa.js"; 
                                        public const string jquery_vmap_asia_js = "~/Content/js/plugins/charts/jqvmap/maps/continents/jquery.vmap.asia.js"; 
                                        public const string jquery_vmap_australia_js = "~/Content/js/plugins/charts/jqvmap/maps/continents/jquery.vmap.australia.js"; 
                                        public const string jquery_vmap_europe_js = "~/Content/js/plugins/charts/jqvmap/maps/continents/jquery.vmap.europe.js"; 
                                        public const string jquery_vmap_north_america_js = "~/Content/js/plugins/charts/jqvmap/maps/continents/jquery.vmap.north-america.js"; 
                                        public const string jquery_vmap_south_america_js = "~/Content/js/plugins/charts/jqvmap/maps/continents/jquery.vmap.south-america.js"; 
                                    }
                                }
                                public static class Assets
                                {
                                    public const string jquery_vmap_usa_js = "~/Content/js/plugins/charts/jqvmap/maps/jquery.vmap.usa.js"; 
                                    public const string jquery_vmap_world_js = "~/Content/js/plugins/charts/jqvmap/maps/jquery.vmap.world.js"; 
                                }
                            }
                            public static class Assets
                            {
                                public const string jquery_vmap_min_js = "~/Content/js/plugins/charts/jqvmap/jquery.vmap.min.js"; 
                            }
                        }
                        public static partial class jvector 
                        {
                            public static class Assets
                            {
                                public const string jquery_jvectormap_2_0_3_min_js = "~/Content/js/plugins/charts/jvector/jquery-jvectormap-2.0.3.min.js"; 
                                public const string jquery_jvectormap_de_merc_js = "~/Content/js/plugins/charts/jvector/jquery-jvectormap-de-merc.js"; 
                                public const string jquery_jvectormap_us_aea_js = "~/Content/js/plugins/charts/jvector/jquery-jvectormap-us-aea.js"; 
                                public const string jquery_jvectormap_us_lcc_js = "~/Content/js/plugins/charts/jvector/jquery-jvectormap-us-lcc.js"; 
                                public const string jquery_jvectormap_world_mill_js = "~/Content/js/plugins/charts/jvector/jquery-jvectormap-world-mill.js"; 
                            }
                        }
                        public static partial class mapael 
                        {
                            public static partial class maps 
                            {
                                public static class Assets
                                {
                                    public const string france_departments_js = "~/Content/js/plugins/charts/mapael/maps/france_departments.js"; 
                                    public const string usa_states_js = "~/Content/js/plugins/charts/mapael/maps/usa_states.js"; 
                                    public const string world_countries_js = "~/Content/js/plugins/charts/mapael/maps/world_countries.js"; 
                                }
                            }
                            public static class Assets
                            {
                                public const string jquery_mapael_min_js = "~/Content/js/plugins/charts/mapael/jquery.mapael.min.js"; 
                            }
                        }
                        public static class Assets
                        {
                            public const string c3_min_js = "~/Content/js/plugins/charts/c3.min.js"; 
                            public const string chart_min_js = "~/Content/js/plugins/charts/chart.min.js"; 
                            public const string chartist_plugin_tooltip_js = "~/Content/js/plugins/charts/chartist-plugin-tooltip.js"; 
                            public const string chartist_min_js = "~/Content/js/plugins/charts/chartist.min.js"; 
                            public const string d3_donut3D_js = "~/Content/js/plugins/charts/d3-donut3D.js"; 
                            public const string d3_min_js = "~/Content/js/plugins/charts/d3.min.js"; 
                            public const string d3_tip_js = "~/Content/js/plugins/charts/d3.tip.js"; 
                            public const string dimple_min_js = "~/Content/js/plugins/charts/dimple.min.js"; 
                            public const string gantt_chart_d3_js = "~/Content/js/plugins/charts/gantt-chart-d3.js"; 
                            public const string gmaps_min_js = "~/Content/js/plugins/charts/gmaps.min.js"; 
                            public const string gradient_pie_d3_js = "~/Content/js/plugins/charts/gradient-pie-d3.js"; 
                            public const string jquery_sparkline_min_js = "~/Content/js/plugins/charts/jquery.sparkline.min.js"; 
                            public const string morris_min_js = "~/Content/js/plugins/charts/morris.min.js"; 
                            public const string raphael_min_js = "~/Content/js/plugins/charts/raphael-min.js"; 
                            public const string rickshaw_min_js = "~/Content/js/plugins/charts/rickshaw.min.js"; 
                            public const string sankey_js = "~/Content/js/plugins/charts/sankey.js"; 
                            public const string venn_js = "~/Content/js/plugins/charts/venn.js"; 
                        }
                    }
                    public static partial class coming_soon 
                    {
                        public static class Assets
                        {
                            public const string jquery_countdown_min_js = "~/Content/js/plugins/coming-soon/jquery.countdown.min.js"; 
                        }
                    }
                    public static partial class editors 
                    {
                        public static partial class ace 
                        {
                            public static class Assets
                            {
                                public const string ace_js = "~/Content/js/plugins/editors/ace/ace.js"; 
                                public const string ext_language_tools_js = "~/Content/js/plugins/editors/ace/ext-language_tools.js"; 
                            }
                        }
                        public static partial class ckeditor 
                        {
                            public static class Assets
                            {
                                public const string ckeditor_js = "~/Content/js/plugins/editors/ckeditor/ckeditor.js"; 
                            }
                        }
                        public static partial class codemirror 
                        {
                            public static partial class addon 
                            {
                                public static partial class comment 
                                {
                                    public static class Assets
                                    {
                                        public const string comment_js = "~/Content/js/plugins/editors/codemirror/addon/comment/comment.js"; 
                                    }
                                }
                                public static partial class dialog 
                                {
                                    public static class Assets
                                    {
                                        public const string dialog_js = "~/Content/js/plugins/editors/codemirror/addon/dialog/dialog.js"; 
                                    }
                                }
                                public static partial class display 
                                {
                                    public static class Assets
                                    {
                                        public const string rulers_js = "~/Content/js/plugins/editors/codemirror/addon/display/rulers.js"; 
                                    }
                                }
                                public static partial class edit 
                                {
                                    public static class Assets
                                    {
                                        public const string closebrackets_js = "~/Content/js/plugins/editors/codemirror/addon/edit/closebrackets.js"; 
                                        public const string matchbrackets_js = "~/Content/js/plugins/editors/codemirror/addon/edit/matchbrackets.js"; 
                                    }
                                }
                                public static partial class fold 
                                {
                                    public static class Assets
                                    {
                                        public const string brace_fold_js = "~/Content/js/plugins/editors/codemirror/addon/fold/brace-fold.js"; 
                                        public const string comment_fold_js = "~/Content/js/plugins/editors/codemirror/addon/fold/comment-fold.js"; 
                                        public const string foldcode_js = "~/Content/js/plugins/editors/codemirror/addon/fold/foldcode.js"; 
                                        public const string foldgutter_js = "~/Content/js/plugins/editors/codemirror/addon/fold/foldgutter.js"; 
                                        public const string markdown_fold_js = "~/Content/js/plugins/editors/codemirror/addon/fold/markdown-fold.js"; 
                                        public const string xml_fold_js = "~/Content/js/plugins/editors/codemirror/addon/fold/xml-fold.js"; 
                                    }
                                }
                                public static partial class mode 
                                {
                                    public static class Assets
                                    {
                                        public const string loadmode_js = "~/Content/js/plugins/editors/codemirror/addon/mode/loadmode.js"; 
                                        public const string simple_js = "~/Content/js/plugins/editors/codemirror/addon/mode/simple.js"; 
                                    }
                                }
                                public static partial class scroll 
                                {
                                    public static class Assets
                                    {
                                        public const string annotatescrollbar_js = "~/Content/js/plugins/editors/codemirror/addon/scroll/annotatescrollbar.js"; 
                                    }
                                }
                                public static partial class search 
                                {
                                    public static class Assets
                                    {
                                        public const string match_highlighter_js = "~/Content/js/plugins/editors/codemirror/addon/search/match-highlighter.js"; 
                                        public const string matchesonscrollbar_js = "~/Content/js/plugins/editors/codemirror/addon/search/matchesonscrollbar.js"; 
                                        public const string search_js = "~/Content/js/plugins/editors/codemirror/addon/search/search.js"; 
                                        public const string searchcursor_js = "~/Content/js/plugins/editors/codemirror/addon/search/searchcursor.js"; 
                                    }
                                }
                                public static partial class selection 
                                {
                                    public static class Assets
                                    {
                                        public const string active_line_js = "~/Content/js/plugins/editors/codemirror/addon/selection/active-line.js"; 
                                        public const string mark_selection_js = "~/Content/js/plugins/editors/codemirror/addon/selection/mark-selection.js"; 
                                    }
                                }
                                public static partial class wrap 
                                {
                                    public static class Assets
                                    {
                                        public const string hardwrap_js = "~/Content/js/plugins/editors/codemirror/addon/wrap/hardwrap.js"; 
                                    }
                                }
                                public static class Assets
                                {
                                }
                            }
                            public static partial class keymap 
                            {
                                public static class Assets
                                {
                                    public const string sublime_js = "~/Content/js/plugins/editors/codemirror/keymap/sublime.js"; 
                                }
                            }
                            public static partial class lib 
                            {
                                public static class Assets
                                {
                                    public const string codemirror_js = "~/Content/js/plugins/editors/codemirror/lib/codemirror.js"; 
                                }
                            }
                            public static partial class mode 
                            {
                                public static partial class css 
                                {
                                    public static class Assets
                                    {
                                        public const string css_js = "~/Content/js/plugins/editors/codemirror/mode/css/css.js"; 
                                    }
                                }
                                public static partial class htmlmixed 
                                {
                                    public static class Assets
                                    {
                                        public const string htmlmixed_js = "~/Content/js/plugins/editors/codemirror/mode/htmlmixed/htmlmixed.js"; 
                                    }
                                }
                                public static partial class javascript 
                                {
                                    public static class Assets
                                    {
                                        public const string javascript_js = "~/Content/js/plugins/editors/codemirror/mode/javascript/javascript.js"; 
                                    }
                                }
                                public static partial class markdown 
                                {
                                    public static class Assets
                                    {
                                        public const string markdown_js = "~/Content/js/plugins/editors/codemirror/mode/markdown/markdown.js"; 
                                    }
                                }
                                public static partial class xml 
                                {
                                    public static class Assets
                                    {
                                        public const string xml_js = "~/Content/js/plugins/editors/codemirror/mode/xml/xml.js"; 
                                    }
                                }
                                public static class Assets
                                {
                                    public const string meta_js = "~/Content/js/plugins/editors/codemirror/mode/meta.js"; 
                                }
                            }
                            public static class Assets
                            {
                            }
                        }
                        public static partial class quill 
                        {
                            public static class Assets
                            {
                                public const string highlight_min_js = "~/Content/js/plugins/editors/quill/highlight.min.js"; 
                                public const string katex_min_js = "~/Content/js/plugins/editors/quill/katex.min.js"; 
                                public const string quill_min_js = "~/Content/js/plugins/editors/quill/quill.min.js"; 
                            }
                        }
                        public static partial class summernote 
                        {
                            public static class Assets
                            {
                                public const string summernote_js = "~/Content/js/plugins/editors/summernote/summernote.js"; 
                            }
                        }
                        public static partial class tinymce 
                        {
                            public static class Assets
                            {
                                public const string tinymce_js = "~/Content/js/plugins/editors/tinymce/tinymce.js"; 
                            }
                        }
                        public static class Assets
                        {
                        }
                    }
                    public static partial class extensions 
                    {
                        public static partial class jquery_file_upload 
                        {
                            public static partial class vendor 
                            {
                                public static class Assets
                                {
                                    public const string canvas_to_blob_min_js = "~/Content/js/plugins/extensions/jquery-file-upload/vendor/canvas-to-blob.min.js"; 
                                    public const string jquery_blueimp_gallery_min_js = "~/Content/js/plugins/extensions/jquery-file-upload/vendor/jquery.blueimp-gallery.min.js"; 
                                    public const string jquery_ui_widget_js = "~/Content/js/plugins/extensions/jquery-file-upload/vendor/jquery.ui.widget.js"; 
                                    public const string load_image_all_min_js = "~/Content/js/plugins/extensions/jquery-file-upload/vendor/load-image.all.min.js"; 
                                    public const string tmpl_min_js = "~/Content/js/plugins/extensions/jquery-file-upload/vendor/tmpl.min.js"; 
                                }
                            }
                            public static class Assets
                            {
                                public const string jquery_fileupload_audio_js = "~/Content/js/plugins/extensions/jquery-file-upload/jquery.fileupload-audio.js"; 
                                public const string jquery_fileupload_image_js = "~/Content/js/plugins/extensions/jquery-file-upload/jquery.fileupload-image.js"; 
                                public const string jquery_fileupload_process_js = "~/Content/js/plugins/extensions/jquery-file-upload/jquery.fileupload-process.js"; 
                                public const string jquery_fileupload_ui_js = "~/Content/js/plugins/extensions/jquery-file-upload/jquery.fileupload-ui.js"; 
                                public const string jquery_fileupload_validate_js = "~/Content/js/plugins/extensions/jquery-file-upload/jquery.fileupload-validate.js"; 
                                public const string jquery_fileupload_video_js = "~/Content/js/plugins/extensions/jquery-file-upload/jquery.fileupload-video.js"; 
                                public const string jquery_fileupload_js = "~/Content/js/plugins/extensions/jquery-file-upload/jquery.fileupload.js"; 
                                public const string jquery_iframe_transport_js = "~/Content/js/plugins/extensions/jquery-file-upload/jquery.iframe-transport.js"; 
                            }
                        }
                        public static partial class listjs 
                        {
                            public static class Assets
                            {
                                public const string list_fuzzysearch_min_js = "~/Content/js/plugins/extensions/listjs/list.fuzzysearch.min.js"; 
                                public const string list_min_js = "~/Content/js/plugins/extensions/listjs/list.min.js"; 
                                public const string list_pagination_min_js = "~/Content/js/plugins/extensions/listjs/list.pagination.min.js"; 
                            }
                        }
                        public static partial class long_press 
                        {
                            public static class Assets
                            {
                                public const string jquery_longpress_js = "~/Content/js/plugins/extensions/long-press/jquery.longpress.js"; 
                                public const string jquery_mousewheel_js = "~/Content/js/plugins/extensions/long-press/jquery.mousewheel.js"; 
                                public const string plugins_js = "~/Content/js/plugins/extensions/long-press/plugins.js"; 
                            }
                        }
                        public static class Assets
                        {
                            public const string bootstrap_contextmenu_js = "~/Content/js/plugins/extensions/bootstrap-contextmenu.js"; 
                            public const string bootstrap_treeview_min_js = "~/Content/js/plugins/extensions/bootstrap-treeview.min.js"; 
                            public const string clndr_min_js = "~/Content/js/plugins/extensions/clndr.min.js"; 
                            public const string cropper_min_js = "~/Content/js/plugins/extensions/cropper.min.js"; 
                            public const string datedropper_min_js = "~/Content/js/plugins/extensions/datedropper.min.js"; 
                            public const string dragula_min_js = "~/Content/js/plugins/extensions/dragula.min.js"; 
                            public const string dropzone_min_js = "~/Content/js/plugins/extensions/dropzone.min.js"; 
                            public const string fullcalendar_min_js = "~/Content/js/plugins/extensions/fullcalendar.min.js"; 
                            public const string gcal_js = "~/Content/js/plugins/extensions/gcal.js"; 
                            public const string i18next_min_js = "~/Content/js/plugins/extensions/i18next.min.js"; 
                            public const string i18nextBrowserLanguageDetector_min_js = "~/Content/js/plugins/extensions/i18nextBrowserLanguageDetector.min.js"; 
                            public const string i18nextXHRBackend_min_js = "~/Content/js/plugins/extensions/i18nextXHRBackend.min.js"; 
                            public const string jquery_i18next_min_js = "~/Content/js/plugins/extensions/jquery-i18next.min.js"; 
                            public const string jquery_knob_min_js = "~/Content/js/plugins/extensions/jquery.knob.min.js"; 
                            public const string jquery_mousewheel_min_js = "~/Content/js/plugins/extensions/jquery.mousewheel.min.js"; 
                            public const string jquery_raty_js = "~/Content/js/plugins/extensions/jquery.raty.js"; 
                            public const string jquery_steps_min_js = "~/Content/js/plugins/extensions/jquery.steps.min.js"; 
                            public const string jquery_toolbar_min_js = "~/Content/js/plugins/extensions/jquery.toolbar.min.js"; 
                            public const string lang_all_js = "~/Content/js/plugins/extensions/lang-all.js"; 
                            public const string moment_min_js = "~/Content/js/plugins/extensions/moment.min.js"; 
                            public const string nouislider_min_js = "~/Content/js/plugins/extensions/nouislider.min.js"; 
                            public const string offline_min_js = "~/Content/js/plugins/extensions/offline.min.js"; 
                            public const string sweetalert_min_js = "~/Content/js/plugins/extensions/sweetalert.min.js"; 
                            public const string timedropper_min_js = "~/Content/js/plugins/extensions/timedropper.min.js"; 
                            public const string toastr_min_js = "~/Content/js/plugins/extensions/toastr.min.js"; 
                            public const string transition_js = "~/Content/js/plugins/extensions/transition.js"; 
                            public const string underscore_min_js = "~/Content/js/plugins/extensions/underscore-min.js"; 
                            public const string unslider_min_js = "~/Content/js/plugins/extensions/unslider-min.js"; 
                            public const string wNumb_js = "~/Content/js/plugins/extensions/wNumb.js"; 
                            public const string zoom_min_js = "~/Content/js/plugins/extensions/zoom.min.js"; 
                        }
                    }
                    public static partial class forms 
                    {
                        public static partial class extended 
                        {
                            public static partial class card 
                            {
                                public static class Assets
                                {
                                    public const string jquery_card_js = "~/Content/js/plugins/forms/extended/card/jquery.card.js"; 
                                }
                            }
                            public static partial class formatter 
                            {
                                public static class Assets
                                {
                                    public const string formatter_min_js = "~/Content/js/plugins/forms/extended/formatter/formatter.min.js"; 
                                }
                            }
                            public static partial class inputmask 
                            {
                                public static class Assets
                                {
                                    public const string jquery_inputmask_bundle_min_js = "~/Content/js/plugins/forms/extended/inputmask/jquery.inputmask.bundle.min.js"; 
                                }
                            }
                            public static partial class maxlength 
                            {
                                public static class Assets
                                {
                                    public const string bootstrap_maxlength_js = "~/Content/js/plugins/forms/extended/maxlength/bootstrap-maxlength.js"; 
                                }
                            }
                            public static partial class typeahead 
                            {
                                public static class Assets
                                {
                                    public const string bloodhound_min_js = "~/Content/js/plugins/forms/extended/typeahead/bloodhound.min.js"; 
                                    public const string handlebars_js = "~/Content/js/plugins/forms/extended/typeahead/handlebars.js"; 
                                    public const string typeahead_bundle_min_js = "~/Content/js/plugins/forms/extended/typeahead/typeahead.bundle.min.js"; 
                                }
                            }
                            public static class Assets
                            {
                            }
                        }
                        public static partial class icheck 
                        {
                            public static class Assets
                            {
                                public const string icheck_min_js = "~/Content/js/plugins/forms/icheck/icheck.min.js"; 
                            }
                        }
                        public static partial class listbox 
                        {
                            public static class Assets
                            {
                                public const string jquery_bootstrap_duallistbox_min_js = "~/Content/js/plugins/forms/listbox/jquery.bootstrap-duallistbox.min.js"; 
                            }
                        }
                        public static partial class repeater 
                        {
                            public static class Assets
                            {
                                public const string jquery_repeater_min_js = "~/Content/js/plugins/forms/repeater/jquery.repeater.min.js"; 
                            }
                        }
                        public static partial class select 
                        {
                            public static class Assets
                            {
                                public const string jquery_selectBoxIt_min_js = "~/Content/js/plugins/forms/select/jquery.selectBoxIt.min.js"; 
                                public const string select2_full_min_js = "~/Content/js/plugins/forms/select/select2.full.min.js"; 
                                public const string select2_min_js = "~/Content/js/plugins/forms/select/select2.min.js"; 
                                public const string selectivity_full_min_js = "~/Content/js/plugins/forms/select/selectivity-full.min.js"; 
                                public const string selectize_min_js = "~/Content/js/plugins/forms/select/selectize.min.js"; 
                            }
                        }
                        public static partial class spinner 
                        {
                            public static class Assets
                            {
                                public const string jquery_bootstrap_touchspin_js = "~/Content/js/plugins/forms/spinner/jquery.bootstrap-touchspin.js"; 
                            }
                        }
                        public static partial class tags 
                        {
                            public static class Assets
                            {
                                public const string bootstrap_tagsinput_min_js = "~/Content/js/plugins/forms/tags/bootstrap-tagsinput.min.js"; 
                                public const string form_field_js = "~/Content/js/plugins/forms/tags/form-field.js"; 
                                public const string tagging_min_js = "~/Content/js/plugins/forms/tags/tagging.min.js"; 
                            }
                        }
                        public static partial class toggle 
                        {
                            public static class Assets
                            {
                                public const string bootstrap_checkbox_min_js = "~/Content/js/plugins/forms/toggle/bootstrap-checkbox.min.js"; 
                                public const string bootstrap_switch_min_js = "~/Content/js/plugins/forms/toggle/bootstrap-switch.min.js"; 
                                public const string switchery_min_js = "~/Content/js/plugins/forms/toggle/switchery.min.js"; 
                            }
                        }
                        public static partial class validation 
                        {
                            public static class Assets
                            {
                                public const string jqBootstrapValidation_js = "~/Content/js/plugins/forms/validation/jqBootstrapValidation.js"; 
                                public const string jquery_validate_min_js = "~/Content/js/plugins/forms/validation/jquery.validate.min.js"; 
                            }
                        }
                        public static class Assets
                        {
                        }
                    }
                    public static partial class gallery 
                    {
                        public static partial class masonry 
                        {
                            public static class Assets
                            {
                                public const string masonry_pkgd_min_js = "~/Content/js/plugins/gallery/masonry/masonry.pkgd.min.js"; 
                            }
                        }
                        public static partial class photo_swipe 
                        {
                            public static partial class default_skin 
                            {
                                public static class Assets
                                {
                                    public const string default_skin_css = "~/Content/js/plugins/gallery/photo-swipe/default-skin/default-skin.css";
                                }
                            }
                            public static class Assets
                            {
                                public const string photoswipe_ui_default_min_js = "~/Content/js/plugins/gallery/photo-swipe/photoswipe-ui-default.min.js"; 
                                public const string photoswipe_css = "~/Content/js/plugins/gallery/photo-swipe/photoswipe.css";
                                public const string photoswipe_min_js = "~/Content/js/plugins/gallery/photo-swipe/photoswipe.min.js"; 
                            }
                        }
                        public static class Assets
                        {
                        }
                    }
                    public static partial class pages 
                    {
                        public static partial class lobibox 
                        {
                            public static class Assets
                            {
                                public const string lobibox_min_js = "~/Content/js/plugins/pages/lobibox/lobibox.min.js"; 
                            }
                        }
                        public static partial class lobilist 
                        {
                            public static class Assets
                            {
                                public const string lobilist_js = "~/Content/js/plugins/pages/lobilist/lobilist.js"; 
                            }
                        }
                        public static class Assets
                        {
                        }
                    }
                    public static partial class pagination 
                    {
                        public static class Assets
                        {
                            public const string bootstrap_datepaginator_min_js = "~/Content/js/plugins/pagination/bootstrap-datepaginator.min.js"; 
                            public const string datepicker_js = "~/Content/js/plugins/pagination/datepicker.js"; 
                            public const string jquery_bootpag_min_js = "~/Content/js/plugins/pagination/jquery.bootpag.min.js"; 
                            public const string jquery_twbsPagination_min_js = "~/Content/js/plugins/pagination/jquery.twbsPagination.min.js"; 
                            public const string moment_min_js = "~/Content/js/plugins/pagination/moment.min.js"; 
                        }
                    }
                    public static partial class pickers 
                    {
                        public static partial class colorpicker 
                        {
                            public static class Assets
                            {
                                public const string bootstrap_colorpicker_min_js = "~/Content/js/plugins/pickers/colorpicker/bootstrap-colorpicker.min.js"; 
                            }
                        }
                        public static partial class daterange 
                        {
                            public static class Assets
                            {
                                public const string daterangepicker_js = "~/Content/js/plugins/pickers/daterange/daterangepicker.js"; 
                            }
                        }
                        public static partial class dateTime 
                        {
                            public static class Assets
                            {
                                public const string bootstrap_datetimepicker_min_js = "~/Content/js/plugins/pickers/dateTime/bootstrap-datetimepicker.min.js"; 
                                public const string moment_with_locales_min_js = "~/Content/js/plugins/pickers/dateTime/moment-with-locales.min.js"; 
                            }
                        }
                        public static partial class miniColors 
                        {
                            public static class Assets
                            {
                                public const string jquery_minicolors_min_js = "~/Content/js/plugins/pickers/miniColors/jquery.minicolors.min.js"; 
                            }
                        }
                        public static partial class pickadate 
                        {
                            public static class Assets
                            {
                                public const string legacy_js = "~/Content/js/plugins/pickers/pickadate/legacy.js"; 
                                public const string picker_date_js = "~/Content/js/plugins/pickers/pickadate/picker.date.js"; 
                                public const string picker_js = "~/Content/js/plugins/pickers/pickadate/picker.js"; 
                                public const string picker_time_js = "~/Content/js/plugins/pickers/pickadate/picker.time.js"; 
                            }
                        }
                        public static partial class spectrum 
                        {
                            public static class Assets
                            {
                                public const string spectrum_js = "~/Content/js/plugins/pickers/spectrum/spectrum.js"; 
                            }
                        }
                        public static class Assets
                        {
                        }
                    }
                    public static partial class tables 
                    {
                        public static partial class datatable 
                        {
                            public static class Assets
                            {
                                public const string buttons_bootstrap4_min_js = "~/Content/js/plugins/tables/datatable/buttons.bootstrap4.min.js"; 
                                public const string dataTables_autoFill_min_js = "~/Content/js/plugins/tables/datatable/dataTables.autoFill.min.js"; 
                                public const string dataTables_bootstrap4_min_js = "~/Content/js/plugins/tables/datatable/dataTables.bootstrap4.min.js"; 
                                public const string dataTables_buttons_min_js = "~/Content/js/plugins/tables/datatable/dataTables.buttons.min.js"; 
                                public const string dataTables_colReorder_min_js = "~/Content/js/plugins/tables/datatable/dataTables.colReorder.min.js"; 
                                public const string dataTables_colVis_js = "~/Content/js/plugins/tables/datatable/dataTables.colVis.js"; 
                                public const string dataTables_fixedColumns_min_js = "~/Content/js/plugins/tables/datatable/dataTables.fixedColumns.min.js"; 
                                public const string dataTables_fixedHeader_min_js = "~/Content/js/plugins/tables/datatable/dataTables.fixedHeader.min.js"; 
                                public const string dataTables_keyTable_min_js = "~/Content/js/plugins/tables/datatable/dataTables.keyTable.min.js"; 
                                public const string dataTables_responsive_min_js = "~/Content/js/plugins/tables/datatable/dataTables.responsive.min.js"; 
                                public const string dataTables_rowReorder_min_js = "~/Content/js/plugins/tables/datatable/dataTables.rowReorder.min.js"; 
                                public const string dataTables_select_min_js = "~/Content/js/plugins/tables/datatable/dataTables.select.min.js"; 
                            }
                        }
                        public static partial class handsontable 
                        {
                            public static class Assets
                            {
                                public const string chroma_min_js = "~/Content/js/plugins/tables/handsontable/chroma.min.js"; 
                                public const string handsontable_full_js = "~/Content/js/plugins/tables/handsontable/handsontable.full.js"; 
                                public const string jsgrid_min_js = "~/Content/js/plugins/tables/handsontable/jsgrid.min.js"; 
                                public const string languages_min_js = "~/Content/js/plugins/tables/handsontable/languages.min.js"; 
                            }
                        }
                        public static partial class jsgrid 
                        {
                            public static class Assets
                            {
                                public const string griddata_js = "~/Content/js/plugins/tables/jsgrid/griddata.js"; 
                                public const string jquery_validate_min_js = "~/Content/js/plugins/tables/jsgrid/jquery.validate.min.js"; 
                                public const string jsgrid_min_js = "~/Content/js/plugins/tables/jsgrid/jsgrid.min.js"; 
                            }
                        }
                        public static class Assets
                        {
                            public const string buttons_colVis_min_js = "~/Content/js/plugins/tables/buttons.colVis.min.js"; 
                            public const string buttons_flash_min_js = "~/Content/js/plugins/tables/buttons.flash.min.js"; 
                            public const string buttons_html5_min_js = "~/Content/js/plugins/tables/buttons.html5.min.js"; 
                            public const string buttons_print_min_js = "~/Content/js/plugins/tables/buttons.print.min.js"; 
                            public const string jquery_dataTables_min_js = "~/Content/js/plugins/tables/jquery.dataTables.min.js"; 
                            public const string jszip_min_js = "~/Content/js/plugins/tables/jszip.min.js"; 
                            public const string pdfmake_min_js = "~/Content/js/plugins/tables/pdfmake.min.js"; 
                            public const string vfs_fonts_js = "~/Content/js/plugins/tables/vfs_fonts.js"; 
                        }
                    }
                    public static partial class timeline 
                    {
                        public static class Assets
                        {
                            public const string horizontal_timeline_js = "~/Content/js/plugins/timeline/horizontal-timeline.js"; 
                        }
                    }
                    public static partial class ui 
                    {
                        public static class Assets
                        {
                            public const string headroom_min_js = "~/Content/js/plugins/ui/headroom.min.js"; 
                            public const string jquery_ui_slider_pips_min_js = "~/Content/js/plugins/ui/jquery-ui-slider-pips.min.js"; 
                            public const string jquery_sticky_js = "~/Content/js/plugins/ui/jquery.sticky.js"; 
                            public const string prism_min_js = "~/Content/js/plugins/ui/prism.min.js"; 
                        }
                    }
                    public static class Assets
                    {
                    }
                }
                public static class Assets
                {
                    public const string app_min_js = "~/Content/js/app.min.js"; 
                    public const string vendors_min_js = "~/Content/js/vendors.min.js"; 
                }
            }
            public static partial class old 
            {
                public static partial class css 
                {
                    public static partial class patterns 
                    {
                        public static class Assets
                        {
                        }
                    }
                    public static partial class plugins 
                    {
                        public static partial class awesome_bootstrap_checkbox 
                        {
                            public static class Assets
                            {
                                public const string awesome_bootstrap_checkbox_css = "~/Content/old/css/plugins/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css";
                            }
                        }
                        public static partial class blueimp 
                        {
                            public static partial class css 
                            {
                                public static class Assets
                                {
                                    public const string blueimp_gallery_min_css = "~/Content/old/css/plugins/blueimp/css/blueimp-gallery.min.css";
                                }
                            }
                            public static partial class img 
                            {
                                public static class Assets
                                {
                                }
                            }
                            public static class Assets
                            {
                            }
                        }
                        public static partial class chartist 
                        {
                            public static class Assets
                            {
                                public const string chartist_min_css = "~/Content/old/css/plugins/chartist/chartist.min.css";
                            }
                        }
                        public static partial class chosen 
                        {
                            public static class Assets
                            {
                                public const string chosen_css = "~/Content/old/css/plugins/chosen/chosen.css";
                            }
                        }
                        public static partial class clockpicker 
                        {
                            public static class Assets
                            {
                                public const string clockpicker_css = "~/Content/old/css/plugins/clockpicker/clockpicker.css";
                            }
                        }
                        public static partial class codemirror 
                        {
                            public static class Assets
                            {
                                public const string ambiance_css = "~/Content/old/css/plugins/codemirror/ambiance.css";
                                public const string codemirror_css = "~/Content/old/css/plugins/codemirror/codemirror.css";
                            }
                        }
                        public static partial class colorpicker 
                        {
                            public static class Assets
                            {
                                public const string bootstrap_colorpicker_min_css = "~/Content/old/css/plugins/colorpicker/bootstrap-colorpicker.min.css";
                            }
                        }
                        public static partial class cropper 
                        {
                            public static class Assets
                            {
                                public const string cropper_min_css = "~/Content/old/css/plugins/cropper/cropper.min.css";
                            }
                        }
                        public static partial class dataTables 
                        {
                            public static class Assets
                            {
                                public const string dataTables_bootstrap_css = "~/Content/old/css/plugins/dataTables/dataTables.bootstrap.css";
                                public const string dataTables_responsive_css = "~/Content/old/css/plugins/dataTables/dataTables.responsive.css";
                                public const string dataTables_tableTools_min_css = "~/Content/old/css/plugins/dataTables/dataTables.tableTools.min.css";
                            }
                        }
                        public static partial class daterangepicker 
                        {
                            public static class Assets
                            {
                                public const string daterangepicker_bs3_css = "~/Content/old/css/plugins/daterangepicker/daterangepicker-bs3.css";
                            }
                        }
                        public static partial class dropzone 
                        {
                            public static class Assets
                            {
                                public const string basic_css = "~/Content/old/css/plugins/dropzone/basic.css";
                                public const string dropzone_css = "~/Content/old/css/plugins/dropzone/dropzone.css";
                            }
                        }
                        public static partial class fonts 
                        {
                            public static class Assets
                            {
                            }
                        }
                        public static partial class footable 
                        {
                            public static partial class fonts 
                            {
                                public static class Assets
                                {
                                }
                            }
                            public static class Assets
                            {
                                public const string footable_core_css = "~/Content/old/css/plugins/footable/footable.core.css";
                            }
                        }
                        public static partial class fullcalendar 
                        {
                            public static class Assets
                            {
                                public const string fullcalendar_css = "~/Content/old/css/plugins/fullcalendar/fullcalendar.css";
                                public const string fullcalendar_print_css = "~/Content/old/css/plugins/fullcalendar/fullcalendar.print.css";
                            }
                        }
                        public static partial class iCheck 
                        {
                            public static class Assets
                            {
                                public const string custom_css = "~/Content/old/css/plugins/iCheck/custom.css";
                            }
                        }
                        public static partial class images 
                        {
                            public static partial class bootstrap_colorpicker 
                            {
                                public static class Assets
                                {
                                }
                            }
                            public static class Assets
                            {
                            }
                        }
                        public static partial class ionRangeSlider 
                        {
                            public static class Assets
                            {
                                public const string ion_rangeSlider_css = "~/Content/old/css/plugins/ionRangeSlider/ion.rangeSlider.css";
                                public const string ion_rangeSlider_skinFlat_css = "~/Content/old/css/plugins/ionRangeSlider/ion.rangeSlider.skinFlat.css";
                            }
                        }
                        public static partial class jasny 
                        {
                            public static class Assets
                            {
                                public const string jasny_bootstrap_min_css = "~/Content/old/css/plugins/jasny/jasny-bootstrap.min.css";
                            }
                        }
                        public static partial class jqGrid 
                        {
                            public static class Assets
                            {
                                public const string ui_jqgrid_css = "~/Content/old/css/plugins/jqGrid/ui.jqgrid.css";
                            }
                        }
                        public static partial class jQueryUI 
                        {
                            public static partial class images 
                            {
                                public static class Assets
                                {
                                }
                            }
                            public static class Assets
                            {
                                public const string jquery_ui_1_10_4_custom_min_css = "~/Content/old/css/plugins/jQueryUI/jquery-ui-1.10.4.custom.min.css";
                            }
                        }
                        public static partial class jsTree 
                        {
                            public static class Assets
                            {
                                public const string style_min_css = "~/Content/old/css/plugins/jsTree/style.min.css";
                            }
                        }
                        public static partial class morris 
                        {
                            public static class Assets
                            {
                                public const string morris_0_4_3_min_css = "~/Content/old/css/plugins/morris/morris-0.4.3.min.css";
                            }
                        }
                        public static partial class nouslider 
                        {
                            public static class Assets
                            {
                                public const string jquery_nouislider_css = "~/Content/old/css/plugins/nouslider/jquery.nouislider.css";
                            }
                        }
                        public static partial class persian_datepicker 
                        {
                            public static partial class theme 
                            {
                                public static class Assets
                                {
                                    public const string persian_datepicker_blue_css = "~/Content/old/css/plugins/persian-datepicker/theme/persian-datepicker-blue.css";
                                    public const string persian_datepicker_cheerup_css = "~/Content/old/css/plugins/persian-datepicker/theme/persian-datepicker-cheerup.css";
                                    public const string persian_datepicker_dark_css = "~/Content/old/css/plugins/persian-datepicker/theme/persian-datepicker-dark.css";
                                    public const string persian_datepicker_redblack_css = "~/Content/old/css/plugins/persian-datepicker/theme/persian-datepicker-redblack.css";
                                }
                            }
                            public static class Assets
                            {
                                public const string persian_datepicker_css = "~/Content/old/css/plugins/persian-datepicker/persian-datepicker.css";
                                public const string persian_datepicker_min_css = "~/Content/old/css/plugins/persian-datepicker/persian-datepicker.min.css";
                            }
                        }
                        public static partial class steps 
                        {
                            public static class Assets
                            {
                                public const string jquery_steps_css = "~/Content/old/css/plugins/steps/jquery.steps.css";
                            }
                        }
                        public static partial class summernote 
                        {
                            public static class Assets
                            {
                                public const string summernote_bs3_css = "~/Content/old/css/plugins/summernote/summernote-bs3.css";
                                public const string summernote_css = "~/Content/old/css/plugins/summernote/summernote.css";
                            }
                        }
                        public static partial class sweetalert 
                        {
                            public static class Assets
                            {
                                public const string sweetalert_css = "~/Content/old/css/plugins/sweetalert/sweetalert.css";
                            }
                        }
                        public static partial class switchery 
                        {
                            public static class Assets
                            {
                                public const string switchery_css = "~/Content/old/css/plugins/switchery/switchery.css";
                            }
                        }
                        public static partial class toastr 
                        {
                            public static class Assets
                            {
                                public const string toastr_min_css = "~/Content/old/css/plugins/toastr/toastr.min.css";
                            }
                        }
                        public static class Assets
                        {
                        }
                    }
                    public static class Assets
                    {
                        public const string animate_css = "~/Content/old/css/animate.css";
                        public const string bootstrap_select_min_css = "~/Content/old/css/bootstrap-select.min.css";
                        public const string bootstrap_css = "~/Content/old/css/bootstrap.css";
                        public const string bootstrap_min_css = "~/Content/old/css/bootstrap.min.css";
                        public const string bootstrap_rtl_css = "~/Content/old/css/bootstrap.rtl.css";
                        public const string bootstrap_rtl_min_css = "~/Content/old/css/bootstrap.rtl.min.css";
                        public const string fileinput_min_css = "~/Content/old/css/fileinput.min.css";
                        public const string PagedList_css = "~/Content/old/css/PagedList.css";
                        public const string PersianDatePicker_css = "~/Content/old/css/PersianDatePicker.css";
                        public const string style_css = "~/Content/old/css/style.css";
                        public const string style_rtl_css = "~/Content/old/css/style.rtl.css";
                        public const string sweet_alert_css = "~/Content/old/css/sweet-alert.css";
                    }
                }
                public static partial class font_awesome 
                {
                    public static partial class css 
                    {
                        public static class Assets
                        {
                            public const string font_awesome_css = "~/Content/old/font-awesome/css/font-awesome.css";
                            public const string font_awesome_min_css = "~/Content/old/font-awesome/css/font-awesome.min.css";
                        }
                    }
                    public static partial class fonts 
                    {
                        public static class Assets
                        {
                        }
                    }
                    public static class Assets
                    {
                    }
                }
                public static partial class fonts 
                {
                    public static partial class BBCNasim 
                    {
                        public static class Assets
                        {
                        }
                    }
                    public static partial class BKoodak 
                    {
                        public static class Assets
                        {
                        }
                    }
                    public static partial class BNazanin 
                    {
                        public static class Assets
                        {
                        }
                    }
                    public static partial class BYekan 
                    {
                        public static class Assets
                        {
                        }
                    }
                    public static partial class DriodArabicNaskh 
                    {
                        public static partial class Bold 
                        {
                            public static class Assets
                            {
                            }
                        }
                        public static partial class Regular 
                        {
                            public static class Assets
                            {
                            }
                        }
                        public static class Assets
                        {
                        }
                    }
                    public static partial class DroidArabicKufi 
                    {
                        public static partial class Bold 
                        {
                            public static class Assets
                            {
                            }
                        }
                        public static partial class Regular 
                        {
                            public static class Assets
                            {
                            }
                        }
                        public static class Assets
                        {
                        }
                    }
                    public static partial class IRANSansWeb 
                    {
                        public static class Assets
                        {
                        }
                    }
                    public static class Assets
                    {
                    }
                }
                public static partial class img 
                {
                    public static partial class gallery 
                    {
                        public static class Assets
                        {
                        }
                    }
                    public static partial class landing 
                    {
                        public static class Assets
                        {
                        }
                    }
                    public static class Assets
                    {
                    }
                }
                public static partial class js 
                {
                    public static partial class demo 
                    {
                        public static class Assets
                        {
                            public const string chartjs_demo_js = "~/Content/old/js/demo/chartjs-demo.js"; 
                            public const string flot_demo_js = "~/Content/old/js/demo/flot-demo.js"; 
                            public const string morris_demo_js = "~/Content/old/js/demo/morris-demo.js"; 
                            public const string peity_demo_js = "~/Content/old/js/demo/peity-demo.js"; 
                            public const string rickshaw_demo_js = "~/Content/old/js/demo/rickshaw-demo.js"; 
                            public const string sparkline_demo_js = "~/Content/old/js/demo/sparkline-demo.js"; 
                        }
                    }
                    public static partial class plugins 
                    {
                        public static partial class blueimp 
                        {
                            public static class Assets
                            {
                                public const string jquery_blueimp_gallery_min_js = "~/Content/old/js/plugins/blueimp/jquery.blueimp-gallery.min.js"; 
                            }
                        }
                        public static partial class chartist 
                        {
                            public static class Assets
                            {
                                public const string chartist_min_js = "~/Content/old/js/plugins/chartist/chartist.min.js"; 
                            }
                        }
                        public static partial class chartJs 
                        {
                            public static class Assets
                            {
                                public const string Chart_min_js = "~/Content/old/js/plugins/chartJs/Chart.min.js"; 
                            }
                        }
                        public static partial class chosen 
                        {
                            public static class Assets
                            {
                                public const string chosen_jquery_js = "~/Content/old/js/plugins/chosen/chosen.jquery.js"; 
                            }
                        }
                        public static partial class clockpicker 
                        {
                            public static class Assets
                            {
                                public const string clockpicker_js = "~/Content/old/js/plugins/clockpicker/clockpicker.js"; 
                            }
                        }
                        public static partial class codemirror 
                        {
                            public static partial class mode 
                            {
                                public static partial class javascript 
                                {
                                    public static class Assets
                                    {
                                        public const string javascript_js = "~/Content/old/js/plugins/codemirror/mode/javascript/javascript.js"; 
                                    }
                                }
                                public static class Assets
                                {
                                }
                            }
                            public static class Assets
                            {
                                public const string codemirror_js = "~/Content/old/js/plugins/codemirror/codemirror.js"; 
                            }
                        }
                        public static partial class colorpicker 
                        {
                            public static class Assets
                            {
                                public const string bootstrap_colorpicker_min_js = "~/Content/old/js/plugins/colorpicker/bootstrap-colorpicker.min.js"; 
                            }
                        }
                        public static partial class cropper 
                        {
                            public static class Assets
                            {
                                public const string cropper_min_js = "~/Content/old/js/plugins/cropper/cropper.min.js"; 
                            }
                        }
                        public static partial class dataTables 
                        {
                            public static class Assets
                            {
                                public const string dataTables_bootstrap_js = "~/Content/old/js/plugins/dataTables/dataTables.bootstrap.js"; 
                                public const string dataTables_responsive_js = "~/Content/old/js/plugins/dataTables/dataTables.responsive.js"; 
                                public const string dataTables_tableTools_min_js = "~/Content/old/js/plugins/dataTables/dataTables.tableTools.min.js"; 
                                public const string jquery_dataTables_js = "~/Content/old/js/plugins/dataTables/jquery.dataTables.js"; 
                            }
                        }
                        public static partial class daterangepicker 
                        {
                            public static class Assets
                            {
                                public const string daterangepicker_js = "~/Content/old/js/plugins/daterangepicker/daterangepicker.js"; 
                            }
                        }
                        public static partial class diff_match_patch 
                        {
                            public static partial class javascript 
                            {
                                public static class Assets
                                {
                                    public const string diff_match_patch_js = "~/Content/old/js/plugins/diff_match_patch/javascript/diff_match_patch.js"; 
                                }
                            }
                            public static class Assets
                            {
                            }
                        }
                        public static partial class dropzone 
                        {
                            public static class Assets
                            {
                                public const string dropzone_js = "~/Content/old/js/plugins/dropzone/dropzone.js"; 
                            }
                        }
                        public static partial class easypiechart 
                        {
                            public static class Assets
                            {
                                public const string jquery_easypiechart_js = "~/Content/old/js/plugins/easypiechart/jquery.easypiechart.js"; 
                            }
                        }
                        public static partial class flot 
                        {
                            public static class Assets
                            {
                                public const string curvedLines_js = "~/Content/old/js/plugins/flot/curvedLines.js"; 
                                public const string jquery_flot_js = "~/Content/old/js/plugins/flot/jquery.flot.js"; 
                                public const string jquery_flot_pie_js = "~/Content/old/js/plugins/flot/jquery.flot.pie.js"; 
                                public const string jquery_flot_resize_js = "~/Content/old/js/plugins/flot/jquery.flot.resize.js"; 
                                public const string jquery_flot_spline_js = "~/Content/old/js/plugins/flot/jquery.flot.spline.js"; 
                                public const string jquery_flot_symbol_js = "~/Content/old/js/plugins/flot/jquery.flot.symbol.js"; 
                                public const string jquery_flot_time_js = "~/Content/old/js/plugins/flot/jquery.flot.time.js"; 
                                public const string jquery_flot_tooltip_min_js = "~/Content/old/js/plugins/flot/jquery.flot.tooltip.min.js"; 
                            }
                        }
                        public static partial class footable 
                        {
                            public static class Assets
                            {
                                public const string footable_all_min_js = "~/Content/old/js/plugins/footable/footable.all.min.js"; 
                                public const string footable_js = "~/Content/old/js/plugins/footable/footable.js"; 
                            }
                        }
                        public static partial class fullcalendar 
                        {
                            public static class Assets
                            {
                                public const string fullcalendar_js = "~/Content/old/js/plugins/fullcalendar/fullcalendar.js"; 
                                public const string fullcalendar_min_js = "~/Content/old/js/plugins/fullcalendar/fullcalendar.min.js"; 
                                public const string moment_min_js = "~/Content/old/js/plugins/fullcalendar/moment.min.js"; 
                                public const string pwt_date_js = "~/Content/old/js/plugins/fullcalendar/pwt-date.js"; 
                            }
                        }
                        public static partial class gritter 
                        {
                            public static partial class images 
                            {
                                public static class Assets
                                {
                                }
                            }
                            public static class Assets
                            {
                                public const string jquery_gritter_css = "~/Content/old/js/plugins/gritter/jquery.gritter.css";
                                public const string jquery_gritter_min_js = "~/Content/old/js/plugins/gritter/jquery.gritter.min.js"; 
                            }
                        }
                        public static partial class iCheck 
                        {
                            public static class Assets
                            {
                                public const string icheck_min_js = "~/Content/old/js/plugins/iCheck/icheck.min.js"; 
                            }
                        }
                        public static partial class idle_timer 
                        {
                            public static class Assets
                            {
                                public const string idle_timer_min_js = "~/Content/old/js/plugins/idle-timer/idle-timer.min.js"; 
                            }
                        }
                        public static partial class ionRangeSlider 
                        {
                            public static class Assets
                            {
                                public const string ion_rangeSlider_min_js = "~/Content/old/js/plugins/ionRangeSlider/ion.rangeSlider.min.js"; 
                            }
                        }
                        public static partial class jasny 
                        {
                            public static class Assets
                            {
                                public const string jasny_bootstrap_min_js = "~/Content/old/js/plugins/jasny/jasny-bootstrap.min.js"; 
                            }
                        }
                        public static partial class jeditable 
                        {
                            public static class Assets
                            {
                                public const string jquery_jeditable_js = "~/Content/old/js/plugins/jeditable/jquery.jeditable.js"; 
                            }
                        }
                        public static partial class jqGrid 
                        {
                            public static partial class i18n 
                            {
                                public static class Assets
                                {
                                    public const string grid_locale_en_js = "~/Content/old/js/plugins/jqGrid/i18n/grid.locale-en.js"; 
                                }
                            }
                            public static class Assets
                            {
                                public const string jquery_jqGrid_min_js = "~/Content/old/js/plugins/jqGrid/jquery.jqGrid.min.js"; 
                            }
                        }
                        public static partial class jquery_ui 
                        {
                            public static class Assets
                            {
                                public const string jquery_ui_min_js = "~/Content/old/js/plugins/jquery-ui/jquery-ui.min.js"; 
                            }
                        }
                        public static partial class jsKnob 
                        {
                            public static class Assets
                            {
                                public const string jquery_knob_rtl_js = "~/Content/old/js/plugins/jsKnob/jquery.knob-rtl.js"; 
                                public const string jquery_knob_js = "~/Content/old/js/plugins/jsKnob/jquery.knob.js"; 
                            }
                        }
                        public static partial class jsTree 
                        {
                            public static class Assets
                            {
                                public const string jstree_min_js = "~/Content/old/js/plugins/jsTree/jstree.min.js"; 
                            }
                        }
                        public static partial class jvectormap 
                        {
                            public static class Assets
                            {
                                public const string jquery_jvectormap_2_0_2_min_js = "~/Content/old/js/plugins/jvectormap/jquery-jvectormap-2.0.2.min.js"; 
                                public const string jquery_jvectormap_world_mill_en_js = "~/Content/old/js/plugins/jvectormap/jquery-jvectormap-world-mill-en.js"; 
                            }
                        }
                        public static partial class metisMenu 
                        {
                            public static class Assets
                            {
                                public const string jquery_metisMenu_js = "~/Content/old/js/plugins/metisMenu/jquery.metisMenu.js"; 
                            }
                        }
                        public static partial class morris 
                        {
                            public static class Assets
                            {
                                public const string morris_js = "~/Content/old/js/plugins/morris/morris.js"; 
                                public const string raphael_2_1_0_min_js = "~/Content/old/js/plugins/morris/raphael-2.1.0.min.js"; 
                            }
                        }
                        public static partial class nestable 
                        {
                            public static class Assets
                            {
                                public const string jquery_nestable_js = "~/Content/old/js/plugins/nestable/jquery.nestable.js"; 
                            }
                        }
                        public static partial class nouslider 
                        {
                            public static class Assets
                            {
                                public const string jquery_nouislider_min_js = "~/Content/old/js/plugins/nouslider/jquery.nouislider.min.js"; 
                            }
                        }
                        public static partial class pace 
                        {
                            public static class Assets
                            {
                                public const string pace_min_js = "~/Content/old/js/plugins/pace/pace.min.js"; 
                            }
                        }
                        public static partial class peity 
                        {
                            public static class Assets
                            {
                                public const string jquery_peity_min_js = "~/Content/old/js/plugins/peity/jquery.peity.min.js"; 
                            }
                        }
                        public static partial class persian_datepicker 
                        {
                            public static class Assets
                            {
                                public const string persian_date_js = "~/Content/old/js/plugins/persian-datepicker/persian-date.js"; 
                                public const string persian_datepicker_js = "~/Content/old/js/plugins/persian-datepicker/persian-datepicker.js"; 
                                public const string persian_datepicker_min_js = "~/Content/old/js/plugins/persian-datepicker/persian-datepicker.min.js"; 
                            }
                        }
                        public static partial class preetyTextDiff 
                        {
                            public static class Assets
                            {
                                public const string jquery_pretty_text_diff_min_js = "~/Content/old/js/plugins/preetyTextDiff/jquery.pretty-text-diff.min.js"; 
                            }
                        }
                        public static partial class rickshaw 
                        {
                            public static partial class vendor 
                            {
                                public static class Assets
                                {
                                    public const string d3_v3_js = "~/Content/old/js/plugins/rickshaw/vendor/d3.v3.js"; 
                                }
                            }
                            public static class Assets
                            {
                                public const string rickshaw_min_js = "~/Content/old/js/plugins/rickshaw/rickshaw.min.js"; 
                            }
                        }
                        public static partial class slimscroll 
                        {
                            public static class Assets
                            {
                                public const string jquery_slimscroll_min_js = "~/Content/old/js/plugins/slimscroll/jquery.slimscroll.min.js"; 
                            }
                        }
                        public static partial class sparkline 
                        {
                            public static class Assets
                            {
                                public const string jquery_sparkline_min_js = "~/Content/old/js/plugins/sparkline/jquery.sparkline.min.js"; 
                            }
                        }
                        public static partial class staps 
                        {
                            public static class Assets
                            {
                                public const string jquery_steps_min_js = "~/Content/old/js/plugins/staps/jquery.steps.min.js"; 
                            }
                        }
                        public static partial class summernote 
                        {
                            public static class Assets
                            {
                                public const string summernote_min_js = "~/Content/old/js/plugins/summernote/summernote.min.js"; 
                            }
                        }
                        public static partial class sweetalert 
                        {
                            public static class Assets
                            {
                                public const string sweetalert_min_js = "~/Content/old/js/plugins/sweetalert/sweetalert.min.js"; 
                            }
                        }
                        public static partial class switchery 
                        {
                            public static class Assets
                            {
                                public const string switchery_js = "~/Content/old/js/plugins/switchery/switchery.js"; 
                            }
                        }
                        public static partial class tinycon 
                        {
                            public static class Assets
                            {
                                public const string tinycon_min_js = "~/Content/old/js/plugins/tinycon/tinycon.min.js"; 
                            }
                        }
                        public static partial class toastr 
                        {
                            public static class Assets
                            {
                                public const string toastr_min_js = "~/Content/old/js/plugins/toastr/toastr.min.js"; 
                            }
                        }
                        public static partial class validate 
                        {
                            public static class Assets
                            {
                                public const string jquery_validate_min_js = "~/Content/old/js/plugins/validate/jquery.validate.min.js"; 
                            }
                        }
                        public static partial class video 
                        {
                            public static class Assets
                            {
                                public const string responsible_video_js = "~/Content/old/js/plugins/video/responsible-video.js"; 
                            }
                        }
                        public static partial class wow 
                        {
                            public static class Assets
                            {
                                public const string wow_min_js = "~/Content/old/js/plugins/wow/wow.min.js"; 
                            }
                        }
                        public static class Assets
                        {
                        }
                    }
                    public static class Assets
                    {
                        public const string bootstrap_select_min_js = "~/Content/old/js/bootstrap-select.min.js"; 
                        public const string bootstrap_js = "~/Content/old/js/bootstrap.js"; 
                        public const string bootstrap_min_js = "~/Content/old/js/bootstrap.min.js"; 
                        public const string jquery_2_1_1_js = "~/Content/old/js/jquery-2.1.1.js"; 
                        public const string jquery_ui_1_10_4_min_js = "~/Content/old/js/jquery-ui-1.10.4.min.js"; 
                        public const string jquery_ui_custom_min_js = "~/Content/old/js/jquery-ui.custom.min.js"; 
                        public const string rada_js = "~/Content/old/js/rada.js"; 
                    }
                }
                public static class Assets
                {
                }
            }
            public static partial class scss 
            {
                public static partial class components 
                {
                    public static partial class tables 
                    {
                        public static class Assets
                        {
                        }
                    }
                    public static class Assets
                    {
                    }
                }
                public static class Assets
                {
                }
            }
            public static partial class Upload 
            {
                public static partial class Image 
                {
                    public static partial class Avatar 
                    {
                        public static class Assets
                        {
                        }
                    }
                    public static class Assets
                    {
                    }
                }
                public static class Assets
                {
                }
            }
            public static class Assets
            {
            }
        }
    }
}

[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
internal static class T4MVCHelpers {
    // You can change the ProcessVirtualPath method to modify the path that gets returned to the client.
    // e.g. you can prepend a domain, or append a query string:
    //      return "http://localhost" + path + "?foo=bar";
    private static string ProcessVirtualPathDefault(string virtualPath) {
        // The path that comes in starts with ~/ and must first be made absolute
        string path = VirtualPathUtility.ToAbsolute(virtualPath);
        
        // Add your own modifications here before returning the path
        return path;
    }

    // Calling ProcessVirtualPath through delegate to allow it to be replaced for unit testing
    public static Func<string, string> ProcessVirtualPath = ProcessVirtualPathDefault;

    // Calling T4Extension.TimestampString through delegate to allow it to be replaced for unit testing and other purposes
    public static Func<string, string> TimestampString = System.Web.Mvc.T4Extensions.TimestampString;

    // Logic to determine if the app is running in production or dev environment
    public static bool IsProduction() { 
        return (HttpContext.Current != null && !HttpContext.Current.IsDebuggingEnabled); 
    }
}





#endregion T4MVC
#pragma warning restore 1591, 3008, 3009, 0108, 0114


